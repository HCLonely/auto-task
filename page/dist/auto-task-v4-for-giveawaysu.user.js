// ==UserScript==
// @name               auto-task-v4-for-giveawaysu
// @namespace          auto-task-v4-for-giveawaysu
// @version            4.7.9
// @description        赠Key站自动任务
// @author             HCLonely
// @license            MIT
// @run-at             document-start
// @homepage           https://auto-task-doc.js.org/
// @supportURL         https://github.com/HCLonely/auto-task-v4/issues
// @updateURL          https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @installURL         https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @downloadURL        https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @icon               https://auto-task-v4.hclonely.com/favicon.ico

// @include            *://giveaway.su/giveaway/view/*
// @include            *://discord.com/*
// @include            *://www.twitch.tv/*
// @include            *://www.youtube.com/*
// @include            *://*.reddit.com/*
// @include            *://steamcommunity.com/id/*
// @include            *://store.steampowered.com/*

// @grant              GM_addStyle
// @grant              GM_setValue
// @grant              GM_getValue
// @grant              GM_xmlhttpRequest
// @grant              GM_registerMenuCommand
// @grant              GM_info
// @grant              GM_getResourceText
// @grant              GM_openInTab
// @grant              GM_cookie
// @grant              GM_addValueChangeListener
// @grant              GM_removeValueChangeListener
// @grant              GM_setClipboard
// @grant              GM_listValues
// @grant              GM_deleteValue
// @grant              unsafeWindow
// @grant              window.close
// @grant              window.localStorage

// @connect            cdn.jsdelivr.net
// @connect            store.steampowered.com
// @connect            steamcommunity.com
// @connect            youtube.com
// @connect            www.youtube.com
// @connect            facebook.com
// @connect            instagram.com
// @connect            vk.com
// @connect            twitch.tv
// @connect            www.twitch.tv
// @connect            gql.twitch.tv
// @connect            github.com
// @connect            discordapp.com
// @connect            discord.gg
// @connect            discord.com
// @connect            www.reddit.com
// @connect            oauth.reddit.com
// @connect            raw.githubusercontent.com
// @connect            t.me
// @connect            bit.ly
// @connect            giveaway.su
// @connect            google.com
// @connect            givee.club
// @connect            *
// @require            https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js
// @require            https://cdn.jsdelivr.net/npm/js-cookie@3.0.1/dist/js.cookie.min.js
// @require            https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.5/runtime.min.js
// @require            https://cdn.jsdelivr.net/npm/js-sha1@0.6.0/src/sha1.min.js
// @require            https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js
// @resource           style https://cdn.jsdelivr.net/npm/sweetalert2@11.3.5/dist/sweetalert2.min.css
// @require            https://cdn.jsdelivr.net/npm/keyboardjs@2.6.4/dist/keyboard.min.js

// @noframes
// ==/UserScript==

console.log('%c%s', 'color:blue', 'Auto Task GS特供脚本开始加载');
(()=>{var __webpack_modules__={314:function(module){module.exports=function(cssWithMappingToString){var list=[];return list.toString=function(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(0<item[5].length?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0!==item[5]&&(item[1]="@layer".concat(0<item[5].length?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]&&(item[1]="@media ".concat(item[2]," {").concat(item[1],"}")),item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},601:function(module){module.exports=function(i){return i[1]}},738:function(module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{A:function(){return __WEBPACK_DEFAULT_EXPORT__}});var __webpack_exports__=__webpack_require__(601),__webpack_exports__=__webpack_require__.n(__webpack_exports__),_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(314),__webpack_require__=__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(__webpack_exports__());__webpack_require__.push([module.id,"#auto-task-info li{text-align:left}#auto-task-info li a.high-light{color:#00aeff;font-weight:bold}#auto-task-info .success{color:green}#auto-task-info .error{color:red}#auto-task-info .warning{color:blue}#auto-task-info .info{color:#ff0}",""]);let __WEBPACK_DEFAULT_EXPORT__=__webpack_require__.toString()},991:function(__unused_webpack_module,exports){(e=>{function l(e){return"[object Object]"===o(e)}function n(e){return/^\d+$/.test(e+"")}function t(e){return/^\d+\.\d+$/.test(e+"")}function o(e){return Object.prototype.toString.call(e)}var r=function(){return(r=Object.assign||function(e){for(var n,t=1,o=arguments.length;t<o;t++)for(var r in n=arguments[t])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)};function i(e,n,t){if(t||2===arguments.length)for(var o,r=0,i=n.length;r<i;r++)!o&&r in n||((o=o||Array.prototype.slice.call(n,0,r))[r]=n[r]);return e.concat(o||Array.prototype.slice.call(n))}a.prototype.init=function(){try{this.getSystemName(),this.getBrowserName()}catch(e){console.warn("[UA formatter error] ".concat(e))}},a.prototype.getEngine=function(){var e=this.agent;return-1!==e.indexOf("Trident")?"Trident":-1!==e.indexOf("Firefox")?"Gecko":-1!==e.indexOf("Presto")?"Presto":"WebKit"},a.prototype.getSystemName=function(){var e,n=(this.agent.match(/^[a-z]+\/\d+\.\d+\s?\(([a-z\d\s:;./_-]+)\)/i)||[])[1];try{var t,o="";if(/Windows/i.test(n)){var r=(n.match(/NT\s(\d+\.\d+)/)||[])[1];switch(this.info.os="Windows",r){case"6.3":o="8.1";break;case"6.2":o="8";break;case"6.1":o="7";break;case"5.2":case"5.1":o="XP";break;default:o=r}this.info.device="PC",this.info.osVersion=o}else/^Macintosh/i.test(n)?(o=(n.match(/X\s((\d+(_|\.))+\d+)/)||[])[1],this.info.os="Macintosh",this.info.device="PC",this.info.osVersion=null!=(e=null==o?void 0:o.replace(/_/g,"."))?e:"Unknown"):/^iPad/i.test(n)?(o=(n.match(/((\d+_)+\d+)/)||[])[1],this.info.os="iPad",this.info.device="Tablet",this.info.osVersion=o.replace(/_/g,".")):/^iPhone/i.test(n)?(o=(n.match(/((\d+_)+\d+)/)||[])[1],this.info.os="iPhone",this.info.device="Mobile",this.info.osVersion=o.replace(/_/g,".")):-1!==n.indexOf("Android")?(t=(n.match(/Android\s((\d+\.?)+\d?)/)||[])[1],this.info.device="Mobile",this.info.os="Android",this.info.osVersion=t):(/Linux\s[a-z\d_]+/.test(n)?this.info.os="Linux":this.info.os="Unknown",this.info.osVersion="Unknown")}catch(e){this.info.os="Unknown",this.info.osVersion="Unknown"}},a.prototype.getBrowserName=function(){var e=Object.keys(this.browserNameMap).map(function(e){return new RegExp("".concat(e,"(\\/|\\s)(\\d+\\.)+\\d+"))}),n=1<(n=(this.agent.match(/[a-z\d]+(\/|\s)(\d+\.)+\d+/gi)||[]).filter(function(n){return-1!==e.findIndex(function(e){return e.test(n)})})).length&&!/^Safari/.test(n[n.length-1])?n.reverse():n;this.info=r(r({},this.info),this._formatBrowserVersion(n[0]))},a.prototype._formatBrowserVersion=function(e){var n,t,o,r;try{for(var i=null!=(t=null==(n=e.match(/(?<name>[a-z\d]+)(\/|\s)(?<version>(\d+\.)+\d+)/i))?void 0:n.groups)?t:{},s=i.name,a=i.version,c={},u=0,f=Object.entries(this.browserNameMap);u<f.length;u++){var l=f[u],d=l[0],h=l[1];if(new RegExp(d).test(s)){c=h;break}}var p={browserVersion:null!=a?a:"Unknown",browser:null!=(o=c.en)?o:"Unknown",browserZH:null!=(r=(null==c?void 0:c.zh)||c.en)?r:"Unknown"};return"Trident"===s&&(p.browserVersion={"4.0":8,"5.0":9,"6.0":10,"7.0":11}[a]),p}catch(e){return console.warn("[UA formatter error] ".concat(e)),{browser:"Unknown",browserVersion:"Unknown"}}};var s=a;function a(e){this.agent="",this.info={browser:"",browserZH:"",browserVersion:"",os:"",osVersion:"",device:"Unknown",engine:"WebKit"},this.browserNameMap={MicroMessenger:{en:"MicroMessenger",zh:"微信"},MetaSr:{en:"MetaSr",zh:"搜狗浏览器"},"QQ(Browser)?":{en:"QQBrowser",zh:"QQ浏览器"},UCBrowser:{en:"UCBrowser",zh:"UC浏览器"},"2345Explorer":{en:"2345Explorer",zh:"2345极速浏览器"},Mb2345Browser:{en:"Mb2345Browser",zh:"2345手机浏览器"},Trident:{en:"Internet Explorer"},"Edge?":{en:"Edge"},OPR:{en:"Opera"},Vivaldi:{en:"Vivaldi"},Firefox:{en:"Firefox"},Chrome:{en:"Chrome"},Safari:{en:"Safari"}},this.agent=e,this.init();var n=(e=this.info).browser,t=e.browserVersion,e=e.osVersion;this.info=r(r({},this.info),{engine:this.getEngine(),browserVersion:"Safari"===n?e:t})}u.prototype.init=function(){var t;"undefined"!=typeof window&&(t={},document.cookie.split(/;\s/).forEach(function(e){var n=(e=e.split(/=/))[0],e=e[1];t[n]=e}),this.cookies=t)},u.prototype.getItem=function(e){return this.cookies[e]},u.prototype.getAllItems=function(){return this.cookies},u.prototype.setItem=function(e,n,t,o,r,i){document.cookie="".concat(e,"=").concat(n).concat(t?"; expires=".concat(t):"").concat(o?"; path=".concat(o):"").concat(r?"; domain=".concat(r):"").concat(i?"; secure":"")};var c=u;function u(){this.cookies={},this.init()}function d(e,n){var t=i(i([],n||[],!0),["_"],!1).join("|");return e.replace(new RegExp("((".concat(t,")[a-z])+"),"g"),function(e,n){return n.replace(new RegExp(t),"").toLocaleUpperCase()})}function f(e){return e.replace(/(-\w)/g,function(e){return e.substr(1,1).toUpperCase()}).replace(/^(\w)/,function(e){return e.toUpperCase()})}e.countDown=function e(n,t,o,r){if(!window)throw new Error("window is not defined.");if(0<n)return r&&r(),n--,window[t]=window.setTimeout(function(){e(n,t,o,r)},1e3),function(){return clearTimeout(window[t])};clearTimeout(window[t]),o&&o()},e.createRandomID=function(e){void 0===e&&(e=12);for(var n=[],t="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),o=t.length,r=0;r<e;r++)n.push(t[Math.round(Math.random()*o)]);return n.join("")},e.dCookie=function(){return new c},e.debounce=function(o,r,i){var s;return void 0===r&&(r=0),void 0===i&&(i=!1),function(){for(var e=this,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];i?o.apply(this,n):(clearTimeout(s),s=setTimeout(function(){o.apply(e,n)},r))}},e.debounceDecorator=function(r,i){var s;return function(e,n,t){var o=t.value;return t.value=function(){for(var e=this,n=[],t=0;t<arguments.length;t++)n[t]=arguments[t];i?o.apply(this,n):(clearTimeout(s),s=setTimeout(function(){o.apply(e,n)},r))},t}},e.debugWarn=function(e,n){console.warn("[".concat(e,"]: ").concat(n))},e.deepCopy=function e(n){if(l(n)||Array.isArray(n)){var t,o=Array.isArray(n)?[]:{};for(t in n)o[t]=e(n[t]);return o}return n},e.deleteArrayItems=function(n,e,t){return"object"==typeof e[0]?e.filter(function(e){return!n.includes(e[t])}):e.filter(function(e){return!n.includes(e)})},e.formatQueryParams=function(e){if(!(e=null==(e=/\?(?<params>(.*)=.+)/.exec(decodeURIComponent(e)))?void 0:e.groups))return{};for(var n=e.params.split("&"),o={},t=0;t<n.length;t++)n[t].replace(/([^?&]*)=([^?&]*)/,function(e,n,t){return o[n]=t,e});return o},e.formatThousandth=function(e){var n=(e="".concat(e).split("."))[0],e=void 0===(e=e[1])?"":e,n=n.replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,");return"".concat(n).concat(e?".".concat(e):"")},e.generateTree=function e(n,t,o,r){for(var i=[],s=0;s<n.length;s++){var a=n[s];a[o]===t&&(i.push(a),a.children=e(n,a[null!=r?r:"id"],o,r))}return i},e.isBoolean=function(e){return"boolean"==typeof e},e.isEmpty=function(e){return Array.isArray(e)?0===e.length:l(e)?0===Object.keys(e).length:["[object Set]","[object Map]"].includes(o(e))?0===e.size:[null,void 0,""].includes(e)},e.isFloatNumber=t,e.isFunction=function(e){return"[object Function]"===o(e)},e.isImageUrl=function(e){return/\.((png)|(jpe?g)|(gif)|(svg)|(webp))$/gi.test(e)},e.isInteger=n,e.isNumber=function(e){return n(e)||t(e)},e.isObject=l,e.isPromise=function(e){return"[object Promise]"===o(e)},e.isRegexp=function(e){return"[object RegExp]"===o(e)},e.objectKeyToCamelCase=function e(n,t,o){if(Array.isArray(n))for(var r=[],i=0;i<n.length;i++)r[i]=e(t&&n[i][t]?n[i][t]:n[i],t,o);else if(l(n))for(var r={},s=t&&n[t]?n[t]:n,a=0,c=Object.entries(s);a<c.length;a++){var u=(f=c[a])[0],f=f[1];Array.isArray(f)||l(s)?r[d(u,o)]=e(f,t,o):r[d(u,o)]=f}else r=n;return r},e.pickLastItem=function(e){return e[e.length-1]},e.realType=o,e.searchParams=function(e,n){return void 0===e&&(e=null==location?void 0:location.search),new URLSearchParams(e).get(n)},e.throwError=function(e,n){throw"[".concat(f(e),"]: ").concat(n)},e.toBoolean=function(e){return"true"===e||"false"!==e&&Boolean(e)},e.toLowerCamelCase=d,e.toPascalCase=f,e.toUnderline=function(e){return e.replace(/([A-Z])/g,function(e){return"_".concat(e.toLocaleLowerCase())})},e.ua=function(e){return void 0===e&&(e=navigator.userAgent),new s(e).info}})(exports)}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];return void 0!==cachedModule||(cachedModule=__webpack_module_cache__[moduleId]={id:moduleId,exports:{}},__webpack_modules__[moduleId].call(cachedModule.exports,cachedModule,cachedModule.exports,__webpack_require__)),cachedModule.exports}__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=function(exports,definition){for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)};{var external_Swal_namespaceObject=Swal,external_Swal_default=__webpack_require__.n(external_Swal_namespaceObject),external_Swal_namespaceObject=Cookies,external_Cookies_default=__webpack_require__.n(external_Swal_namespaceObject),javascript_utils_umd_min=__webpack_require__(991);function throwError_throwError(error,name){window.TRACE&&console.trace("%cAuto-Task[Debug]:","color:blue"),external_Swal_default().fire({title:i18n("errorReport"),icon:"error",showCancelButton:!0,confirmButtonText:i18n("toGithub"),showDenyButton:!0,denyButtonText:i18n("toKeylol"),cancelButtonText:i18n("close")}).then(({isDenied,isConfirmed})=>{isConfirmed?GM_openInTab(`https://github.com/HCLonely/auto-task-v4/issues/new?title=${encodeURIComponent("[BUG] 脚本报错: "+name)}&labels=bug&template=bug_report.yml&website=${encodeURIComponent(window.location.href)}&browser=${encodeURIComponent(JSON.stringify((0,javascript_utils_umd_min.ua)(),null,4))}&manager=${encodeURIComponent(GM_info.scriptHandler+" "+GM_info.version)}&user-script=${encodeURIComponent(GM_info.script.version)}&logs=${encodeURIComponent(error.stack||"null")}&run-logs=`+encodeURIComponent($.makeArray($("#auto-task-info>li")).map(element=>element.innerText).join("\n")),{active:!0}):isDenied&&(isConfirmed=`错误链接: [url=${window.location.href}]${window.location.href}[/url]

环境:

[code]${JSON.stringify((0,javascript_utils_umd_min.ua)(),null,4)}[/code]

脚本管理器: ${GM_info.scriptHandler} ${GM_info.version}
脚本版本: ${GM_info.script.version}

报错信息:
[code]${error.stack}[/code]

执行日志:
[code]${$.makeArray($("#auto-task-info>li")).map(element=>element.innerText).join("\n")}[/code]`,GM_setClipboard(isConfirmed),external_Swal_default().fire({title:i18n("copySuccess"),icon:"success",confirmButtonText:i18n("ok")}).then(()=>{GM_openInTab("https://keylol.com/forum.php?mod=post&action=reply&fid=319&tid=777450",{active:!0})}))}),console.log("%c%s","color:white;background:red",`Auto-Task[Error]: ${name}
`+error.stack)}let httpRequest_httpRequest=async(options,times=0)=>{window.TRACE&&console.trace("%cAuto-Task[Debug]:","color:blue");try{var result=await new Promise(resolve=>{options.dataType&&(options.responseType=options.dataType);var requestObj={timeout:3e4,ontimeout(data){resolve({result:"Error",statusText:"Timeout",status:601,data:data,options:options})},onabort(){resolve({result:"Error",statusText:"Aborted",status:602,data:void 0,options:options})},onerror(data){resolve({result:"Error",statusText:"Error",status:603,data:data,options:options})},onload(data){let headers={};if(data.responseHeaders?.split("\n").forEach(header=>{var header=header.trim().split(":"),name=header.shift()?.trim()||"",header=header.join(":").trim();name&&header&&(headers[name]?Array.isArray(headers[name])?headers[name].push(header):headers[name]=[headers[name],header]:headers[name]=header)}),headers["set-cookie"]&&!Array.isArray(headers["set-cookie"])&&(headers["set-cookie"]=[headers["set-cookie"]]),data.responseHeadersText=data.responseHeaders,data.responseHeaders=headers,data.finalUrl=data.responseHeaders?.location||data.finalUrl,"json"===options.responseType&&data?.response&&"object"!=typeof data.response)try{data.response=JSON.parse(data.responseText)}catch(error){}resolve({result:"Success",statusText:"Load",status:600,data:data,options:options})},...options};GM_xmlhttpRequest(requestObj)});return window.DEBUG&&console.log("%cAuto-Task[httpRequest]:","color:blue",JSON.stringify(result)),600!==result.status&&times<2?await httpRequest_httpRequest(options,times+1):result}catch(error){return console.log("%cAuto-Task[httpRequest]:","color:red",JSON.stringify({errorMsg:error,options:options})),throwError_throwError(error,"httpRequest"),{result:"JsError",statusText:"Error",status:604,error:error,options:options}}},tools_httpRequest=httpRequest_httpRequest,scripts_echoLog=({type,text,html,id})=>{let emptyStatus={success:()=>emptyStatus,error:()=>emptyStatus,warning:()=>emptyStatus,info:()=>emptyStatus,view:()=>emptyStatus};try{let ele;if(type)switch(type){case"joiningSteamGroup":case"leavingSteamGroup":case"gettingSteamGroupId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/groups/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"joiningSteamOfficialGroup":case"leavingSteamOfficialGroup":case"gettingSteamOfficialGroupId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/games/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"subscribingForum":case"unsubscribingForum":case"gettingForumId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/app/${text}/discussions/" target="_blank">${text}</a>]...<font></font></li>`);break;case"followingCurator":case"unfollowingCurator":case"gettingCuratorId":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/${text?.includes("/")?text:"curator/"+text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"addingToWishlist":case"removingFromWishlist":case"followingGame":case"unfollowingGame":case"gettingSubid":case"addingFreeLicense":case"requestingPlayTestAccess":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/app/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"addingFreeLicenseSubid":ele=$(`<li>${i18n("addingFreeLicense")}[<a href="https://steamdb.info/sub/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"favoritingWorkshop":case"unfavoritingWorkshop":case"gettingWorkshopAppId":case"votingUpWorkshop":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=${text}" target="_blank">
      ${text}</a>]...<font></font></li>`);break;case"gettingAnnouncementParams":case"likingAnnouncement":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/news/app/${text}/view/${id}" target="_blank">
      ${id}</a>]...<font></font></li>`);break;case"joiningDiscordServer":case"gettingDiscordGuild":ele=$(`<li>${i18n(type)}[<a href="https://discord.com/invite/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"leavingDiscordServer":ele=$(`<li>${i18n(type)}[<a href="https://discord.com/channels/@me/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"updateDiscordAuth":ele=$(`<li style="color:red;">${i18n("updateDiscordAuth")}</li>`);break;case"followingTwitchChannel":case"unfollowingTwitchChannel":case"gettingTwitchChannelId":ele=$(`<li>${i18n(type)}[<a href="https://www.twitch.tv/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingInsUserId":case"followingIns":case"unfollowingIns":ele=$(`<li>${i18n(type)}[<a href="https://www.instagram.com/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingTwitterUserId":case"followingTwitterUser":case"unfollowingTwitterUser":ele=$(`<li>${i18n(type)}[<a href="https://x.com/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"retweetting":case"unretweetting":ele=$(`<li>${i18n(type)}${text}...<font></font></li>`);break;case"joiningReddit":case"leavingReddit":ele=$(`<li>${i18n(type)}[<a href="https://www.reddit.com/r/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"followingRedditUser":case"unfollowingRedditUser":ele=$(`<li>${i18n(type)}[<a href="https://www.reddit.com/user/${text?.replace("u_","")}" target="_blank">
      ${text?.replace("u_","")}</a>]...<font></font></li>`);break;case"followingYtbChannel":case"unfollowingYtbChannel":ele=$(`<li>${i18n(type)}[<a href="https://www.youtube.com/channel/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"likingYtbVideo":case"unlikingYtbVideo":ele=$(`<li>${i18n(type)}[<a href="https://www.youtube.com/watch?v=${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingVkId":case"joiningVkGroup":case"leavingVkGroup":case"joiningVkPublic":case"leavingVkPublic":case"sendingVkWall":case"deletingVkWall":ele=$(`<li>${i18n(type)}[<a href="https://vk.com/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"visitingLink":ele=$(`<li>${i18n("visitingLink")}[<a href="${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"verifyingInsAuth":case"text":ele=$(`<li>${i18n(text)}<font></font></li>`);break;case"html":ele=$(text||html);break;case"whiteList":ele=$(`<li><font class="warning">${i18n("skipTask")}[${text}(${id})](${i18n("whiteList")})</font></li>`);break;case"globalOptionsSkip":ele=$(`<li>${i18n("skipTaskOption")}<font class="warning">${text}</font></li>`);break;default:ele=$(`<li>${i18n("unKnown")}:${type}(${text})...<font></font></li>`)}else ele=text?$(`<li>${i18n(text)}<font></font></li>`):html?$(html):$("<li><font></font></li>");return ele.addClass("card-text"),$("#auto-task-info").append(ele),ele[0]?.scrollIntoView(),{font:ele.find("font"),success(text="Success",html=!1){return this.font?.attr("class","").addClass("success"),html?this.font?.html(text):this.font?.text(text),this},error(text="Error",html=!1){return this.font?.attr("class","").addClass("error"),html?this.font?.html(text):this.font?.text(text),this},warning(text="Warning",html=!1){return this.font?.attr("class","").addClass("warning"),html?this.font?.html(text):this.font?.text(text),this},info(text="Info",html=!1){return this.font?.attr("class","").addClass("info"),html?this.font?.html(text):this.font?.text(text),this},view(){return this.font?.[0].scrollIntoView(),this}}}catch(error){return throwError_throwError(error,"echoLog"),emptyStatus}},unique=array=>{try{return[...new Set(array)]}catch(error){return throwError_throwError(error,"unique"),[]}},delay=(time=1e3)=>new Promise(resolve=>{setTimeout(()=>{resolve(!0)},time)}),defaultGlobalOptions={doTask:{discord:{servers:!0},instagram:{users:!0},twitch:{channels:!0},twitter:{users:!0,retweets:!0},vk:{names:!0},youtube:{channels:!0,likes:!0},reddit:{reddits:!0},steam:{groups:!0,officialGroups:!0,wishlists:!0,follows:!0,forums:!0,workshops:!0,curators:!0,workshopVotes:!0,announcements:!0,licenses:!0,playtests:!0,playTime:!0}},undoTask:{discord:{servers:!0},instagram:{users:!0},twitch:{channels:!0},twitter:{users:!0,retweets:!0},vk:{names:!0},youtube:{channels:!0,likes:!0},reddit:{reddits:!0},steam:{groups:!0,officialGroups:!0,wishlists:!0,follows:!0,forums:!0,workshops:!0,curators:!0,playTime:!0}},ASF:{AsfEnabled:!1,AsfIpcUrl:"",AsfIpcPassword:"",AsfBotname:"asf"},position:{buttonSideX:"right",buttonSideY:"top",buttonDistance:"15,30",showButtonSideX:"right",showButtonSideY:"top",showButtonDistance:"15,30",logSideX:"right",logSideY:"bottom",logDistance:"10,10"},hotKey:{doTaskKey:"alt + d",undoTaskKey:"alt + u",toggleLogKey:"alt + l"},other:{twitterVerifyId:"783214",youtubeVerifyChannel:"UCrXUsMBcfTVqwAS7DKg9C0Q",autoUpdateSource:"jsdelivr",language:"zh",checkLogin:!0,checkLeftKey:!0,defaultShowButton:!0,defaultShowLog:!0,debug:!1,receivePreview:!0}},assignObject=(external_Swal_namespaceObject=GM_getValue("globalOptions")||{},(obj1,obj2)=>{try{var key,value,newObj={};for([key,value]of Object.entries(obj1))"[object Object]"===Object.prototype.toString.call(value)&&"[object Object]"===Object.prototype.toString.call(obj2[key])?newObj[key]=assignObject(value,obj2[key]):newObj[key]=obj2[key]??value;return newObj}catch(error){return throwError_throwError(error,"assignObject"),defaultGlobalOptions}}),globalOptions=assignObject(defaultGlobalOptions,external_Swal_namespaceObject),languages={zh:{website:"网站",type:"类型",edit:"编辑",whiteList:"白名单",skipTask:"跳过撤销任务",whiteListOptions:"白名单设置",changeWhiteListOption:"设置白名单(%0)",whiteListNotFound:"找不到此项白名单: %0",changeWhiteListSuccess:"白名单修改成功，刷新生效！",changeWebsiteOptions:"网站设置",changeGlobalOptions:"全局设置",ok:"是",save:"保存",close:"关闭",return:"返回",option:"选项",value:"值",websiteOptions:"当前网站设置",changeWebsiteOptionsSuccess:"更改当前网站设置成功，刷新生效！",changeGlobalOptionsSuccess:"更改全局设置成功，刷新生效！",needLogin:"请先登录！",getTasksInfo:"正在获取并处理任务信息...",gettingKey:"正在获取Key...",verifyingTask:"正在验证任务",notice:"自动任务脚本提醒",noKeysLeft:"此页面已经没有剩余key了，是否关闭？",giveawayEnded:"此活动已结束，是否关闭？",giveawayNotWork:"此活动因某些原因(已结束/暂停/未开始...)不可用(如果是脚本误判请及时反馈)，是否关闭？",confirm:"确定",cancel:"取消",unKnown:"未知",unKnownTaskType:"未识别的任务",doing:"正在做任务",allTasksComplete:"所有任务已完成！",getTaskIdFailed:"获取任务Id失败！",initSuccess:"%0 初始化成功！",initFailed:"%0 初始化失败！",errorLink:"链接错误: %0",needInit:"请先初始化",verifyingAuth:"正在验证%0凭证...",updatingAuth:"正在更新%0凭证...",refreshingToken:"正在刷新%0凭证...",settingToken:"正在设置%0凭证...",steamStoreTab:"Steam商店(弹窗)",steamCommunityTab:"Steam社区(弹窗)",initing:"正在初始化...",getFailed:"获取%0失败！",checkLoginFailed:"检测登录状态失败！",checkLeftKeyFailed:"检测剩余Key失败！",userId:"用户Id",joiningGiveaway:"正在加入赠Key",needJoinGiveaway:"需要先加入赠Key",cannotUndo:"此网站不支持取消任务",verifyAuth:"正在验证 %0 凭证...",closePageNotice:"如果此页面没有自动关闭，请自行关闭本页面。",errorReport:"检测到脚本报错，是否前往反馈BUG？",visitingLink:"正在访问链接...",doTask:"做任务",undoTask:"撤销任务",verifyTask:"验证任务",getKey:"获取Key",selectAll:"全选",selectNone:"全不选",invertSelect:"反选",doFreeTask:"加入免费赠品",doPointTask:"加入点数赠品",skipTaskOption:"设置中已配置跳过任务",other:"其他",globalOptions:"全局设置",checkLogin:"登录检测</br>需要登录的网站自动登录，部分网站支持",checkLeftKey:"剩余Key检测</br>赠Key活动结束提示是否关闭，部分网站支持",twitterVerifyId:"通过尝试关注该账号验证Twitter凭证</br>默认为Twitter官方帐号 783214</br>不想关注官方账号可以改为自己的帐号",youtubeVerifyChannel:"通过尝试订阅该频道验证YouTube凭证</br>默认为YouTube官方频道 UCrXUsMBcfTVqwAS7DKg9C0Q</br>不想关注官方频道可以改为自己的频道",autoUpdateSource:"更新源</br>github: 需代理，实时更新</br>jsdelivr: 可不用代理，更新有延迟</br>standby: 备用</br>auto: 依次使用github, jsdelivr, standby源进行尝试更新",saveGlobalOptions:"保存设置",settingPage:"设置页面",name:"名称",version:"版本",scriptManager:"脚本管理器",script:"脚本",environment:"环境",os:"系统",browser:"浏览器",getId:"获取 %0 id",getTwitterUserId:"获取Twitter用户id(获取id功能仅在设置页面可用)",getYoutubeChannelId:"获取Youtube频道id(获取id功能仅在设置页面可用)",showButton:"显示按钮",hideButton:"隐藏按钮",showLog:"显示日志",hideLog:"隐藏日志",defaultShowButton:"默认显示按钮",defaultShowLog:"默认显示日志",debug:"输出调试日志，不要开启此选项！",receivePreview:"接收预览版更新",position:"组件位置",buttonSideX:"按钮区域水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",buttonSideY:"按钮区域垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",buttonDistance:"按钮区域距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",showButtonSideX:"显示按钮水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",showButtonSideY:"显示按钮垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",showButtonDistance:"显示按钮距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",logSideX:"日志区域水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",logSideY:"日志区域垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",logDistance:"日志区域距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",hotKey:"快捷键",doTaskKey:"做任务快捷键</br>(实时预览功能仅在设置页面可用)",undoTaskKey:"撤销任务快捷键</br>(实时预览功能仅在设置页面可用)",toggleLogKey:"显示/隐藏日志快捷键</br>(实时预览功能仅在设置页面可用)",tasksHistory:"任务历史",clearHistory:"清空历史",clearHistoryFinished:"已清空任务历史！",deleteTask:"删除任务",lastChangeTime:"最后一次修改时间",clearTaskFinished:"删除以下任务完成！",clearTaskFailed:"删除任务失败，没有找到任务名！",syncData:"数据同步",settingData:"正在上传数据...",gettingData:"正在获取数据...",help:"帮助",fileName:"文件名",upload2gist:"同步到Gist",downloadFromGist:"从Gist同步",saveAndTest:"保存配置并测试",testSuccess:"测试成功！",testFailed:"测试失败！",saveAndTestNotice:"请先保存配置并测试！",processingData:"正在处理数据...",updatingData:"正在上传数据...",syncDataSuccess:"同步数据成功！",syncDataFailed:"同步数据失败，请在控制台查看错误信息！",downloadingData:"正在下载数据...",checkedNoData:"没有检测到远程数据，请确认配置是否正确！",savingData:"正在保存数据...",syncHistory:"同步任务历史",checkUpdateFailed:"检测更新失败",newVersionNotice:'检测到新版本V%0, <a class="high-light" href="%1" target="_blank">点此更新</a>',language:"语言</br>目前仅支持zh: 中文, en: 英文",gistOptions:"Gist 设置",swalNotice:"检测到您第一次安装V4版本脚本，请前往阅读用前必读内容！",echoNotice:'检测到您第一次安装V4版本脚本，请<a class="high-light" href="%0" target="_blank">点此前往</a>阅读用前必读内容！',noticeLink:"https://auto-task-doc.js.org/guide/#用前必读",toGithub:"前往Github反馈",toKeylol:"前往其乐论坛反馈",copySuccess:"错误信息已复制到剪切板，是否前往其乐论坛反馈？",copyFailed:"请复制下方错误信息后前往Keylol论坛反馈！",updateText:"%0 版本更新内容：",Active:"进行中",Ended:"已结束",Banned:"已封禁",Paused:"已暂停",notStart:"未开始",noRemoteData:"检测到远程无数据",errorRemoteDataFormat:"远程数据格式错误",updateHistory:'历史更新记录<a class="high-light" href="https://auto-task-doc.js.org/logs/" target="_blank">点此查看</a>',AsfEnabled:'使用ASF做Steam相关任务(需<a href="https://github.com/chr233/ASFEnhance" target="_blank">ASFEnhance</a>插件)',AsfIpcUrl:"ASF IPC 地址",AsfIpcPassword:"ASF IPC 密码",versionNotMatched:"脚本管理器版本过低，需TamperMonkey >= 5.2.0或TamperMonkey Beta >= 5.2.6196",groups:"组",officialGroups:"官方组",wishlists:"愿望单",follows:"游戏关注",forums:"论坛",workshops:"创意工坊收藏",curators:"鉴赏家",workshopVotes:"创意工坊点赞",announcements:"社区通知",steamCommunity:"Steam社区",steamStore:"Steam商店",licenses:"入库免费游戏",playtests:"请求访问权限",playTime:"挂时长",needLoginSteamStore:'请先<a href="https://store.steampowered.com/login/" target="_blank">登录Steam商店</a>',needLoginSteamCommunity:'请先<a href="https://steamcommunity.com/login/home/" target="_blank">登录Steam社区</a>',joiningSteamGroup:"正在加入Steam组",leavingSteamGroup:"正在退出Steam组",gettingSteamGroupId:"正在获取Steam组Id",joiningSteamOfficialGroup:"正在加入Steam官方组",leavingSteamOfficialGroup:"正在退出Steam官方组",gettingSteamOfficialGroupId:"正在获取Steam官方组Id",subscribingForum:"正在订阅Steam论坛",unsubscribingForum:"正在取消订阅Steam论坛",gettingForumId:"正在获取Steam论坛Id",followingCurator:"正在关注Steam鉴赏家",unfollowingCurator:"正在取关Steam鉴赏家",gettingCuratorId:"正在获取Steam鉴赏家Id",addingToWishlist:"正在添加游戏到Steam愿望单",removingFromWishlist:"正在从Steam愿望单移除游戏",followingGame:"正在关注Steam游戏",unfollowingGame:"正在取关Steam游戏",favoritingWorkshop:"正在收藏Steam创意工坊物品",unfavoritingWorkshop:"正在取消收藏Steam创意工坊物品",gettingWorkshopAppId:"正在获取Steam创意工坊物品Id",votingUpWorkshop:"正在点赞Steam创意工坊物品",gettingAnnouncementParams:"正在获取Steam通知信息",likingAnnouncement:"正在点赞Steam通知",changingArea:"正在更换Steam地区: %0...",notNeededChangeArea:"当前地区不需要更换",noAnotherArea:"请检测是否开启正确开启代理",gettingAreaInfo:"正在获取Steam地区信息...",changeAreaNotice:"疑似锁区游戏，尝试换区执行",steamFinishNotice:"Steam任务完成，尝试将购物车地区换回",gettingSubid:"正在获取游戏subid",addingFreeLicense:"正在入库",missParams:"缺少参数",gettingLicenses:"正在获取Licenses...",requestingPlayTestAccess:"正在请求访问权限",tryChangeAreaNotice:"此功能无法检测游戏是否限区，因此会尝试换区后再入库，换区失败也不影响后续入库",gettingUserLink:"正在获取Steam用户社区链接...",retry:"重试",owned:"已拥有",redirect:"重定向",noSubid:"无法获取，跳过",noASFInstance:"未启用ASF",initingASF:"正在初始化ASF...",playingGames:"正在挂游戏时长[%0]...",stoppingPlayGames:"正在停止挂游戏时长...",stopPlayTimeTitle:"Steam游戏挂机时长满足，是否结束挂机？",stopPlayTimeText:"挂机已超时：%0 分钟",servers:"服务器",joiningDiscordServer:"正在加入Discord服务器",leavingDiscordServer:"正在退出Discord服务器",gettingDiscordGuild:"正在获取Discord服务器Id",getDiscordAuthFailed:"获取Discord凭证失败，请检测Discord帐号是否已登录",discordImportantNotice:"重要提醒！！！",discordImportantNoticeText:"由于Discord网站后台更新，目前使用此脚本加组后可能会导致Discord帐号被强制退出，且需要两步验证才能正常登录，请谨慎使用！！！",continue:"继续",skipDiscordTask:"跳过Discord任务",continueAndDontRemindAgain:"继续且不再提醒",users:"用户",loginIns:'请先<a href="https://www.instagram.com/accounts/login/" target="_blank">登录Instagram</a>',insBanned:"您的Instagram账户已被封禁",verifyingInsAuth:"正在验证Instagram凭证...",gettingInsUserId:"正在获取Instagram用户Id",followingIns:"正在关注Instagram用户",unfollowingIns:"正在取关Instagram用户",reddits:"社区/用户",loginReddit:'请先<a href="https://www.reddit.com/login/" target="_blank">登录Reddit</a>',changingRedditVersion:"正在切换Reddit为新版页面...",joiningReddit:"正在加入Reddit社区",leavingReddit:"正在退出Reddit社区",followingRedditUser:"正在关注Reddit用户",unfollowingRedditUser:"正在取关Reddit用户",channels:"频道",followingTwitchChannel:"正在关注Twitch频道",unfollowingTwitchChannel:"正在取关Twitch频道",gettingTwitchChannelId:"正在获取Twitch频道Id",checkingTwitchIntegrity:"正在检查Twitch完整性...",twitterUser:"推特用户",retweets:"转推",gettingTwitterUserId:"正在获取推特用户Id",followingTwitterUser:"正在关注推特用户",unfollowingTwitterUser:"正在取关推特用户",retweetting:"正在转推",unretweetting:"正在撤销转推",names:"组/社区/动态",loginVk:'请先<a href="https://vk.com/login/" target="_blank">登录Vk</a>',gettingVkId:"正在获取Vk任务Id",joiningVkGroup:"正在加入Vk组",leavingVkGroup:"正在退出Vk组",joiningVkPublic:"正在加入Vk社区",leavingVkPublic:"正在退出Vk社区",sendingVkWall:"正在转发Vk动态",deletingVkWall:"正在撤销转发Vk动态",youtubeChannel:"YouTube频道",likes:"点赞",loginYtb:'请先<a href="https://accounts.google.com/ServiceLogin?service=youtube" target="_blank">登录YouTube</a>',tryUpdateYtbAuth:'请尝试<a href="https://www.youtube.com/#auth" target="_blank">更新YouTube凭证</a>',gettingYtbToken:"正在获取YouTube Token...",followingYtbChannel:"正在订阅YouTube频道",unfollowingYtbChannel:"正在退订YouTube频道",likingYtbVideo:"正在点赞YouTube视频",unlikingYtbVideo:"正在取消点赞YouTube视频",giveKeyNoticeBefore:"每次验证间隔15s",giveKeyNoticeAfter:'如果没有key, 请在<a href="https://givekey.ru/profile" target="_blank">https://givekey.ru/profile</a>查看',noPoints:"点数不够，跳过抽奖",getNeedPointsFailed:"获取所需点数失败，跳过抽奖",joiningLottery:"正在加入抽奖",doingGleamTask:"正在做Gleam任务...",gettingGleamLink:"正在获取Gleam任务链接...",gleamTaskNotice:"如果此页面长时间未关闭，请完成任一任务后自行关闭！",verifiedGleamTasks:"已尝试验证所有任务，验证失败的任务请尝试手动验证或完成！",campaign:"检测到人机验证，请完成验证后重新验证任务！",gsNotice:'为避免得到"0000-0000-0000"key, 已自动屏蔽"Grab Key"按钮，获取key时请关闭脚本！',giveeClubVerifyNotice:"正在验证任务...",giveeClubVerifyFinished:"请等待验证完成后自行加入赠Key",doingKeyhubTask:"正在做Keyhub任务...",SweepWidgetNotice:"正在处理并验证任务，每次验证任务有1~3s间隔防止触发验证过快警告...",tasksNotCompleted:"任务未完成",notConnect:"社交平台未连接，跳过任务",tgTaskNotice:"检测到Telegram任务，需要手动完成",confirmingTask:"正在跳过警告页面...",unSupporttedTaskType:"不支持的任务类型"},en:{website:"Website",type:"Type",edit:"Edit",whiteList:"Whitelist",skipTask:"Skip undo task",whiteListOptions:"Whitelist options",changeWhiteListOption:"Whitelist option(%0)",whiteListNotFound:"Cannot find this whitelist: %0",changeWhiteListSuccess:"The whitelist is successfully modified, and the page refresh will take effect!",changeWebsiteOptions:"Website options",changeGlobalOptions:"Global options",ok:"OK",save:"Save",close:"Close",return:"Return",option:"Option",value:"Value",websiteOptions:"Current website settings",changeWebsiteOptionsSuccess:"The current website setting is changed successfully, and the page refresh will take effect!",changeGlobalOptionsSuccess:"The global setting is changed successfully, and the refresh will take effect!",needLogin:"Please log in first!",getTasksInfo:"Obtaining and processing task information...",gettingKey:"Getting Key...",verifyingTask:"Verifying task",notice:"Automatic task script notice",noKeysLeft:"There are no more keys left on this page. Do you want to close it?",giveawayEnded:"This event has ended, do you want to close it?",giveawayNotWork:"This activity is unavailable for some reasons (banned/ended/paused/not started...) (if it is a script misjudgment, please give us feedback in time), is it closed?",confirm:"Confirm",cancel:"Cancel",unKnown:"Unknown",unKnownTaskType:"Unrecognized task",doing:"Doing a task",allTasksComplete:"All tasks have been completed!",getTaskIdFailed:"Failed to obtain task Id!",initSuccess:"%0 was initialized successfully!",initFailed:"%0 initialization failed!",errorLink:"Link error: %0",needInit:"Please initialize first",verifyingAuth:"Verifying %0 token...",updatingAuth:"Update %0 token...",refreshingToken:"Refreshing %0 token...",settingToken:"Setting %0 token...",steamStoreTab:"Steam store (new tab)",steamCommunityTab:"Steam community(new tab)",initing:"Initializing...",getFailed:"Failed to get %0!",checkLoginFailed:"Failed to detect login status!",checkLeftKeyFailed:"Failed to detect the remaining keys!",userId:"User Id",joiningGiveaway:"Joining giveaway",needJoinGiveaway:"Need to join the giveaway first",cannotUndo:"This website does not support canceling tasks",verifyAuth:"Verifying %0 token...",closePageNotice:"f this page does not close automatically, please close this page yourself.",errorReport:"A script error is detected, do you want to report the BUG?",visitingLink:"Visiting link ...",doTask:"DoTask",undoTask:"UndoTask",verifyTask:"Verify",getKey:"GetKey",selectAll:"SelectAll",selectNone:"SelectNone",invertSelect:"InvertSelect",doFreeTask:"FreeTask",doPointTask:"PointTask",skipTaskOption:"Skip task has been configured in the settings",other:"Other",globalOptions:"Global Options",checkLogin:"Login detection</br>Need to log in to the website automatically log in, part of this website supports.",checkLeftKey:"Key remaining detection</br>The end of the giveaway event prompts whether to close or not, part of this website supports.",twitterVerifyId:"Verify Twitter token by trying to follow the account.</br>The default is the official Twitter account 783214.</br>If you don't want to follow the official account, you can change it to your own account.",youtubeVerifyChannel:"Verify YouTube token by trying to subscribe to the channel.</br>The default is the official YouTube channel UCrXUsMBcfTVqwAS7DKg9C0Q.</br>If you don't want to follow the official channel, you can change it to your own channel.",autoUpdateSource:"The source to update</br>github: Fast update.</br>jsdelivr: Update is delayed.</br>standby: Standby source.</br>auto: Try to update using github, jsdelivr, standby sources in turn.",saveGlobalOptions:"SaveSettings",settingPage:"Setting Page",name:"Name",version:"Version",scriptManager:"Script Manager",script:"Script",environment:"Environment",os:"OS",browser:"Browser",getId:"Get %0 id",getTwitterUserId:"Get Twitter user id (Get id function is only available on the settings page).",getYoutubeChannelId:"Get Youtube channel id (Get id function is only available on the settings page).",showButton:"ShowButton",hideButton:"HideButton",showLog:"ShowLog",hideLog:"HideLog",defaultShowButton:"Default display button",defaultShowLog:"Display log by default",debug:"Output debug log, do not enable this option!",receivePreview:"Receive preview updates",position:"Component position",buttonSideX:"Horizontal positioning of the button area (real-time preview function is only available on the setting page).</br>left: left | right: right",buttonSideY:"The button area is positioned in the vertical direction (real-time preview function is only available on the settings page).</br>top: top | bottom: bottom",buttonDistance:"The distance between the button area and the edge (the real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",showButtonSideX:"ShowButton horizontal positioning (real-time preview function is only available on the setting page).</br>left: left | right: right",showButtonSideY:"ShowButton vertical positioning (real-time preview function is only available on the setting page).</br>top: top | bottom: bottom",showButtonDistance:"The distance between the ShowButton and the edge (real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",logSideX:"Horizontal positioning of the log area (real-time preview function is only available on the setting page).</br>left: left | right: right",logSideY:"Vertical positioning of the log area (real-time preview function is only available on the setting page).</br>top: top | bottom: bottom",logDistance:"The distance between the log area and the edge (the real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",hotKey:"Shortcut key",doTaskKey:"DoTask shortcut keys</br> (real-time preview function is only available on the settings page).",undoTaskKey:"UndoTask shortcut keys</br> (real-time preview function is only available on the settings page).",toggleLogKey:"ShowLog/HideLog shortcut keys</br> (real-time preview function is only available on the settings page).",tasksHistory:"TasksHistory",clearHistory:"Clear history",clearHistoryFinished:"The mission history has been cleared!",deleteTask:"Delete task",lastChangeTime:"Last Change Time",clearTaskFinished:"Delete the following tasks completed!",clearTaskFailed:"Failed to delete the task, the task name was not found!",syncData:"DataSync",settingData:"Uploading data...",gettingData:"Getting data...",help:"Help",fileName:"Filename",upload2gist:"Sync to Gist",downloadFromGist:"Sync from Gist",saveAndTest:"Save configuration and test",testSuccess:"Test success!",testFailed:"Test failed!",saveAndTestNotice:"Please save the configuration and test first!",processingData:"Processing data...",updatingData:"Uploading data...",syncDataSuccess:"Synchronized data successfully!",syncDataFailed:"Failed to synchronize data, please check the error message on the console!",downloadingData:"Downloading data...",checkedNoData:"No remote data is detected, please confirm whether the configuration is correct!",savingData:"Saving data...",syncHistory:"Synchronize tasks history",checkUpdateFailed:"Check update failed",newVersionNotice:'Checked a new version V%0, <a class="high-light" href="%1" target="_blank">click to update</a>',language:"Language</br> Currently only supports zh: Chinese, en: English",gistOptions:"Gist Settings",swalNotice:"It is detected that you are installing the V4 version script for the first time, please go to read the READ ME FIRST content before use!",echoNotice:'It is detected that you are installing the V4 version script for the first time, please <a class="high-light" href="%0" target="_blank">click here</a> to read the READ ME FIRST content before use!',noticeLink:"https://auto-task-doc.js.org/en/guide/#read-me-first",toGithub:"Feedback(Github)",toKeylol:"Feedback(Keylol)",copySuccess:"The error message has been copied to the clipboard. Do you want to go to the Keylol forum to give feedback?",copyFailed:"Please copy the error information below and report back to the Keylol forum!",updateText:"Updates in version %0:",Active:"Active",Ended:"Ended",Banned:"Banned",Paused:"Paused",notStart:"notStart",noRemoteData:"No data remotely",errorRemoteDataFormat:"Remote data has wrong format",updateHistory:'<a class="high-light" href="https://auto-task-doc.js.org/logs/" target="_blank">Click here</a> to view the historical update record.',AsfEnabled:'Use ASF to do Steam related tasks (requires <a href="https://github.com/chr233/ASFEnhance" target="_blank">ASFEnhance</a> plugin)',AsfIpcUrl:"ASF IPC URL",AsfIpcPassword:"ASF IPC Password",groups:"Group",officialGroups:"Official Group",wishlists:"Wishlist",follows:"Follow Game",forums:"Forum",workshops:"Favorite Workshop",curators:"Curator",workshopVotes:"Voteup Workshop",announcements:"Announcement",steamCommunity:"Steam Community",steamStore:"Steam Store",licenses:"Add License",playtests:"Playtest Access",needLoginSteamStore:'Please <a href="https://store.steampowered.com/login/" target="_blank">log in to the Steam Store</a>',needLoginSteamCommunity:'Please <a href="https://steamcommunity.com/login/home/" target="_blank">log in to the Steam Community</a>',joiningSteamGroup:"Joining Steam Group",leavingSteamGroup:"Leaving Steam Group",gettingSteamGroupId:"Getting Steam Group Id",joiningSteamOfficialGroup:"Joining Steam Official Group",leavingSteamOfficialGroup:"Leaving Steam Official Group",gettingSteamOfficialGroupId:"Getting Steam Official Group Id",subscribingForum:"Subscribing the Steam Forum",unsubscribingForum:"Unsubscribing the Steam Forum",gettingForumId:"Getting Steam Forum Id",followingCurator:"Following Steam Curator",unfollowingCurator:"Unfollowing Steam Curator",gettingCuratorId:"Getting Steam Curator Id",addingToWishlist:"Adding the game to the Steam wishlist",removingFromWishlist:"Removing the game from the Steam wishlist",followingGame:"Following Steam games",unfollowingGame:"Unfollowing Steam games",favoritingWorkshop:"Favouring Steam Workshop Items",unfavoritingWorkshop:"Unfavoriting Steam Workshop Items",gettingWorkshopAppId:"Getting Steam Workshop Item Id",votingUpWorkshop:"Liking Steam workshop items",gettingAnnouncementParams:"Getting Steam announcement information",likingAnnouncement:"Liking Steam announcement",changingArea:"Changing Steam area: %0...",notNeededChangeArea:"The current area does not need to be changed",noAnotherArea:"Please check whether the proxy is turned on correctly",gettingAreaInfo:"Getting Steam area information...",changeAreaNotice:"Suspected of a locked zone game, try to change the zone to execute",steamFinishNotice:"Steam task completed, try to change the shopping cart area back to ",gettingSubid:"Getting subid",addingFreeLicense:"Adding free license",missParams:"Missing parameters",gettingLicenses:"Getting licenses...",requestingPlayTestAccess:"Requesting play test access",tryChangeAreaNotice:"This function cannot detect whether the game is limited, so it will try to change the area before entering the library. Failure to change the area will not affect the subsequent storage.",versionNotMatched:"The script manager version is too low, requiring TamperMonkey >= 5.2.0 or TamperMonkey Beta >= 5.2.6196",gettingUserLink:"Getting steam user community link...",retry:"Retry",owned:"Owned",redirect:"Redirect",noSubid:"skip due to unrecognized",noASFInstance:"ASF is not enabled",initingASF:"Initing ASF...",playingGames:"Playing games [%0]...",stoppingPlayGames:"Stopping play games...",stopPlayTimeTitle:"The Steam game idle time has finished. Do you want to end it?",stopPlayTimeText:"Time out: %0 minutes",servers:"Server",joiningDiscordServer:"Joining Discord Server",leavingDiscordServer:"Leaving Discord Server",gettingDiscordGuild:"Getting Discord server Id",getDiscordAuthFailed:"Failed to get Discord token, please check whether the Discord account is logged in",discordImportantNotice:"Important Reminder! ! !",discordImportantNoticeText:"Due to the background update of the Discord website, currently using this script to join a group may cause the Discord account to be forcibly logged out, and two-step verification is required to log in normally, please use it with caution! ! !",continue:"Continue",skipDiscordTask:"Skip",continueAndDontRemindAgain:"Continue without Reminders",users:"User",loginIns:'Please <a href="https://www.instagram.com/accounts/login/" target="_blank">log in to Instagram</a>',insBanned:"Your Instagram account has been banned",verifyingInsAuth:"Verifying Instagram token...",gettingInsUserId:"Getting Instagram user Id",followingIns:"Following Instagram user",unfollowingIns:"Unfollowing Instagram user",reddits:"Reddit/User",loginReddit:'Please <a href="https://www.reddit.com/login/" target="_blank">log in to Reddit</a>',changingRedditVersion:"Switching Reddit to a new version page...",joiningReddit:"Joining the Reddit",leavingReddit:"Leaving the Reddit",followingRedditUser:"Following Reddit User",unfollowingRedditUser:"Unfollowing Reddit User",channels:"Channel",followingTwitchChannel:"Following Twitch Channel",unfollowingTwitchChannel:"Unfollowing Twitch Channel",gettingTwitchChannelId:"Getting Twitch Channel Id",checkingTwitchIntegrity:"Checking Twitch integrity...",twitterUser:"Twitter User",retweets:"Retweet",gettingTwitterUserId:"Getting Twitter User Id",followingTwitterUser:"Following Twitter User",unfollowingTwitterUser:"Unfollowing Twitter User",retweetting:"Retweetting",unretweetting:"Unretweetting",names:"Group/Public/Wall",loginVk:'Please <a href="https://vk.com/login/" target="_blank">log in to Vk</a>',gettingVkId:"Getting Vk task Id",joiningVkGroup:"Joining Vk Group",leavingVkGroup:"Leaving Vk Group",joiningVkPublic:"Joining Vk Public",leavingVkPublic:"Leaving Vk Public",sendingVkWall:"Sending Vk Wall",deletingVkWall:"Deleting Vk Wall",youtubeChannel:"YouTube Channel",likes:"Like",loginYtb:'Please <a href="https://accounts.google.com/ServiceLogin?service=youtube" target="_blank">log in to YouTube</a>',tryUpdateYtbAuth:'Please try to <a href="https://www.youtube.com/#auth" target="_blank">update YouTube token</a>',gettingYtbToken:"Getting YouTube Token...",followingYtbChannel:"Subscribing to YouTube channel",unfollowingYtbChannel:"Unsubscribing to YouTube channel",likingYtbVideo:"Liking YouTube video",unlikingYtbVideo:"Unliking YouTube video",giveKeyNoticeBefore:"Each verification interval is 15s",giveKeyNoticeAfter:'If there is no key, please check at <a href="https://givekey.ru/profile" target="_blank">https://givekey.ru/profile</a>',noPoints:"Not enough points, skip the lottery",getNeedPointsFailed:"ailed to obtain the required points, skip the lottery",joiningLottery:"Joining the lottery",doingGleamTask:"Doing Gleam Task...",gettingGleamLink:"Getting Gleam task link...",gleamTaskNotice:"If this page has not been closed for a long time, please close it yourself after completing any task!",verifiedGleamTasks:"Attempted to verify all tasks. If the verification fails, please try to verify manually or complete it!",campaign:"ReCAPTCHA detected, please complete it and re-verify the tasks!",gsNotice:'In order to avoid getting the "0000-0000-0000" key, the "Grab Key" button has been hidden, please close the script when obtaining the key!',giveeClubVerifyNotice:"Verifying task...",giveeClubVerifyFinished:"Wait for the verification to complete and join it by yourself",doingKeyhubTask:"Doing Keyhub Task...",SweepWidgetNotice:"The task is being processed and verified. There is an interval of 1~3s for each verification task to prevent the triggering of too fast verification warning...",tasksNotCompleted:"Tasks Not Completed",notConnect:"Social platform is not connectted, skip",tgTaskNotice:"The telegram task is checked, need to do it yourself!",confirmingTask:"Confirming task...",unSupporttedTaskType:"Unsupportted task type"}},language=["zh","en"].includes(globalOptions.other.language)?globalOptions.other.language:"en",i18n=(key,...argvs)=>languages[language]?.[key]?languages[language][key].replace(/%([\d]+)/g,(match,index)=>argvs[parseInt(index,10)]):key;external_Swal_namespaceObject=class{tasks;getRealParams(name,links,doTask,link2param){try{let realParams=[];return 0<links.length&&(realParams=[...realParams,...links.map(link=>link2param(link)).filter(link=>link)]),!doTask&&0<this.tasks[name].length&&(realParams=[...realParams,...this.tasks[name]]),unique(realParams)}catch(error){return throwError_throwError(error,"Social.getRealParams"),[]}}};class Discord extends external_Swal_namespaceObject{tasks;whiteList;#auth=GM_getValue("discordAuth")||{};#cache=GM_getValue("discordCache")||{};#initialized=!1;constructor(){super();var defaultTasksTemplate={servers:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.discord||{}}}async init(action){try{if(!GM_getValue("dontRemindDiscordAgain"))if(!await external_Swal_default().fire({title:i18n("discordImportantNotice"),text:i18n("discordImportantNoticeText"),showCancelButton:!0,showDenyButton:!0,confirmButtonText:i18n("continue"),cancelButtonText:i18n("skipDiscordTask"),denyButtonText:i18n("continueAndDontRemindAgain")}).then(({isConfirmed,isDenied})=>!!isConfirmed||!!isDenied&&(GM_setValue("dontRemindDiscordAgain",!0),!0)))return this.#initialized=!1,"skip";return GM_getValue("dontRemindDiscordAgain")||"do"===action&&!globalOptions.doTask.discord.servers||"undo"===action&&!globalOptions.undoTask.discord.servers?(this.#initialized=!1,"skip"):!!this.#initialized||(this.#auth.auth?await this.#verifyAuth()||(GM_setValue("discordAuth",{auth:null}),await this.#updateAuth())?(scripts_echoLog({}).success(i18n("initSuccess","Discord")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Discord")),!1):!!await this.#updateAuth()&&(this.#initialized=!0))}catch(error){return throwError_throwError(error,"Discord.init"),!1}}async#verifyAuth(){try{var logStatus=scripts_echoLog({text:i18n("verifyingAuth","Discord")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v6/users/@me",method:"HEAD",headers:{authorization:this.#auth.auth}});return"Success"===result?200===data?.status?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Discord.verifyAuth"),!1}}async#updateAuth(){try{let logStatus=scripts_echoLog({text:i18n("updatingAuth","Discord")});return await new Promise(resolve=>{var newTab=GM_openInTab("https://discord.com/channels/@me",{active:!0,insert:!0,setParent:!0});newTab.name="ATv4_discordAuth",newTab.onclose=async()=>{var auth=GM_getValue("discordAuth")?.auth;auth?(this.#auth={auth:auth},logStatus.success(),resolve(await this.#verifyAuth())):(logStatus.error("Error: Update discord auth failed!"),resolve(!1))}})}catch(error){return throwError_throwError(error,"Discord.updateAuth"),!1}}async#joinServer(inviteId){try{var guild,logStatus=scripts_echoLog({type:"joiningDiscordServer",text:inviteId}),{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/invites/"+inviteId,method:"POST",dataType:"json",headers:{authorization:this.#auth.auth,origin:"https://discord.com",referer:"https://discord.com/invite/"+inviteId}});return"Success"===result&&200===data?.status?(logStatus.success(),(guild=String(data.response?.guild?.id))&&(this.#setCache(inviteId,guild),this.tasks.servers=unique([...this.tasks.servers,inviteId])),!0):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Discord.joinServer"),!1}}async#leaveServer(inviteId){try{if(this.whiteList.servers.includes(inviteId))return scripts_echoLog({type:"whiteList",text:"Discord.leaveServer",id:inviteId}),!0;var guild=await this.#getGuild(inviteId);if(guild){var logStatus=scripts_echoLog({type:"leavingDiscordServer",text:guild}),{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/users/@me/guilds/"+guild,method:"DELETE",headers:{authorization:this.#auth.auth}});if("Success"===result&&204===data?.status)return logStatus.success(),!0;logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Discord.leaveServer"),!1}}async#getGuild(inviteId){try{var logStatus=scripts_echoLog({type:"gettingDiscordGuild",text:inviteId}),guild=this.#cache[inviteId];if(guild)return logStatus.success(),guild;var{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/invites/"+inviteId,responseType:"json",method:"GET"});if("Success"!==result||200!==data?.status)return logStatus.error(result+`:${statusText}(${status})`),!1;{let guild=data.response?.guild?.id;return guild?(logStatus.success(),this.#setCache(inviteId,guild),guild):(logStatus.error(result+`:${statusText}(${status})`),!1)}}catch(error){return throwError_throwError(error,"Discord.getGuild"),!1}}async toggle({doTask=!0,serverLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.discord.servers||!doTask&&!globalOptions.undoTask.discord.servers)scripts_echoLog({type:"globalOptionsSkip",text:"discord.servers"});else{var realServers=this.getRealParams("servers",serverLinks,doTask,link=>link.match(/invite\/(.+)/)?.[1]);if(0<realServers.length)for(var server of realServers)prom.push(doTask?this.#joinServer(server):this.#leaveServer(server)),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Discord.toggleServers"),!1}}#setCache(inviteId,guild){try{this.#cache[inviteId]=guild,GM_setValue("discordCache",this.#cache)}catch(error){throwError_throwError(error,"Discord.setCache")}}}let social_Discord=Discord;class Instagram extends external_Swal_namespaceObject{tasks;whiteList;#cache=GM_getValue("instagramCache")||{};#auth={};#initialized=!1;constructor(){super();var defaultTasksTemplate={users:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.instagram||{}}}async init(){try{return this.#initialized?!0:await this.#getUserInfo()?(scripts_echoLog({}).success(i18n("initSuccess","Instagram")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Instagram")),!1)}catch(error){return throwError_throwError(error,"Instagram.init"),!1}}async#getUserInfo(name="instagram"){try{var logStatus=scripts_echoLog({type:"instagram"===name?"verifyingInsAuth":"gettingInsUserId",text:name}),userId=this.#cache[name];if(userId&&"instagram"!==name)return logStatus.success(),userId;var csrftoken,hash,id,{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/${name}/`,method:"GET"});if("Success"===result)if(data?.finalUrl.includes("accounts/login"))logStatus.error("Error:"+i18n("loginIns"),!0);else if(data?.finalUrl.includes("www.instagram.com/challenge"))logStatus.error("Error:"+i18n("insBanned"));else{if(200===data?.status)return csrftoken=data.responseText.match(/"csrf_token":"(.+?)"/)?.[1],hash=data.responseText.match(/"rollout_hash":"(.+?)"/)?.[1],"instagram"===name?!(!csrftoken||!hash||(this.#auth={csrftoken:csrftoken,hash:hash},0)):(id=data.responseText.match(/"profilePage_([\d]+?)"/)?.[1])?(this.#setCache(name,id),logStatus.success(),id):(logStatus.error("Error: Get ins data error!"),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Instagram.getUserInfo"),!1}}async#followUser(name){try{var id=await this.#getUserInfo(name);if(id){var logStatus=scripts_echoLog({type:"followingIns",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/web/friendships/${id}/follow/`,method:"POST",dataType:"json",headers:{"x-csrftoken":this.#auth.csrftoken,origin:"https://www.instagram.com",referer:`https://www.instagram.com/${name}/`,"content-type":"application/x-www-form-urlencoded","sec-fetch-site":"same-origin","x-instagram-ajax":this.#auth.hash}});if("Success"===result)return 200===data?.status&&"following"===data.response?.result?(logStatus.success(),this.tasks.users=unique([...this.tasks.users,name]),!0):(logStatus.error("Error:"+(data?.response?.feedback_message||`${data?.statusText}(${data?.status})`)),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Instagram.followUser"),!1}}async#unfollowUser(name){try{if(this.whiteList.users.includes(name))return scripts_echoLog({type:"whiteList",text:"Instagram.unfollowUser",id:name}),!0;var id=await this.#getUserInfo(name);if(id){var logStatus=scripts_echoLog({type:"unfollowingIns",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/web/friendships/${id}/unfollow/`,method:"POST",dataType:"json",headers:{"x-csrftoken":this.#auth.csrftoken,origin:"https://www.instagram.com",referer:`https://www.instagram.com/${name}/`,"content-type":"application/x-www-form-urlencoded","sec-fetch-site":"same-origin","x-instagram-ajax":this.#auth.hash}});if("Success"===result)return 200===data?.status&&"ok"===data.response?.status?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Instagram.unfollowUser"),!1}}async toggle({doTask=!0,userLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.instagram.users||!doTask&&!globalOptions.undoTask.instagram.users)scripts_echoLog({type:"globalOptionsSkip",text:"instagram.users"});else{var realUsers=this.getRealParams("users",userLinks,doTask,link=>link.match(/https:\/\/www\.instagram\.com\/(.+)?\//)?.[1]);if(0<realUsers.length)for(var username of realUsers)prom.push(doTask?this.#followUser(username):this.#unfollowUser(username)),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Instagram.toggleUsers"),!1}}#setCache(name,id){try{this.#cache[name]=id,GM_setValue("instagramCache",this.#cache)}catch(error){throwError_throwError(error,"Instagram.setCache")}}}let social_Instagram=Instagram;class Reddit extends external_Swal_namespaceObject{tasks;whiteList;#auth;#initialized=!1;constructor(){super();var defaultTasksTemplate={reddits:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.reddit||{}}}async init(){try{return this.#initialized?!0:await this.#updateAuth()?(scripts_echoLog({}).success(i18n("initSuccess","Reddit")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Reddit")),!1)}catch(error){return throwError_throwError(error,"Reddit.init"),!1}}async#useBeta(){try{let logStatus=scripts_echoLog({text:i18n("changingRedditVersion")});return await new Promise(resolve=>{var newTab=GM_openInTab("https://www.reddit.com/",{active:!0,insert:!0,setParent:!0});newTab.name="ATv4_redditAuth",newTab.onclose=async()=>{logStatus.success(),resolve(await this.#updateAuth(!0))}})}catch(error){return throwError_throwError(error,"Reddit.useBeta"),!1}}async#updateAuth(beta=!1){try{var accessToken,logStatus=scripts_echoLog({text:i18n("updatingAuth","Reddit")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://www.reddit.com/",method:"GET",nochche:!0,headers:{"Cache-Control":"no-cache"}});if("Success"===result)if(data?.responseText.includes("www.reddit.com/login/"))logStatus.error("Error:"+i18n("loginReddit"),!0);else{if(200===data?.status)return data.responseText.includes("redesign-beta-optin-btn")&&!beta?await this.#useBeta():(accessToken=data.responseText.match(/"accessToken":"(.*?)","expires":"(.*?)"/)?.[1])?(this.#auth={token:accessToken},logStatus.success(),!0):(logStatus.error('Error: Parameter "accessToken" not found!'),!1);logStatus.error(`Error:${data?.statusText}(${data?.status})`)}else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Reddit.updateAuth"),!1}}async#toggleTask({name,doTask=!0}){try{if(!doTask&&this.whiteList.reddits.includes(name))return scripts_echoLog({type:"whiteList",text:"Reddit.undoTask",id:name}),!0;let type=doTask?"joiningReddit":"leavingReddit";/^u_/.test(name)&&(type=doTask?"followingRedditUser":"unfollowingRedditUser");var logStatus=scripts_echoLog({type:type,text:name}),{result,statusText,status,data}=await tools_httpRequest({url:"https://oauth.reddit.com/api/subscribe?redditWebClient=desktop2x&app=desktop2x-client-production&raw_json=1&gilding_detail=1",method:"POST",headers:{authorization:"Bearer "+this.#auth.token,"content-type":"application/x-www-form-urlencoded"},data:$.param({action:doTask?"sub":"unsub",sr_name:name,api_type:"json"})});return"Success"===result?200===data?.status?(logStatus.success(),doTask&&(this.tasks.reddits=unique([...this.tasks.reddits,name])),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Reddit.toggleTask"),!1}}async toggle({doTask=!0,redditLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.reddit.reddits||!doTask&&!globalOptions.undoTask.reddit.reddits)scripts_echoLog({type:"globalOptionsSkip",text:"reddit.reddits"});else{var realReddits=this.getRealParams("reddits",redditLinks,doTask,link=>{var name=link.match(/https?:\/\/www\.reddit\.com\/r\/([^/]*)/)?.[1],link=link.match(/https?:\/\/www\.reddit\.com\/user\/([^/]*)/)?.[1];return link?name||link:name});if(0<realReddits.length)for(var name of realReddits)prom.push(this.#toggleTask({name:name,doTask:doTask})),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Reddit.toggle"),!1}}}let social_Reddit=Reddit;class Twitch extends external_Swal_namespaceObject{tasks;whiteList;#auth=GM_getValue("twitchAuth")||{};#cache=GM_getValue("twitchCache")||{};#initialized=!1;#integrityToken;constructor(){super();var defaultTasksTemplate={channels:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.twitch||{}}}async init(){try{return this.#initialized?!0:this.#auth.authToken&&this.#auth.clientId&&this.#auth.clientVersion&&this.#auth.deviceId&&this.#auth.clientSessionId?await this.#verifyAuth(!0)||(GM_setValue("twitchAuth",null),await this.#updateAuth())?(scripts_echoLog({}).success(i18n("initSuccess","Twitch")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Twitch")),!1):!!await this.#updateAuth()&&(this.#initialized=!0)}catch(error){return throwError_throwError(error,"Twitch.init"),!1}}async#verifyAuth(isFirst){try{var logStatus=scripts_echoLog({text:i18n("verifyingAuth","Twitch")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",dataType:"json",headers:{Authorization:"OAuth "+this.#auth.authToken,"Client-Id":this.#auth.clientId},data:'[{"operationName":"FrontPageNew_User","variables":{"limit":1},"extensions":{"persistedQuery":{"version":1,"sha256Hash":"64bd07a2cbaca80699d62636d966cf6395a5d14a1f0a14282067dcb28b13eb11"}}}]'});return"Success"===result?200===data?.status&&data.response?.[0]?.data?.currentUser?(await this.#integrity(isFirst),logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Twitch.verifyAuth"),!1}}async#integrity(isFirst=!0,ct=""){try{var result,statusText,status,data,logStatus=scripts_echoLog({text:i18n("checkingTwitchIntegrity")});return!isFirst||this.#auth.authToken&&this.#auth.clientId&&this.#auth.clientVersion&&this.#auth.deviceId&&this.#auth.clientSessionId?({result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/integrity",method:"POST",dataType:"json",anonymous:!0,headers:{Origin:"https://www.twitch.tv",Referer:"https://www.twitch.tv/",Authorization:"OAuth "+this.#auth.authToken,"Client-Id":this.#auth.clientId,"Client-Version":this.#auth.clientVersion,"X-Device-Id":this.#auth.deviceId,"Client-Session-Id":this.#auth.clientSessionId,"x-kpsdk-ct":ct}}),"Success"===result?!ct&&data?.responseHeaders?.["x-kpsdk-ct"]?await this.#integrity(isFirst,data.responseHeaders["x-kpsdk-ct"]):200===data?.status&&data.response?.token?(this.#integrityToken=data.response.token,logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)):await this.#updateAuth(!1)}catch(error){return throwError_throwError(error,"Twitch.integrity"),!1}}async#updateAuth(isFirst=!0){try{let logStatus=scripts_echoLog({text:i18n("updatingAuth","Twitch")});return await new Promise(resolve=>{var newTab=GM_openInTab("https://www.twitch.tv/",{active:!0,insert:!0,setParent:!0});newTab.name="ATv4_twitchAuth",newTab.onclose=async()=>{var auth=GM_getValue("twitchAuth");auth?(this.#auth=auth,logStatus.success(),resolve(await this.#verifyAuth(isFirst))):(logStatus.error("Error: Update twitch auth failed!"),resolve(!1))}})}catch(error){return throwError_throwError(error,"Twitch.updateAuth"),!1}}async#toggleChannel({name,doTask=!0}){try{if(!doTask&&this.whiteList.channels.includes(name))return scripts_echoLog({type:"whiteList",text:"Twitch.unfollowChannel",id:name}),!0;var channelId=await this.#getChannelId(name);if(channelId){var logStatus=scripts_echoLog({type:`${doTask?"":"un"}followingTwitchChannel`,text:name}),followData='[{"operationName":"FollowButton_FollowUser","variables":{"input":{"disableNotifications":false,"targetID":"'+channelId+'"}},"extensions":{"persistedQuery":{"version":1,"sha256Hash":"800e7346bdf7e5278a3c1d3f21b2b56e2639928f86815677a7126b093b2fdd08"}}}]',unfollowData=`[{"operationName":"FollowButton_UnfollowUser","variables":{"input":{"targetID":"${channelId}"}},`+'"extensions":{"persistedQuery":{"version":1,"sha256Hash":"f7dae976ebf41c755ae2d758546bfd176b4eeb856656098bb40e0a672ca0d880"}}}]',{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",dataType:"json",anonymous:!0,headers:{Origin:"https://www.twitch.tv",Referer:"https://www.twitch.tv/",Authorization:"OAuth "+this.#auth.authToken,"Client-Id":this.#auth.clientId,"Client-Version":this.#auth.clientVersion,"X-Device-Id":this.#auth.deviceId,"Client-Session-Id":this.#auth.clientSessionId,"Client-Integrity":this.#integrityToken},data:doTask?followData:unfollowData});if("Success"===result)return 200===data?.status&&data.response?.[0]&&!data.response[0].errors?(logStatus.success(),doTask&&(this.tasks.channels=unique([...this.tasks.channels,name])),!0):(logStatus.error("Error:"+(data?.response?.[0].errors?.[0]?.message||`${data?.statusText}(${data?.status})`)),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Twitch.toggleChannel"),!1}}async#getChannelId(name){try{var logStatus=scripts_echoLog({type:"gettingTwitchChannelId",text:name}),channelId=this.#cache[name];if(channelId)return logStatus.success(),channelId;var{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",headers:{Authorization:"OAuth "+this.#auth.authToken,"Client-Id":this.#auth.clientId},responseType:"json",data:`[{"operationName":"ActiveWatchParty","variables":{"channelLogin":"${name}"},`+'"extensions":{"persistedQuery":{"version":1,"sha256Hash":"4a8156c97b19e3a36e081cf6d6ddb5dbf9f9b02ae60e4d2ff26ed70aebc80a30"}}}]'});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let channelId=data.response?.[0]?.data?.user?.id;return channelId?(this.#setCache(name,String(channelId)),logStatus.success(),channelId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Twitch.getChannelId"),!1}}async toggle({doTask=!0,channelLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.twitch.channels||!doTask&&!globalOptions.undoTask.twitch.channels)scripts_echoLog({type:"globalOptionsSkip",text:"twitch.channels"});else{var realChannels=this.getRealParams("channels",channelLinks,doTask,link=>link.match(/https:\/\/(www\.)?twitch\.tv\/(.+)/)?.[2]);if(0<realChannels.length)for(var channel of realChannels)prom.push(this.#toggleChannel({name:channel,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Twitch.toggle"),!1}}#setCache(name,id){try{this.#cache[name]=id,GM_setValue("twitchCache",this.#cache)}catch(error){throwError_throwError(error,"Twitch.setCache")}}}let social_Twitch=Twitch;class Vk extends external_Swal_namespaceObject{tasks;whiteList;#username="";#cache=GM_getValue("vkCache")||{};#initialized=!1;constructor(){super();var defaultTasksTemplate={names:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.vk||{}}}async init(){try{return this.#initialized?!0:await this.#verifyAuth()?(scripts_echoLog({}).success(i18n("initSuccess","Vk")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Vk")),!1)}catch(error){return throwError_throwError(error,"Vk.init"),!1}}async#verifyAuth(){try{var logStatus=scripts_echoLog({text:i18n("verifyAuth","Vk")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/im",method:"GET"});if("Success"===result)if(data?.finalUrl.includes("vk.com/login"))logStatus.error("Error:"+i18n("loginVk"),!0);else{if(200===data?.status)return this.#username=data.responseText.match(/TopNavBtn__profileLink" href="\/(.*?)"/)?.[1]||"",logStatus.success(),!0;logStatus.error(`Error:${data?.statusText}(${data?.status})`)}else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Vk.verifyAuth"),!1}}async#toggleGroup(name,dataParam,doTask=!0){try{var reqData,result,statusText,status,data,logStatus=scripts_echoLog({type:doTask?"joiningVkGroup":"leavingVkGroup",text:name});return"enter"===dataParam.groupAct&&!doTask||"leave"===dataParam.groupAct&&doTask?(logStatus.success(),!0):(reqData={act:doTask?"enter":"leave",al:1,gid:dataParam.groupId,hash:dataParam.groupHash},{result,statusText,status,data}=(doTask&&(reqData.context="_"),await tools_httpRequest({url:"https://vk.com/al_groups.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param(reqData)})),"Success"===result?200===data?.status?(logStatus.success(),doTask&&(this.tasks.names=unique([...this.tasks.names,name])),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Vk.toggleGroup"),!1}}async#togglePublic(name,dataParam,doTask=!0){try{var result,statusText,status,data,logStatus=scripts_echoLog({type:doTask?"joiningVkPublic":"leavingVkPublic",text:name});return dataParam.publicJoined&&doTask||!dataParam.publicJoined&&!doTask?(logStatus.success(),!0):({result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/al_public.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:doTask?"a_enter":"a_leave",al:1,pid:dataParam.publicPid,hash:dataParam.publicHash})}),"Success"===result?200===data?.status?(logStatus.success(),doTask&&(this.tasks.names=unique([...this.tasks.names,name])),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Vk.togglePublic"),!1}}async#toggleLikeWall(name,dataParam,doTask=!0){try{var logStatus=scripts_echoLog({type:doTask?"likingVkPublic":"unlikingVkPublic",text:name}),postData={act:"a_set_reaction",al:1,event_subtype:"post_modal",from:"wall_page",hash:dataParam.hash,object:dataParam.object,track_code:dataParam.trackCode,wall:2},{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=(doTask&&(postData.reaction_id=0),await tools_httpRequest({url:"https://vk.com/like.php?act=a_set_reaction",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param(postData)}));return"Success"===resultR?200===dataR?.status&&!0===dataR.response?.payload?.[1]?.[1]?.like_my?(logStatus.success(),!0):(logStatus.error(`Error:${dataR?.statusText}(${dataR?.status})`),!1):(logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1)}catch(error){return throwError_throwError(error,"Vk.sendWall"),!1}}async#sendWall(name){try{var logStatus=scripts_echoLog({type:"sendingVkWall",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/like.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:"publish_box",al:1,object:name})});if("Success"===result)if(200===data?.status){var hash=data.responseText.match(/shHash:[\s]*'(.*?)'/)?.[1];if(hash){var{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://vk.com/like.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({Message:"",act:"a_do_publish",al:1,close_comments:0,friends_only:0,from:"box",hash:hash,list:"",mark_as_ads:0,mute_notifications:0,object:name,ret_data:1,to:0})});if("Success"===resultR){if(200===dataR?.status){var postId,ownerId,jsonData=JSON.parse(dataR.responseText?.replace("\x3c!--","")||"{}");if(!0===jsonData?.payload?.[1]?.[1]?.share_my)return logStatus.success(),postId=String(jsonData?.payload?.[1]?.[1]?.post_id),ownerId=String(jsonData?.payload?.[1]?.[1]?.owner_id),postId&&ownerId&&this.#setCache(name,ownerId+"_"+postId),this.tasks.names=unique([...this.tasks.names,name]),!0}logStatus.error(`Error:${dataR?.statusText}(${dataR?.status})`)}else logStatus.error(resultR+`:${statusTextR}(${statusR})`)}else logStatus.error('Error: Get "hash" failed')}else logStatus.error(`Error:${data?.statusText}(${data?.status})`);else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Vk.sendWall"),!1}}async#deleteWall(name,dataParams){try{var logStatus=scripts_echoLog({type:"deletingVkWall",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/al_wall.php?act=delete",method:"POST",headers:{origin:"https://vk.com",referer:`https://vk.com/${this.#username}?w=wall${this.#cache[name]}%2Fall`,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:"delete",al:1,confirm:0,from:"wkview",hash:dataParams.wallHash,post:this.#cache[name]})});return"Success"===result?200===data?.status&&JSON.parse(data.responseText?.replace("\x3c!--","")||"{}")?.payload?.[1]?.[1]?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Vk.deleteWall"),!1}}async#getId(name,doTask){try{let url="https://vk.com/"+name;if(/^wall-/.test(name)){if(doTask)return{type:"sendWall"};if(!this.#cache[name])return{type:"unSupport"};url=`https://vk.com/${this.#username}?w=wall`+this.#cache[name]}var logStatus=scripts_echoLog({type:"gettingVkId",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:url,method:"GET"});if("Success"===result)if(200===data?.status){var[,groupAct,groupId,,groupHash]=data.responseText.match(/Groups.(enter|leave)\(.*?,.*?([\d]+?), (&#39;|')(.*?)(&#39;|')/)||[],publicHash=data.responseText.match(/"enterHash":"(.*?)"/)?.[1],publicPid=data.responseText.match(/"public_id":([\d]+?),/)?.[1],publicJoined=!data.responseText.includes("Public.subscribe");if(groupAct&&groupId&&groupHash)return logStatus.success(),{groupAct:groupAct,groupId:groupId,groupHash:groupHash,type:"group"};if(publicHash&&publicPid)return logStatus.success(),{publicHash:publicHash,publicPid:publicPid,publicJoined:publicJoined,type:"public"};if(name.includes("action=like")){var hash=data.responseText.match(/data-reaction-hash="(.*?)"/)?.[1],trackCode=data.responseText.match(/data-post-track-code="(.*?)"/)?.[1],object=name.match(/wall-[\w_]+/)?.[0];if(hash&&trackCode&&object)return logStatus.success(),{type:"likeWall",hash:hash,trackCode:trackCode,object:object}}else if(data.responseText.includes("wall.deletePost")&&!doTask){var wallHash=data.responseText.match(/wall\.deletePost\(this, '.*?', '(.*?)'\)/)?.[1];if(wallHash)return logStatus.success(),{type:"deleteWall",wallHash:wallHash}}else if(name.includes("wall")&&doTask)return logStatus.success(),{type:"sendWall"};logStatus.error("Error: Parameters not found!")}else logStatus.error(`Error:${data?.statusText}(${data?.status})`);else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Vk.getId"),!1}}async#toggleVk({name,doTask=!0}){try{if(!doTask&&this.whiteList.names.includes(name))return scripts_echoLog({type:"whiteList",text:"Vk.undoTask",id:name}),!0;var formatName=name.replace(/\/$/,""),data=await this.#getId(formatName,doTask);if(!data)return!1;switch(data.type){case"group":return await this.#toggleGroup(formatName,data,doTask);case"public":return await this.#togglePublic(formatName,data,doTask);case"likeWall":return await this.#toggleLikeWall(formatName,data,doTask);case"sendWall":return!doTask||await this.#sendWall(formatName);case"deleteWall":return!!doTask||await this.#deleteWall(formatName,data);default:return!1}}catch(error){return throwError_throwError(error,"Vk.toggleVk"),!1}}async toggle({doTask=!0,nameLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.vk.names||!doTask&&!globalOptions.undoTask.vk.names)scripts_echoLog({type:"globalOptionsSkip",text:"vk.names"});else{var realNames=this.getRealParams("names",nameLinks,doTask,link=>link.match(/https:\/\/vk\.com\/([^/]+)/)?.[1]);if(0<realNames.length)for(var name of realNames)prom.push(this.#toggleVk({name:name,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Vk.toggle"),!1}}#setCache(name,postId){try{this.#cache[name]=postId,GM_setValue("vkCache",this.#cache)}catch(error){throwError_throwError(error,"Vk.setCache")}}}let social_Vk=Vk;class Youtube extends external_Swal_namespaceObject{tasks;whiteList;#auth=GM_getValue("youtubeAuth")||{};#initialized=!1;#verifyChannel="https://www.youtube.com/channel/"+globalOptions.other.youtubeVerifyChannel;constructor(){super();var defaultTasksTemplate={channels:[],likes:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.youtube||{}}}async init(){try{return this.#initialized?!0:this.#auth.PAPISID?await this.#verifyAuth()||(GM_setValue("youtubeAuth",null),await this.#updateAuth())?(scripts_echoLog({}).success(i18n("initSuccess","Youtube")),this.#initialized=!0):(scripts_echoLog({}).error(i18n("initFailed","Youtube")),!1):!!await this.#updateAuth()&&(this.#initialized=!0)}catch(error){return throwError_throwError(error,"Youtube.init"),!1}}async#verifyAuth(){try{return await this.#toggleChannel({link:this.#verifyChannel,doTask:!0,verify:!0})}catch(error){return throwError_throwError(error,"Youtube.verifyAuth"),!1}}async#updateAuth(){try{let logStatus=scripts_echoLog({text:i18n("updatingAuth","Youtube")});return await new Promise(resolve=>{GM_cookie.list({url:"https://www.youtube.com/@YouTube"},async(cookies,error)=>{error?(logStatus.error("Error: Update youtube auth failed!"),resolve(!1)):(error=cookies.find(cookie=>"__Secure-3PAPISID"===cookie.name)?.value)?(GM_setValue("youtubeAuth",{PAPISID:error}),this.#auth={PAPISID:error},logStatus.success(),resolve(await this.#verifyAuth())):(logStatus.error(i18n("needLogin")),resolve(!1))})})}catch(error){return throwError_throwError(error,"Youtube.updateAuth"),!1}}#getInfo(link,type){return(async(link,type)=>{try{var apiKey,context,client,request,channelId,videoId,likeParams,logStatus=scripts_echoLog({text:i18n("gettingYtbToken")}),{result,statusText,status,data}=await tools_httpRequest({url:link,method:"GET"});return"Success"===result?200===data?.status?data.responseText.includes("accounts.google.com/ServiceLogin?service=youtube")?(logStatus.error("Error:"+i18n("loginYtb"),!0),{needLogin:!0}):(apiKey=data.responseText.match(/"INNERTUBE_API_KEY":"(.*?)"/)?.[1],context=(data.responseText.match(/\(\{"INNERTUBE_CONTEXT":([\w\W]*?)\}\)/)||data.responseText.match(/"INNERTUBE_CONTEXT":([\w\W]*?\}),"INNERTUBE/))?.[1]||"{}",{client,request}=JSON.parse(context),apiKey&&client&&request?(client.hl="en","channel"===type?(channelId=data.responseText.match(/"channelId":"(.+?)"/)?.[1])?(logStatus.success(),{params:{apiKey:apiKey,client:client,request:request,channelId:channelId}}):(logStatus.error('Error: Get "channelId" failed!'),{}):"likeVideo"===type?(videoId=data.responseText.match(/<link rel="shortlinkUrl" href="https:\/\/youtu\.be\/(.*?)">/)?.[1],likeParams=data.responseText.match(/"likeParams":"(.*?)"/)?.[1],videoId?(logStatus.success(),{params:{apiKey:apiKey,client:client,request:request,videoId:videoId,likeParams:likeParams}}):(logStatus.error('Error: Get "videoId" failed!'),{})):(logStatus.error("Error: Unknown type"),{})):(logStatus.error('Error: Parameter "apiKey" not found!'),{})):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),{}):(logStatus.error(result+`:${statusText}(${status})`),{})}catch(error){return throwError_throwError(error,"Youtube.getInfo"),{}}})(link,type)}async#toggleChannel({link,doTask=!0,verify=!1}){try{var{params,needLogin}=await this.#getInfo(link,"channel"),{apiKey,client,request,channelId}=params||{};if(needLogin)scripts_echoLog({html:i18n("loginYtb")});else if(apiKey&&client&&request&&channelId){if(!doTask&&!verify&&this.whiteList.channels.includes(channelId))return scripts_echoLog({type:"whiteList",text:"Youtube.unfollowChannel",id:channelId}),!0;var logStatus=verify?scripts_echoLog({text:i18n("verifyingAuth","Youtube")}):scripts_echoLog({type:doTask?"followingYtbChannel":"unfollowingYtbChannel",text:channelId}),nowTime=parseInt(String((new Date).getTime()/1e3),10),{result,statusText,status,data}=await tools_httpRequest({url:`https://www.youtube.com/youtubei/v1/subscription/${doTask?"":"un"}subscribe?key=${apiKey}&prettyPrint=false`,method:"POST",headers:{origin:"https://www.youtube.com",referer:"https://www.youtube.com/channel/"+channelId,"content-type":"application/json","x-goog-authuser":"0","x-goog-visitor-id":client?.visitorData,"x-origin":"https://www.youtube.com",authorization:`SAPISIDHASH ${nowTime}_`+sha1(`${nowTime} ${this.#auth.PAPISID} https://www.youtube.com`)},data:JSON.stringify({context:{client:client,request:{sessionId:request?.sessionId,internalExperimentFlags:[],consistencyTokenJars:[]},user:{}},channelIds:[channelId],params:doTask?"EgIIAhgA":"CgIIAhgA"})});if("Success"===result)return 200===data?.status?doTask&&(/"subscribed":true/.test(data.responseText)||data.responseText.includes("The subscription already exists"))||!doTask&&/"subscribed":false/.test(data.responseText)?(logStatus.success(),doTask&&!verify&&(this.tasks.channels=unique([...this.tasks.channels,link])),!0):verify&&data.responseText.includes("You may not subscribe to yourself")?(logStatus.success(),!0):(logStatus.error(i18n("tryUpdateYtbAuth"),!0),!1):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}else scripts_echoLog({text:'"getYtbToken" failed'});return!1}catch(error){return throwError_throwError(error,"Youtube.toggleChannel"),!1}}async#toggleLikeVideo({link,doTask=!0}){try{var{params,needLogin}=await this.#getInfo(link,"likeVideo"),{apiKey,client,request,videoId,likeParams}=params||{};if(needLogin)scripts_echoLog({html:""+i18n("loginYtb")});else if(apiKey&&client&&request&&videoId&&likeParams){if(!doTask&&this.whiteList.likes.includes(videoId))return scripts_echoLog({type:"whiteList",text:"Youtube.unlikeVideo",id:videoId}),!0;var logStatus=scripts_echoLog({type:doTask?"likingYtbVideo":"unlikingYtbVideo",text:videoId}),nowTime=parseInt(String((new Date).getTime()/1e3),10),likeVideoData={context:{client:client,request:{sessionId:request.sessionId,internalExperimentFlags:[],consistencyTokenJars:[]},user:{}},target:{videoId:videoId}};if(doTask){if(!likeParams)return logStatus.error("Empty likeParams"),!1;likeVideoData.params=likeParams}var{result,statusText,status,data}=await tools_httpRequest({url:`https://www.youtube.com/youtubei/v1/like/${doTask?"":"remove"}like?key=`+apiKey,method:"POST",headers:{origin:"https://www.youtube.com",referer:"https://www.youtube.com/watch?v="+videoId,"content-type":"application/json","x-goog-authuser":"0","x-goog-visitor-id":client.visitorData,"x-origin":"https://www.youtube.com",authorization:`SAPISIDHASH ${nowTime}_`+sha1(`${nowTime} ${this.#auth.PAPISID} https://www.youtube.com`)},data:JSON.stringify(likeVideoData)});if("Success"===result)return 200===data?.status?doTask&&data.responseText.includes("Added to Liked videos")||!doTask&&(data.responseText.includes("Removed from Liked videos")||data.responseText.includes("Dislike removed"))?(logStatus.success(),doTask&&(this.tasks.likes=unique([...this.tasks.likes,link])),!0):(logStatus.error(i18n("tryUpdateYtbAuth"),!0),!1):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}else scripts_echoLog({text:'"getYtbToken" failed'});return!1}catch(error){return throwError_throwError(error,"Youtube.toggleLikeVideo"),!1}}async toggle({doTask=!0,channelLinks=[],videoLinks=[]}){try{if(!this.#initialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.youtube.channels||!doTask&&!globalOptions.undoTask.youtube.channels)scripts_echoLog({type:"globalOptionsSkip",text:"youtube.channels"});else{var realChannels=this.getRealParams("channels",channelLinks,doTask,link=>/^https:\/\/(www\.)?google\.com.*?\/url\?.*?url=https:\/\/www\.youtube\.com\/.*/.test(link)?link.match(/url=(https:\/\/www\.youtube\.com\/.*)/)?.[1]:link);if(0<realChannels.length)for(var channel of realChannels)prom.push(this.#toggleChannel({link:channel,doTask:doTask})),await delay(1e3)}if(doTask&&!globalOptions.doTask.youtube.likes||!doTask&&!globalOptions.undoTask.youtube.likes)scripts_echoLog({type:"globalOptionsSkip",text:"youtube.likes"});else{var realLikes=this.getRealParams("likes",videoLinks,doTask,link=>/^https:\/\/(www\.)?google\.com.*?\/url\?.*?url=https:\/\/www\.youtube\.com\/.*/.test(link)?link.match(/url=(https:\/\/www\.youtube\.com\/.*)/)?.[1]:link);if(0<realLikes.length)for(var video of realLikes)prom.push(this.#toggleLikeVideo({link:video,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Youtube.toggle"),!1}}}let social_SteamASF=class{#asfOptions;#botName="asf";#groupInfo;async init(){try{var asfCommandsUrl=new URL("/Api/Command/",globalOptions.ASF.AsfIpcUrl),logStatus=(this.#asfOptions={url:asfCommandsUrl.href,method:"POST",responseType:"json",headers:{accept:"application/json","Content-Type":"application/json",Host:asfCommandsUrl.host,Origin:asfCommandsUrl.origin,Referer:asfCommandsUrl.href,Authentication:globalOptions.ASF.AsfIpcPassword}},globalOptions.ASF.AsfBotname&&(this.#botName=globalOptions.ASF.AsfBotname),scripts_echoLog({text:i18n("initingASF")})),{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:'{"Command":"!stats"}'});return"Success"===result?!0===data?.response?.Success&&"OK"===data.response.Message&&data.response.Result?(logStatus.success(),!0):(data?.response?.Result||data?.response?.Message?logStatus.error(data?.response?.Result||data.response.Message):logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.init"),!1}}async joinGroup(groupName){try{var logStatus=scripts_echoLog({type:"joiningSteamGroup",text:groupName});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!JOINGROUP ${this.#botName} `+groupName})});return"Success"===result?200===data?.status&&["已加入","已申请","Joined","Applied","Присоединился","costs"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.joinGroup"),!1}}async leaveGroup(groupName){try{if(this.#groupInfo||await this.#getGroupId()){var groupId=await this.#groupInfo[groupName];if(groupId){var logStatus=scripts_echoLog({type:"leavingSteamGroup",text:groupName});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!LEAVEGROUP ${this.#botName} `+groupId})});if("Success"===result)return 200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}}return!1}catch(error){return throwError_throwError(error,"SteamASF.leaveGroup"),!1}}async#getGroupId(){try{var logStatus=scripts_echoLog({type:"gettingSteamGroupId",text:"All"}),{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:"!GROUPLIST "+this.#botName})});return"Success"===result?200===data?.status&&data.response?.Result?.includes("|")?(this.#groupInfo=Object.fromEntries(data.response.Result.split("\n").map(line=>{var[,line,id]=line.trim().split("|");return line&&id?[line,id]:null}).filter(ele=>ele)),logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.getGroupID"),!1}}async addToWishlist(gameId){try{var logStatus=scripts_echoLog({type:"addingToWishlist",text:gameId});if(!0===(await this.#checkGame(gameId)).wishlist)return logStatus.success(),!0;let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!ADDWISHLIST ${this.#botName} `+gameId})});return"Success"===result?200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.addToWishlist"),!1}}async removeFromWishlist(gameId){try{var logStatus=scripts_echoLog({type:"removingFromWishlist",text:gameId});if(!1===(await this.#checkGame(gameId)).wishlist)return logStatus.success(),!0;let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!REMOVEWISHLIST ${this.#botName} `+gameId})});return"Success"===result?200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.removeFromWishlist"),!1}}async toggleFollowGame(gameId,doTask){try{var logStatus=scripts_echoLog({type:`${doTask?"":"un"}followingGame`,text:gameId});if(doTask&&!0===(await this.#checkGame(gameId)).followed||!doTask&&!1===(await this.#checkGame(gameId)).followed)return logStatus.success(),!0;let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!${doTask?"":"UN"}FOLLOWGAME ${this.#botName} `+gameId})});return"Success"===result?200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.toggleFollowGame"),!1}}async#checkGame(gameId){try{var matchedResult,{result,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!CHECK ${this.#botName} `+gameId})});return"Success"===result?200===data?.status&&data.response?.Result?.includes(gameId)&&3<(matchedResult=data.response.Result.split("\n").find(result=>result.includes(gameId))?.split("|"))?.length?{wishlist:"√"===matchedResult.at(-3).trim()||"√"===matchedResult.at(-2).trim(),followed:"√"===matchedResult.at(-1).trim()}:{}:{}}catch(error){return throwError_throwError(error,"SteamASF.checkGame"),{}}}async toggleCurator(curatorId,doTask=!0){try{var logStatus=scripts_echoLog({type:doTask?"followingCurator":"unfollowingCurator",text:curatorId});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!${doTask?"":"UN"}FOLLOWCURATOR ${this.#botName} `+curatorId})});return"Success"===result?200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.toggleCurator"),!1}}async addLicense(id){try{var[type,ids]=id.split("-"),idsArr=ids.split(",");if("appid"===type){var logStatus=scripts_echoLog({type:"addingFreeLicense",text:ids});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!addlicense ${this.#botName} `+idsArr.map(id=>"app/"+id).join(",")})});return"Success"===result?200===data?.status&&["AlreadyPurchased","OK"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}if("subid"===type){let logStatus=scripts_echoLog({type:"addingFreeLicenseSubid",text:ids});var{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!addlicense ${this.#botName} `+idsArr.map(id=>"sub/"+id).join(",")})});if("Success"===result){if(200===data?.status&&data.response?.Result){let resultLines=data.response.Result.split("\n");return idsArr.forEach(subid=>{let targetLine=resultLines.find(text=>text.includes(subid));targetLine&&["成功","Success","Успех"].find(text=>targetLine.includes(text))?scripts_echoLog({}).success(targetLine):scripts_echoLog({}).error(targetLine)}),!0}logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`)}else logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"SteamASF.addLicense"),!1}}async requestPlayTestAccess(id){try{var logStatus=scripts_echoLog({type:"requestingPlayTestAccess",text:id});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!REQUESTACCESS ${this.#botName} `+id})});return"Success"===result?200===data?.status&&["成功","Success","Успех"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.requestPlayTestAccess"),!1}}async playGames(ids){try{await this.addLicense("appid-"+ids);var logStatus=scripts_echoLog({text:i18n("playingGames",ids)});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:`!play ${this.#botName} `+ids})});return"Success"===result?200===data?.status&&["正在运行"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.playGames"),!1}}async stopPlayGames(){try{var logStatus=scripts_echoLog({text:i18n("stoppingPlayGames")});let{result,statusText,status,data}=await tools_httpRequest({...this.#asfOptions,data:JSON.stringify({Command:"!reset "+this.#botName})});return"Success"===result?200===data?.status&&["完成"].find(text=>data.response?.Result?.includes(text))?(logStatus.success(),!0):(logStatus.error(`Error:${data?.response?.Result||data?.response?.Message||data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"SteamASF.stopPlayGames"),!1}}};class Steam extends external_Swal_namespaceObject{tasks;whiteList;#cache={group:{},officialGroup:{},forum:{},workshop:{},curator:{},...GM_getValue("steamCache")};#auth={};#storeInitialized=!1;#communityInitialized=!1;#area="CN";#oldArea;#areaStatus="end";#ASF;constructor(){super();var defaultTasksTemplate={groups:[],officialGroups:[],wishlists:[],follows:[],forums:[],workshops:[],workshopVotes:[],curators:[],curatorLikes:[],announcements:[],licenses:[],playtests:[],playTime:[]};this.tasks=defaultTasksTemplate,this.whiteList={...defaultTasksTemplate,...GM_getValue("whiteList")?.steam||{}}}async init(type="all"){try{if(globalOptions.ASF.AsfEnabled&&globalOptions.ASF.AsfIpcUrl&&globalOptions.ASF.AsfIpcPassword)return this.#ASF=new social_SteamASF,!!await this.#ASF.init()&&(this.#storeInitialized=!0,this.#communityInitialized=!0);if("store"===type){if(!this.#storeInitialized){let storeInitialized=await this.#updateStoreAuth();if(storeInitialized=storeInitialized||await this.#updateStoreAuthTab(),this.#storeInitialized=storeInitialized,!this.#storeInitialized)return scripts_echoLog({}).error(i18n("initFailed","Steam")),!1;scripts_echoLog({}).success(i18n("initSuccess","SteamStore"))}}else{if("community"!==type)return this.#storeInitialized&&this.#communityInitialized?(scripts_echoLog({}).success(i18n("initSuccess","Steam")),!0):(scripts_echoLog({}).error(i18n("initFailed","Steam")),!1);if(!this.#communityInitialized){let communityInitialized=await this.#updateCommunityAuth();if(communityInitialized||(communityInitialized=await this.#updateCommunityAuthTab(),GM_setValue("steamCommunityAuth",null)),this.#communityInitialized=communityInitialized,!this.#communityInitialized)return scripts_echoLog({}).error(i18n("initFailed","Steam")),!1;scripts_echoLog({}).success(i18n("initSuccess","SteamCommunity"))}}return!0}catch(error){return throwError_throwError(error,"Steam.init"),!1}}async#refreshToken(type="steamStore"){try{var host={steamStore:"store.steampowered.com",steamCommunity:"steamcommunity.com"},logStatus=scripts_echoLog({text:i18n("refreshingToken",i18n(type))}),formData=new FormData,{result,statusText,status,data}=(formData.append("redir",`https://${host[type]}/`),await tools_httpRequest({url:"https://login.steampowered.com/jwt/ajaxrefresh",method:"POST",responseType:"json",headers:{Host:"login.steampowered.com",Origin:"https://"+host[type],Referer:`https://${host[type]}/`},data:formData}));return"Success"===result?data?.response?.success?await this.#setStoreToken(data.response,type)?(logStatus.success(),!0):(logStatus.error("Error"),!1):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.refreshToken"),!1}}async#setStoreToken(param,type){try{var host={steamStore:"store.steampowered.com",steamCommunity:"steamcommunity.com"},logStatus=scripts_echoLog({text:i18n("settingToken",i18n(type))}),formData=new FormData,{result,statusText,status,data}=(formData.append("steamID",param.steamID),formData.append("nonce",param.nonce),formData.append("redir",param.redir),formData.append("auth",param.auth),await tools_httpRequest({url:`https://${host[type]}/login/settoken`,method:"POST",headers:{Accept:"application/json, text/plain, */*",Host:host[type],Origin:"https://"+host[type]},data:formData}));return"Success"===result?200===data?.status?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.setStoreToken"),!1}}async#updateStoreAuth(retry=!1){try{var storeSessionID,logStatus=scripts_echoLog({text:i18n("updatingAuth",i18n("steamStore"))}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/",method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Upgrade-Insecure-Requests":"1"},fetch:!1,redirect:"manual"});return 200===data?.status?data.responseText.includes("data-miniprofile=")?(storeSessionID=data.responseText.match(/g_sessionID = "(.+?)";/)?.[1])?(this.#auth.storeSessionID=storeSessionID,logStatus.success(),!0):(logStatus.error('Error: Get "sessionID" failed'),!1):!await this.#refreshToken("steamStore")||(logStatus.warning(i18n("retry")),retry)?(logStatus.error("Error:"+i18n("needLoginSteamStore"),!0),!1):this.#updateStoreAuth(!0):[301,302].includes(data?.status)?!await this.#refreshToken("steamStore")||(logStatus.warning(i18n("retry")),retry)?(logStatus.error("Error:"+i18n("needLoginSteamStore"),!0),!1):this.#updateStoreAuth(!0):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.updateStoreAuth"),!1}}async#updateStoreAuthTab(){try{let logStatus=scripts_echoLog({text:i18n("updatingAuth",i18n("steamStoreTab"))});return await new Promise(resolve=>{GM_deleteValue("steamStoreAuth"),GM_setValue("ATv4_updateStoreAuth",!0);let newTab=GM_openInTab("https://store.steampowered.com/",{active:!0,setParent:!0}),listenerId=(newTab.name="ATv4_updateStoreAuth",GM_addValueChangeListener("steamStoreAuth",(key,oldValue,newValue)=>{GM_removeValueChangeListener(listenerId),GM_deleteValue("ATv4_updateStoreAuth"),newTab?.close(),window.focus(),newValue&&JSON.stringify(newValue)!==JSON.stringify(oldValue)?(this.#auth.storeSessionID=newValue.storeSessionID,logStatus.success(),resolve(!0)):(logStatus.error("Failed"),resolve(!1))}));newTab.onclose=()=>{GM_deleteValue("ATv4_updateStoreAuth")}})}catch(error){return throwError_throwError(error,"Steam.updateStoreAuthTab"),!1}}async#updateCommunityAuthTab(){try{let logStatus=scripts_echoLog({text:i18n("updatingAuth",i18n("steamCommunityTab"))});return await new Promise(resolve=>{GM_deleteValue("steamCommunityAuth"),GM_setValue("ATv4_updateCommunityAuth",!0);let newTab=GM_openInTab("https://steamcommunity.com/my",{active:!0,setParent:!0}),listenerId=(newTab.name="ATv4_updateCommunityAuth",GM_addValueChangeListener("steamCommunityAuth",(key,oldValue,newValue)=>{GM_removeValueChangeListener(listenerId),GM_deleteValue("ATv4_updateCommunityAuth"),newTab?.close(),window.focus(),newValue&&JSON.stringify(newValue)!==JSON.stringify(oldValue)?(this.#auth.steam64Id=newValue.steam64Id,this.#auth.communitySessionID=newValue.communitySessionID,logStatus.success(),resolve(!0)):(logStatus.error("Failed"),resolve(!1))}));newTab.onclose=()=>{GM_deleteValue("ATv4_updateCommunityAuth")}})}catch(error){return throwError_throwError(error,"Steam.updateCommunityAuthTab"),!1}}async#updateCommunityAuth(){try{var logStatus=scripts_echoLog({text:i18n("gettingUserLink")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/my",method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",Host:"steamcommunity.com","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate"},fetch:!1});if(200===data?.status)if(data.finalUrl.includes("https://steamcommunity.com/login/home"))logStatus.error("Error:"+i18n("needLoginSteamCommunity"),!0);else{var steam64Id=data.responseText.match(/g_steamID = "(.+?)";/)?.[1],communitySessionID=data.responseText.match(/g_sessionID = "(.+?)";/)?.[1];if(steam64Id&&communitySessionID)return this.#auth.steam64Id=steam64Id,this.#auth.communitySessionID=communitySessionID,logStatus.success(),!0;logStatus.error('Error: Get "sessionID" failed')}else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Steam.updateCommunityAuth"),!1}}async#getAreaInfo(){try{var logStatus=scripts_echoLog({text:i18n("gettingAreaInfo")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/cart/",method:"GET"});if("Success"===result)if(200===data?.status){var cartConfigRaw=data.responseText.match(/data-cart_config="(.*?)"/)?.[1],temp=document.createElement("div"),cartConfigStr=(temp.innerHTML=cartConfigRaw||"{}",temp.textContent||temp.innerText);let cartConfig;try{cartConfig=JSON.parse(cartConfigStr)}catch(error){return logStatus.error("Error: get country info filed"),console.error(error),{}}if(cartConfig.rgUserCountryOptions){var userInfoRaw=data.responseText.match(/data-userinfo="(.*?)"/)?.[1],temp1=document.createElement("div"),userInfoStr=(temp1.innerHTML=userInfoRaw||"{}",temp1.textContent||temp1.innerText);let userInfo;try{userInfo=JSON.parse(userInfoStr)}catch(error){return logStatus.error("Error: get country info filed"),console.error(error),{}}var currentArea=userInfo.country_code,areas=Object.keys(cartConfig.rgUserCountryOptions).filter(area=>"help"!==area);if(currentArea&&0<areas.length)return this.#area=currentArea,logStatus.success(),{currentArea:currentArea,areas:areas};logStatus.error("Error: get country info filed")}else logStatus.warning("Warning: Area cannot be changed")}else logStatus.error(`Error:${data?.statusText}(${data?.status})`);else logStatus.error(result+`:${statusText}(${status})`);return{}}catch(error){return throwError_throwError(error,"Steam.getAreaInfo"),{}}}async#changeArea(area){try{if("waiting"===this.#areaStatus&&await new Promise(resolve=>{let checker=setInterval(()=>{"waiting"!==this.#areaStatus&&(clearInterval(checker),resolve(!0))})}),this.#area===area||!area&&"CN"!==this.#area)return!0;this.#areaStatus="waiting";let aimedArea=area;if(!aimedArea){var{currentArea,areas}=await this.#getAreaInfo();if(!currentArea||!areas)return!(this.#areaStatus="error");if("CN"!==currentArea)return this.#areaStatus="skip",scripts_echoLog({text:"notNeededChangeArea"}),"skip";var anotherArea=areas.filter(area=>area&&"CN"!==area);if(!anotherArea||0===anotherArea.length)return this.#areaStatus="noAnotherArea",scripts_echoLog({text:"noAnotherArea"}),!1;[aimedArea]=anotherArea}var logStatus=scripts_echoLog({text:i18n("changingArea",aimedArea)}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/country/setcountry",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({cc:aimedArea,sessionid:this.#auth.storeSessionID})});if("Success"!==result)return this.#areaStatus="error",logStatus.error(result+`:${statusText}(${status})`),"CN";if(200!==data?.status||"true"!==data.responseText)return this.#areaStatus="error",logStatus.error(`Error:${data?.statusText}(${data?.status})`),"CN";{let currentArea=(await this.#getAreaInfo()).currentArea;return(currentArea&&(this.#area=currentArea,this.#oldArea||(this.#oldArea=currentArea)),currentArea===aimedArea)?(this.#areaStatus="success",logStatus.success(),currentArea):(this.#areaStatus="error",logStatus.error("Error: change country filed"),"CN")}}catch(error){return this.#areaStatus="error",throwError_throwError(error,"Steam.changeArea"),!1}}async#joinGroup(groupName){try{var logStatus,result,statusText,status,data;return this.#ASF?!!await this.#ASF.joinGroup(groupName)&&(this.tasks.groups=unique([...this.tasks.groups,groupName]),!0):(logStatus=scripts_echoLog({type:"joiningSteamGroup",text:groupName}),{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/groups/"+groupName,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({action:"join",sessionID:this.#auth.communitySessionID})}),"Success"===result?200!==data?.status||data.responseText.includes("grouppage_join_area")?(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.success(),this.tasks.groups=unique([...this.tasks.groups,groupName]),!0):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Steam.joinGroup"),!1}}async#leaveGroup(groupName){try{if(this.whiteList.groups.includes(groupName))return scripts_echoLog({type:"whiteList",text:"Steam.leaveGroup",id:groupName}),!0;if(this.#ASF)return await this.#ASF.leaveGroup(groupName);var groupId=await this.#getGroupId(groupName);if(groupId){var logStatus=scripts_echoLog({type:"leavingSteamGroup",text:groupName}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/profiles/${this.#auth.steam64Id}/home_process`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionID:this.#auth.communitySessionID,action:"leaveGroup",groupId:groupId})});if("Success"===result)return 200===data?.status&&data.finalUrl.includes("groups")&&0===$(data.responseText.replace(/<img.*?>/g,"").toLowerCase()).find(`a[href='https://steamcommunity.com/groups/${groupName.toLowerCase()}']`).length?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Steam.leaveGroup"),!1}}async#getGroupId(groupName){try{var logStatus=scripts_echoLog({type:"gettingSteamGroupId",text:groupName}),groupId=this.#cache.group[groupName];if(groupId)return logStatus.success(),groupId;var{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/groups/"+groupName,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let groupId=data.responseText.match(/OpenGroupChat\( '([0-9]+)'/)?.[1];return groupId?(this.#setCache("group",groupName,groupId),logStatus.success(),groupId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getGroupID"),!1}}async#joinOfficialGroup(gameId){try{var logStatus,result,statusText,status,data,groupId;return this.#ASF?!!await this.#ASF.joinGroup(gameId)&&(this.tasks.officialGroups=unique([...this.tasks.officialGroups,gameId]),!0):(logStatus=scripts_echoLog({type:"joiningSteamOfficialGroup",text:gameId}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/games/${gameId}?action=join&sessionID=`+this.#auth.communitySessionID,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}),"Success"===result?200!==data?.status||data.responseText.includes('id="publicGroupJoin"')?(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.success(),this.tasks.officialGroups=unique([...this.tasks.officialGroups,gameId]),(groupId=data.responseText.match(/steam:\/\/friends\/joinchat\/([0-9]+)/)?.[1])&&this.#setCache("officialGroup",gameId,groupId),!0):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Steam.joinOfficialGroup"),!1}}async#leaveOfficialGroup(gameId){try{if(this.whiteList.officialGroups.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.leaveOfficialGroup",id:gameId}),!0;if(this.#ASF)return await this.#ASF.leaveGroup(gameId);var groupId=await this.#getOfficialGroupId(gameId);if(groupId){var resultR,statusTextR,statusR,dataR,logStatus=scripts_echoLog({type:"leavingSteamOfficialGroup",text:gameId}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/profiles/${this.#auth.steam64Id}/home_process`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionID:this.#auth.communitySessionID,action:"leaveGroup",groupId:groupId})});if("Success"===result)return 200===data?.status?({result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://steamcommunity.com/games/"+gameId,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}}),"Success"===resultR?200===dataR?.status&&dataR.responseText.includes('id="publicGroupJoin"')?(logStatus.success(),!0):(logStatus.error(`Error:${dataR?.statusText}(${dataR?.status})`),!1):(logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1)):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Steam.leaveOfficialGroup"),!1}}async#getOfficialGroupId(gameId){try{var logStatus=scripts_echoLog({type:"gettingSteamOfficialGroupId",text:gameId}),groupId=this.#cache.officialGroup[gameId];if(groupId)return logStatus.success(),groupId;var{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/games/"+gameId,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let groupId=data.responseText.match(/steam:\/\/friends\/joinchat\/([0-9]+)/)?.[1];return groupId?(this.#setCache("officialGroup",gameId,groupId),logStatus.success(),groupId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getGroupID"),!1}}async#addToWishlist(gameId){try{if(this.#ASF)return!!await this.#ASF.addToWishlist(gameId)&&(this.tasks.wishlists=unique([...this.tasks.wishlists,gameId]),!0);var logStatus=scripts_echoLog({type:"addingToWishlist",text:gameId}),{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/api/addtowishlist",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:this.#auth.storeSessionID,appid:gameId}),dataType:"json"});if("Success"!==result||200!==data?.status||!0!==data.response?.success){var{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});if("Success"!==resultR)return logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1;if(200!==dataR?.status)return logStatus.error(`Error:${dataR?.statusText}(${dataR?.status})`),!1;if("CN"===this.#area&&dataR.responseText.includes('id="error_box"'))return logStatus.warning(i18n("changeAreaNotice")),!!await this.#changeArea()&&await this.#addToWishlist(gameId);if((!dataR.responseText.includes('class="queue_actions_ctn"')||!dataR.responseText.includes('class="already_in_library"'))&&(dataR.responseText.includes('class="queue_actions_ctn"')&&dataR.responseText.includes('id="add_to_wishlist_area_success" style="display: none;')||!dataR.responseText.includes('class="queue_actions_ctn"')))return logStatus.error(`Error:${dataR.statusText}(${dataR.status})`),!1}return logStatus.success(),this.tasks.wishlists=unique([...this.tasks.wishlists,gameId]),!0}catch(error){return throwError_throwError(error,"Steam.addToWishlist"),!1}}async#removeFromWishlist(gameId){try{if(this.whiteList.wishlists.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.removeFromWishlist",id:gameId}),!0;if(this.#ASF)return await this.#ASF.removeFromWishlist(gameId);var logStatus=scripts_echoLog({type:"removingFromWishlist",text:gameId}),{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/api/removefromwishlist",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:this.#auth.storeSessionID,appid:gameId}),dataType:"json"});if("Success"===result&&200===data?.status&&!0===data.response?.success)return logStatus.success(),!0;var{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});if("Success"!==resultR)return logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1;if(200!==dataR?.status)return logStatus.error(`Error:${dataR?.statusText}(${dataR?.status})`),!1;if("CN"===this.#area&&dataR.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));let result=await this.#changeArea();return result&&"CN"!==result&&"skip"!==result?await this.#removeFromWishlist(gameId):!1}return dataR.responseText.includes('class="queue_actions_ctn"')&&(dataR.responseText.includes("ds_owned_flag ds_flag")||dataR.responseText.includes("add_to_wishlist_area"))?(logStatus.success(),!0):(logStatus.error(`Error:${dataR.statusText}(${dataR.status})`),!1)}catch(error){return throwError_throwError(error,"Steam.removeFromWishlist"),!1}}async#toggleFollowGame(gameId,doTask){try{var logStatus,requestData,result,data,followed;return!doTask&&this.whiteList.follows.includes(gameId)?(scripts_echoLog({type:"whiteList",text:"Steam.unfollowGame",id:gameId}),!0):this.#ASF?!!await this.#ASF.toggleFollowGame(gameId,doTask)&&(doTask&&(this.tasks.follows=unique([...this.tasks.follows,gameId])),!0):(logStatus=scripts_echoLog({type:`${doTask?"":"un"}followingGame`,text:gameId}),requestData={sessionid:this.#auth.storeSessionID,appid:gameId},{result,data}=(doTask||(requestData.unfollow="1"),await tools_httpRequest({url:"https://store.steampowered.com/explore/followgame/",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param(requestData)})),"Success"===result&&200===data?.status&&"true"===data.responseText?(logStatus.success(),!0):(followed=await this.#isFollowedGame(gameId),"CN"===this.#area&&"areaLocked"===followed?(logStatus.warning(i18n("changeAreaNotice")),!!await this.#changeArea()&&await this.#toggleFollowGame(gameId,doTask)):doTask===followed?(logStatus.success(),doTask&&(this.tasks.follows=unique([...this.tasks.follows,gameId])),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1)))}catch(error){return throwError_throwError(error,"Steam.toggleFollowGame"),!1}}async#isFollowedGame(gameId){try{var{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});return"Success"===result?200===data?.status&&("CN"===this.#area&&data.responseText.includes('id="error_box"')?"areaLocked":"none"!==$(data.responseText.replace(/<img.*?>/g,"")).find(".queue_control_button.queue_btn_follow>.btnv6_blue_hoverfade.btn_medium.queue_btn_active").css("display")):!1}catch(error){return throwError_throwError(error,"Steam.isFollowedGame"),!1}}async#toggleForum(gameId,doTask=!0){try{if(!doTask&&this.whiteList.forums.includes(gameId))scripts_echoLog({type:"whiteList",text:"Steam.unsubscribeForum",id:gameId});else{var forumId=await this.#getForumId(gameId);if(!forumId)return!1;var logStatus=scripts_echoLog({type:`${doTask?"":"un"}subscribingForum`,text:gameId}),[id,feature]=forumId.split("_"),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/forum/${id}/General/${doTask?"":"un"}subscribe/${feature||"0"}/`,method:"POST",responseType:"json",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:this.#auth.communitySessionID})});"Success"===result?200!==data?.status||1!==data.response?.success&&29!==data.response?.success?logStatus.error(`Error:${data?.statusText}(${data?.status})`):(doTask&&(this.tasks.forums=unique([...this.tasks.forums,gameId])),logStatus.success()):logStatus.error(result+`:${statusText}(${status})`)}return!0}catch(error){return throwError_throwError(error,"Steam.toggleForum"),!0}}async#getForumId(gameId){try{var logStatus=scripts_echoLog({type:"gettingForumId",text:gameId}),forumId=this.#cache.forum[gameId];if(forumId)return logStatus.success(),forumId;var{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/app/${gameId}/discussions/`,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let forumId=data.responseText?.match(/General_([\d]+(_[\d]+)?)/)?.[1];return forumId?(this.#setCache("forum",gameId,forumId),logStatus.success(),forumId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getForumId"),!1}}async#toggleFavoriteWorkshop(id,doTask=!0){try{if(!doTask&&this.whiteList.workshops.includes(id))return scripts_echoLog({type:"whiteList",text:"Steam.unfavoriteWorkshop",id:id}),!0;var appid=await this.#getWorkshopAppId(id);if(appid){var logStatus=scripts_echoLog({type:doTask?"favoritingWorkshop":"unfavoritingWorkshop",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/sharedfiles/${doTask?"":"un"}favorite`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({id:id,appid:appid,sessionid:this.#auth.communitySessionID})});if("Success"===result)return 200!==data?.status||data.responseText?(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(doTask&&(this.tasks.workshops=unique([...this.tasks.workshops,id])),logStatus.success(),!0);logStatus.error(result+`:${statusText}(${status})`)}return!1}catch(error){return throwError_throwError(error,"Steam.toggleFavoriteWorkshop"),!1}}async#getWorkshopAppId(id){try{var logStatus=scripts_echoLog({type:"gettingWorkshopAppId",text:id}),appId=this.#cache.workshop[id];if(appId)return logStatus.success(),appId;var{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/sharedfiles/filedetails/?id="+id,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let appId=data.responseText.match(/<input type="hidden" name="appid" value="([\d]+?)" \/>/)?.[1];return appId?(this.#setCache("workshop",id,appId),logStatus.success(),appId):(logStatus.error("Error: getWorkshopAppId failed"),!1)}}catch(error){return throwError_throwError(error,"Steam.getWorkshopAppId"),!1}}async#voteUpWorkshop(id){try{var logStatus=scripts_echoLog({type:"votingUpWorkshop",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/sharedfiles/voteup",method:"POST",responseType:"json",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({id:id,sessionid:this.#auth.communitySessionID})});return"Success"===result?200===data?.status&&1===data.response?.success?logStatus.success():logStatus.error(`Error:${data?.statusText}(${data?.status})`):logStatus.error(result+`:${statusText}(${status})`),!0}catch(error){return throwError_throwError(error,"Steam.voteupWorkshop"),!0}}async#toggleCurator(curatorId,doTask=!0){try{var logStatus,result,statusText,status,data;return!doTask&&this.whiteList.curators.includes(curatorId)?(scripts_echoLog({type:"whiteList",text:"Steam.unfollowCurator",id:curatorId}),!0):this.#ASF?await this.#ASF.toggleCurator(curatorId,doTask):(logStatus=scripts_echoLog({type:doTask?"followingCurator":"unfollowingCurator",text:curatorId}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/curators/ajaxfollow",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({clanid:curatorId,sessionid:this.#auth.storeSessionID,follow:doTask}),dataType:"json"}),"Success"===result?200===data?.status&&1===data.response?.success?.success?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(`+data?.response?.success||data?.status+")"),!1):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Steam.toggleCurator"),!1}}async getCuratorId(path,name){try{var logStatus=scripts_echoLog({type:"gettingCuratorId",text:path+"/"+name}),curatorId=this.#cache.curator[path+"/"+name];if(curatorId)return logStatus.success(),curatorId;var{result,statusText,status,data}=await tools_httpRequest({url:`https://store.steampowered.com/${path}/`+name,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;{let curatorId=data.responseText.match(/g_pagingData.*?"clanid":([\d]+)/)?.[1];return curatorId?(this.#setCache("curator",path+"/"+name,curatorId),logStatus.success(),curatorId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getCuratorID"),!1}}async#toggleCuratorLike(link,doTask=!0){try{var curatorId,[path,name]=link.split("/");return path&&name?!!(curatorId=await this.getCuratorId(path,name))&&await this.#toggleCurator(curatorId,doTask):(scripts_echoLog({text:i18n("errorLink",link)}),!1)}catch(error){return throwError_throwError(error,"Steam.toggleCuratorLike"),!1}}async#getAnnouncementParams(appId,viewId){try{var clanid,gid,logStatus=scripts_echoLog({type:"gettingAnnouncementParams",text:appId,id:viewId}),{result,statusText,status,data}=await tools_httpRequest({url:`https://store.steampowered.com/events/ajaxgetpartnerevent?appid=${appId}&announcement_gid=${viewId}&lang_list=6_0&last_modified_time=0&origin=https:%2F%2Fstore.steampowered.com&for_edit=false`,method:"GET",responseType:"json",headers:{Host:"store.steampowered.com",Referer:`https://store.steampowered.com/news/app/${appId}/view/`+viewId}});return"Success"===result?200===data?.status&&1===data?.response?.success?({clanid,gid}=data.response.event?.announcement_body||{},clanid?(logStatus.success(),{clanId:clanid,gid:gid}):(logStatus.error(`Error:${data.statusText}(${data.status})`),{})):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),{}):(logStatus.error(result+`:${statusText}(${status})`),{})}catch(error){return throwError_throwError(error,"Steam.likeAnnouncement"),{}}}async#likeAnnouncement(id){try{var[appId,viewId]=id.split("/");if(appId&&viewId){var{clanId,gid}=await this.#getAnnouncementParams(appId,viewId);if(clanId){var logStatus=scripts_echoLog({type:"likingAnnouncement",text:appId,id:viewId}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/updated/ajaxrateupdate/"+(gid||viewId),method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:`https://store.steampowered.com/news/app/${appId}/view/`+viewId},data:$.param({sessionid:this.#auth.storeSessionID,voteup:1,clanid:clanId,ajax:1}),dataType:"json"});if("Success"===result)return 200===data?.status&&1===data.response.success?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}}else scripts_echoLog({}).error(i18n("missParams")+"(id)");return!1}catch(error){return throwError_throwError(error,"Steam.likeAnnouncement"),!1}}async#appid2subid(id){try{var logStatus=scripts_echoLog({type:"gettingSubid",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+id,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"===result)if(200===data?.status)if(data.responseText.includes("ds_owned_flag ds_flag")||data.responseText.includes('class="already_in_library"'))logStatus.success(i18n("owned"));else{if("CN"===this.#area&&data.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));let result=await this.#changeArea();return result&&"CN"!==result&&"skip"!==result?await this.#appid2subid(id):!1}var subid=data.responseText.match(/name="subid" value="([\d]+?)"/)?.[1];if(subid)return logStatus.success(),subid;if(subid=data.responseText.match(/AddFreeLicense\(\s*(\d+)/)?.[1])return logStatus.success(),subid;logStatus.error("Error:"+i18n("noSubid"))}else logStatus.error(`Error:${data?.statusText}(${data?.status})`);else logStatus.error(result+`:${statusText}(${status})`);return!1}catch(error){return throwError_throwError(error,"Steam.appid2subid"),!1}}async#getLicenses(){try{var logStatus=scripts_echoLog({text:i18n("gettingLicenses")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/dynamicstore/userdata/?t="+(new Date).getTime(),method:"GET",responseType:"json"});return"Success"===result?200===data?.status?(logStatus.success(),data.response?.rgOwnedPackages):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.getLicenses"),!1}}async#addLicense(id){try{if(this.#ASF)return await this.#ASF.addLicense(id);var[type,ids]=id.split("-");if("appid"===type){var subid=await this.#appid2subid(ids);if(subid){var logStatus=scripts_echoLog({type:"addingFreeLicense",text:ids});if(await this.#addFreeLicense(subid,logStatus)){var{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+ids,method:"GET"});if("Success"===result)return 200===data?.status?data.responseText.includes("ds_owned_flag ds_flag")||data.responseText.includes('class="already_in_library"')?(logStatus.success(),!0):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1);logStatus.error(result+`:${statusText}(${status})`)}}return!1}if("subid"!==type)return!1;"CN"===this.#area&&(scripts_echoLog({}).success(i18n("tryChangeAreaNotice")),await this.#changeArea());var logStatusArr={},idsArr=ids.split(",");for(let subid of idsArr){let logStatus=scripts_echoLog({type:"addingFreeLicenseSubid",text:subid});if(!await this.#addFreeLicense(subid,logStatus))return!1;logStatusArr[subid]=logStatus}var licenses=await this.#getLicenses();if(!licenses)return!1;for(let subid of idsArr)licenses.includes(parseInt(subid,10))?logStatusArr[subid].success():logStatusArr[subid].error();return!0}catch(error){return throwError_throwError(error,"Steam.addLicense"),!1}}async#addFreeLicense(id,logStatusPre){try{var logStatus=logStatusPre||scripts_echoLog({type:"addingFreeLicenseSubid",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/freelicense/addfreelicense/"+id,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/account/licenses/"},data:$.param({ajax:!0,sessionid:this.#auth.storeSessionID}),dataType:"json"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==data?.status)return logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1;if("CN"===this.#area&&data.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));let result=await this.#changeArea();return!result||["CN","skip"].includes(result)?!1:await this.#addFreeLicense(id)}return logStatus.success(),!0}catch(error){return throwError_throwError(error,"Steam.addFreeLicense"),!1}}async#requestPlayTestAccess(id){try{var logStatus,result,statusText,status,data;return this.#ASF?await this.#ASF.requestPlayTestAccess(id):(logStatus=scripts_echoLog({type:"requestingPlayTestAccess",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/ajaxrequestplaytestaccess/"+id,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/app/"+id},data:$.param({sessionid:this.#auth.storeSessionID}),dataType:"json"}),"Success"===result?200===data?.status&&1===data?.response?.success?(logStatus.success(),!0):(logStatus.error(`Error:${data?.statusText}(${data?.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1))}catch(error){return throwError_throwError(error,"Steam.requestPlayTestAccess"),!1}}async#playGames(ids,playTime,doTask=!0){try{if(!(playTime<=0)){if(!this.#ASF)return scripts_echoLog({}).warning(i18n("noASFInstance")),!1;if(!doTask)return await this.#ASF.stopPlayGames();if(!await this.#ASF.playGames(ids))return!1;var stopPlayTime=Date.now()+60*(playTime+10)*1e3,stopPlayTimeOld=GM_getValue("stopPlayTime",0)||0;GM_setValue("stopPlayTime",stopPlayTimeOld<stopPlayTime?stopPlayTime:stopPlayTimeOld)}return!0}catch(error){return throwError_throwError(error,"Steam.playGames"),!1}}async toggle({doTask=!0,groupLinks=[],officialGroupLinks=[],wishlistLinks=[],followLinks=[],forumLinks=[],workshopLinks=[],workshopVoteLinks=[],curatorLinks=[],curatorLikeLinks=[],announcementLinks=[],licenseLinks=[],playtestLinks=[],playTimeLinks=[]}){try{if(0<[...groupLinks,...officialGroupLinks,...forumLinks,...workshopLinks,...workshopVoteLinks].length&&!this.#communityInitialized)return scripts_echoLog({text:i18n("needInit")}),!1;if(0<[...wishlistLinks,...followLinks,...curatorLinks,...curatorLikeLinks,...announcementLinks,...licenseLinks,...playtestLinks,...playTimeLinks].length&&!this.#storeInitialized)return scripts_echoLog({text:i18n("needInit")}),!1;var prom=[];if(doTask&&!globalOptions.doTask.steam.groups||!doTask&&!globalOptions.undoTask.steam.groups)scripts_echoLog({type:"globalOptionsSkip",text:"steam.groups"});else{var realGroups=this.getRealParams("groups",groupLinks,doTask,link=>link.match(/groups\/(.+)\/?/)?.[1]?.split("/")?.[0]);if(0<realGroups.length)for(var group of realGroups)prom.push(doTask?this.#joinGroup(group):this.#leaveGroup(group)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.officialGroups||!doTask&&!globalOptions.undoTask.steam.officialGroups)scripts_echoLog({type:"globalOptionsSkip",text:"steam.officialGroups"});else{var realOfficialGroups=this.getRealParams("officialGroups",officialGroupLinks,doTask,link=>link.match(/games\/(.+)\/?/)?.[1]);if(0<realOfficialGroups.length)for(var officialGroup of realOfficialGroups)prom.push(doTask?this.#joinOfficialGroup(officialGroup):this.#leaveOfficialGroup(officialGroup)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.wishlists||!doTask&&!globalOptions.undoTask.steam.wishlists)scripts_echoLog({type:"globalOptionsSkip",text:"steam.wishlists"});else{var realWishlists=this.getRealParams("wishlists",wishlistLinks,doTask,link=>link.match(/app\/([\d]+)/)?.[1]);if(0<realWishlists.length)for(var game of realWishlists)prom.push(doTask?this.#addToWishlist(game):this.#removeFromWishlist(game)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.follows||!doTask&&!globalOptions.undoTask.steam.follows)scripts_echoLog({type:"globalOptionsSkip",text:"steam.follows"});else{var realFollows=this.getRealParams("follows",followLinks,doTask,link=>link.match(/app\/([\d]+)/)?.[1]);if(0<realFollows.length)for(let game of realFollows)prom.push(this.#toggleFollowGame(game,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.playTime||!doTask&&!globalOptions.undoTask.steam.playTime)scripts_echoLog({type:"globalOptionsSkip",text:"steam.playTime"});else{var realGames=this.getRealParams("playTime",playTimeLinks,doTask,link=>link.split("-")[0]+"-"+(link.match(/app\/([\d]+)/)?.[1]||""));if(0<realGames.length){let maxTime=0;var info,games=[];for(info of realGames){let[time,game]=info.split("-");maxTime=Math.max(maxTime,parseInt(time,10)||0),0<(parseInt(time,10)||0)&&game&&games.push(game)}prom.push(this.#playGames(games.join(","),maxTime,doTask)),await delay(1e3)}}if(doTask&&!globalOptions.doTask.steam.forums||!doTask&&!globalOptions.undoTask.steam.forums)scripts_echoLog({type:"globalOptionsSkip",text:"steam.forums"});else{var realForums=this.getRealParams("forums",forumLinks,doTask,link=>link.match(/app\/([\d]+)/)?.[1]);if(0<realForums.length)for(var forum of realForums)prom.push(this.#toggleForum(forum,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.workshops||!doTask&&!globalOptions.undoTask.steam.workshops)scripts_echoLog({type:"globalOptionsSkip",text:"steam.workshops"});else{var realWorkshops=this.getRealParams("workshops",workshopLinks,doTask,link=>link.match(/\?id=([\d]+)/)?.[1]);if(0<realWorkshops.length)for(var workshop of realWorkshops)prom.push(this.#toggleFavoriteWorkshop(workshop,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.workshopVotes)scripts_echoLog({type:"globalOptionsSkip",text:"steam.workshopVotes"});else{var realworkshopVotes=this.getRealParams("workshopVotes",workshopVoteLinks,doTask,link=>link.match(/\?id=([\d]+)/)?.[1]);if(doTask&&0<realworkshopVotes.length)for(let workshop of realworkshopVotes)prom.push(this.#voteUpWorkshop(workshop)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.curators||!doTask&&!globalOptions.undoTask.steam.curators)scripts_echoLog({type:"globalOptionsSkip",text:"steam.curators"});else{var realCurators=this.getRealParams("curators",curatorLinks,doTask,link=>link.match(/curator\/([\d]+)/)?.[1]),realCuratorLikes=this.getRealParams("curatorLikes",curatorLikeLinks,doTask,link=>link.match(/https?:\/\/store\.steampowered\.com\/(.*?)\/([^/?]+)/)?.slice(1,3).join("/"));if(0<realCurators.length)for(var curator of realCurators)prom.push(this.#toggleCurator(curator,doTask)),await delay(1e3);if(0<realCuratorLikes.length)for(var curatorLike of realCuratorLikes)prom.push(this.#toggleCuratorLike(curatorLike,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.announcements)scripts_echoLog({type:"globalOptionsSkip",text:"steam.announcements"});else{var realAnnouncements=this.getRealParams("announcements",announcementLinks,doTask,link=>(link.includes("store.steampowered.com")?link.match(/store\.steampowered\.com\/news\/app\/([\d]+)\/view\/([\d]+)/):link.match(/steamcommunity\.com\/games\/([\d]+)\/announcements\/detail\/([\d]+)/))?.slice(1,3).join("/"));if(doTask&&0<realAnnouncements.length)for(var id of realAnnouncements)prom.push(this.#likeAnnouncement(id)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.licenses)scripts_echoLog({type:"globalOptionsSkip",text:"steam.licenses"});else if(doTask&&globalOptions.doTask.steam.licenses&&0<licenseLinks.length)for(var ids of licenseLinks){var[type,idsStr]=ids.split("-");for(let id of idsStr.split(","))prom.push(this.#addLicense(type+"-"+id)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.playtests)scripts_echoLog({type:"globalOptionsSkip",text:"steam.playtests"});else{var realPlaytests=this.getRealParams("playtests",playtestLinks,doTask,link=>link.match(/app\/([\d]+)/)?.[1]);if(doTask&&globalOptions.doTask.steam.playtests&&0<realPlaytests.length)for(let id of realPlaytests)prom.push(this.#requestPlayTestAccess(id)),await delay(1e3)}return Promise.all(prom).then(async()=>(this.#oldArea&&this.#area!==this.#oldArea&&(scripts_echoLog({}).warning(i18n("steamFinishNotice")+this.#oldArea),await this.#changeArea(this.#oldArea)),!0))}catch(error){return throwError_throwError(error,"Steam.toggle"),!1}}#setCache(type,name,id){try{this.#cache[type][name]=id,GM_setValue("steamCache",this.#cache)}catch(error){throwError_throwError(error,"Steam.setCache")}}}let social_Steam=Steam;class GiveawaySu{undoneTasks={steam:{groupLinks:[],wishlistLinks:[],curatorLinks:[],curatorLikeLinks:[],followLinks:[],forumLinks:[],announcementLinks:[],workshopVoteLinks:[],playtestLinks:[],playTimeLinks:[]},discord:{serverLinks:[]},instagram:{userLinks:[]},vk:{nameLinks:[]},twitch:{channelLinks:[]},reddit:{redditLinks:[]},youtube:{channelLinks:[],likeLinks:[]},twitter:{userLinks:[],retweetLinks:[]}};giveawayId;socialInitialized={discord:!1,instagram:!1,reddit:!1,twitch:!1,vk:!1,youtube:!1,steamStore:!1,steamCommunity:!1,twitter:!0};initialized=!1;social={};static test(){return/^https?:\/\/giveaway\.su\/giveaway\/view\/[\d]+/.test(window.location.href)}async after(){try{this.#checkLogin()||scripts_echoLog({}).warning(i18n("checkLoginFailed")),await this.#checkLeftKey()||scripts_echoLog({}).warning(i18n("checkLeftKeyFailed"))}catch(error){throwError_throwError(error,"Giveawaysu.after")}}init(){try{var logStatus=scripts_echoLog({text:i18n("initing")});return 0<$("a.steam-login").length?(window.open("/steam/redirect","_self"),logStatus.warning(i18n("needLogin")),!1):!!this.#getGiveawayId()&&(this.initialized=!0,logStatus.success(),!0)}catch(error){return throwError_throwError(error,"Giveawaysu.init"),!1}}async#classifyTask(){try{var logStatus=scripts_echoLog({text:i18n("getTasksInfo")}),pro=[],tasks=$("#actions tr");$("div.bind-discord").is(":visible")&&$("div.bind-discord a")[0].click(),$("div.bind-twitch").is(":visible")&&$("div.bind-twitch a")[0].click();for(let task of tasks)pro.push(new Promise(resolve=>{var td=$(task).find('td:not(".hidden")'),colorfulTask=td.eq(1).find('a:not([data-trigger="link"])'),colorlessTask=td.eq(2).find('a:not([data-trigger="link"])'),colorfulTask=0<colorfulTask.length?colorfulTask:colorlessTask;let taskIcon=td.eq(0).find("i").attr("class")||"",taskName=colorfulTask.text().trim();if(taskIcon.includes("ban")||/disable adblock/gi.test(taskName))return resolve(!0);(async(link,redirectOnce=!1)=>{try{if(!link)return null;let redirectLinksCache=GM_getValue("redirectLinks")||{};return redirectLinksCache[link],await tools_httpRequest({url:link,method:"GET",redirect:redirectOnce?"manual":"follow"}).then(({data})=>data?.finalUrl?(redirectLinksCache[link]=data.finalUrl,GM_setValue("redirectLinks",redirectLinksCache),data.finalUrl):null)}catch(error){return throwError_throwError(error,"getRedirectLink"),null}})(colorfulTask.attr("href")).then(taskLink=>{if(!taskLink)return resolve(!1);taskIcon.includes("steam")&&/join/gi.test(taskName)?this.undoneTasks.steam.groupLinks.push(taskLink):/like.*announcement/gi.test(taskName)?this.undoneTasks.steam.announcementLinks.push(taskLink):/(follow|subscribe).*curator/gim.test(taskName)&&/^https?:\/\/store\.steampowered\.com\/curator\//.test(taskLink)?this.undoneTasks.steam.curatorLinks.push(taskLink):taskIcon.includes("steam")&&/follow|subscribe/gim.test(taskName)?this.undoneTasks.steam.curatorLikeLinks.push(taskLink):/subscribe.*steam.*forum/gim.test(taskName)?this.undoneTasks.steam.forumLinks.push(taskLink):taskIcon.includes("thumbs-up")&&/^https?:\/\/steamcommunity\.com\/sharedfiles\/filedetails\/\?id=[\d]+/.test(taskLink)?this.undoneTasks.steam.workshopVoteLinks.push(taskLink):taskIcon.includes("plus")&&/request.*playtest/gim.test(taskName)?this.undoneTasks.steam.playtestLinks.push(taskLink):taskIcon.includes("discord")||/join.*discord/gim.test(taskName)?this.undoneTasks.discord.serverLinks.push(taskLink):taskIcon.includes("instagram")||/follow.*instagram/gim.test(taskName)?this.undoneTasks.instagram.userLinks.push(taskLink):taskIcon.includes("twitch")||/follow.*twitch.*channel/gim.test(taskName)?this.undoneTasks.twitch.channelLinks.push(taskLink):taskIcon.includes("reddit")||/subscribe.*subreddit/gim.test(taskName)||/follow.*reddit/gim.test(taskName)?this.undoneTasks.reddit.redditLinks.push(taskLink):/watch.*art/gim.test(taskName)?this.undoneTasks.steam.workshopVoteLinks.push(taskLink):/subscribe.*youtube.*channel/gim.test(taskName)?this.undoneTasks.youtube.channelLinks.push(taskLink):/(watch|like).*youtube.*video/gim.test(taskName)||(taskIcon.includes("youtube")||taskIcon.includes("thumbs-up"))&&/(watch|like).*video/gim.test(taskName)?this.undoneTasks.youtube.likeLinks.push(taskLink):taskIcon.includes("vk")||/join.*vk.*group/gim.test(taskName)?this.undoneTasks.vk.nameLinks.push(taskLink):/(on twitter)|(Follow.*on.*Facebook)/gim.test(taskName)||(/wishlist.*game|add.*wishlist/gim.test(taskName)&&this.undoneTasks.steam.wishlistLinks.push(taskLink),/follow.*button/gim.test(taskName)&&this.undoneTasks.steam.followLinks.push(taskLink)),resolve(!0)}).catch(error=>(throwError_throwError(error,"Giveawaysu.classifyTask->getRedirectLink"),!1))}));return await Promise.all(pro),logStatus.success(),this.undoneTasks=this.#uniqueTasks(this.undoneTasks),!0}catch(error){return throwError_throwError(error,"Giveawaysu.classifyTask"),!1}}#checkLogin(){try{return globalOptions.other.checkLogin&&0<$("a.steam-login").length&&window.open("/steam/redirect","_self"),!0}catch(error){return throwError_throwError(error,"Giveawaysu.checkLogin"),!1}}async#checkLeftKey(){try{return globalOptions.other.checkLeftKey&&0<$(".giveaway-ended").length&&await external_Swal_default().fire({icon:"warning",title:i18n("notice"),text:i18n("noKeysLeft"),confirmButtonText:i18n("confirm"),cancelButtonText:i18n("cancel"),showCancelButton:!0}).then(({value})=>{value&&window.close()}),!0}catch(error){return throwError_throwError(error,"Giveawaysu.checkLeftKey"),!1}}#getGiveawayId(){var giveawayId=window.location.href.match(/\/view\/([\d]+)/)?.[1];return giveawayId?(this.giveawayId=giveawayId,!0):(scripts_echoLog({text:i18n("getFailed","GiveawayId")}),!1)}async#bind(name,init){try{return{name:name,result:await init}}catch(error){return throwError_throwError(error,"GiveawaySu.bind"),{name:name,result:!1}}}async#initSocial(){try{var steamLength,steamCommunityLength,pro=[];let tasks=this.undoneTasks;return tasks.discord&&0<Object.values(tasks.discord).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.discord&&(this.social.discord=new social_Discord,pro.push(this.#bind("discord",this.social.discord.init("do")))),tasks.instagram&&0<Object.values(tasks.instagram).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.instagram&&(this.social.instagram=new social_Instagram,pro.push(this.#bind("instagram",this.social.instagram.init()))),tasks.reddit&&0<Object.values(tasks.reddit).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.reddit&&(this.social.reddit=new social_Reddit,pro.push(this.#bind("reddit",this.social.reddit.init()))),tasks.twitch&&0<Object.values(tasks.twitch).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.twitch&&(this.social.twitch=new social_Twitch,pro.push(this.#bind("twitch",this.social.twitch.init()))),tasks.vk&&0<Object.values(tasks.vk).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.vk&&(this.social.vk=new social_Vk,pro.push(this.#bind("vk",this.social.vk.init()))),tasks.youtube&&0<Object.values(tasks.youtube).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.youtube&&(this.social.youtube=new Youtube,pro.push(this.#bind("youtube",this.social.youtube.init()))),tasks.steam&&0<(steamLength=Object.values(tasks.steam).reduce((total,arr)=>[...total,...arr]).length)&&(this.social.steam||(this.social.steam=new social_Steam),0<steamLength-(steamCommunityLength=Object.keys(tasks.steam).map(type=>["groupLinks","forumLinks","workshopLinks","workshopVoteLinks"].includes(type)&&tasks.steam?.[type]?.length||0).reduce((total,number)=>total+number,0))&&!this.socialInitialized.steamStore&&pro.push(this.#bind("steamStore",this.social.steam.init("store"))),0<steamCommunityLength)&&!this.socialInitialized.steamCommunity&&pro.push(this.#bind("steamCommunity",this.social.steam.init("community"))),await Promise.all(pro).then(result=>{let checked=!0;for(var data of result)data.result?this.socialInitialized[data.name]=data.result:checked=!1;return checked})}catch(error){return throwError_throwError(error,"GiveawaySu.initSocial"),!1}}#uniqueTasks(allTasks){var social,types,result={};for([social,types]of Object.entries(allTasks)){result[social]={};for(var[type,tasks]of Object.entries(types))result[social][type]=unique(tasks)}return result}async#toggleTask(){try{var pro,tasks;return this.initialized||this.init()?!!await this.#classifyTask()&&!!await this.#initSocial()&&(pro=[],tasks=this.undoneTasks,"skip"!==this.socialInitialized.discord&&this.social.discord&&pro.push(this.social.discord.toggle({doTask:!0,...tasks.discord})),this.social.instagram&&pro.push(this.social.instagram.toggle({doTask:!0,...tasks.instagram})),this.social.reddit&&pro.push(this.social.reddit.toggle({doTask:!0,...tasks.reddit})),this.social.twitch&&pro.push(this.social.twitch.toggle({doTask:!0,...tasks.twitch})),this.social.vk&&pro.push(this.social.vk.toggle({doTask:!0,...tasks.vk})),this.social.youtube&&pro.push(this.social.youtube.toggle({doTask:!0,...tasks.youtube})),this.social.steam&&pro.push(this.social.steam.toggle({doTask:!0,...tasks.steam})),await Promise.all(pro),scripts_echoLog({}).success(i18n("allTasksComplete")),!0):!1}catch(error){return throwError_throwError(error,"GiveawaySu.toggleTask"),!1}}async doTask(){try{return $("#getKey").on("click",()=>{$("#auto-task-info-div").remove(),$(window.STYLE).remove(),$("#getKey").off()}),await this.#toggleTask()}catch(error){return throwError_throwError(error,"GiveawaySu.doTask"),!1}}async verifyTask(){try{var task;for(task of $("#actions tr")){var icon,button,href,$task=$(task);"adjs"!==$task.attr("data-action-id")&&("A"===(button=(icon=$task.find("i.glyphicon-refresh")).parent()).prop("tagName")?(href=button.attr("href"),button.attr("href","javascript:void(0);").attr("target","_self")[0].click(),button.attr("href",href)):icon.hasClass("spin")||icon.hasClass("glyphicon-ok")||(button[0].click(),await delay(1e3)))}}catch(error){throwError_throwError(error,"GiveawaySu.verifyTask")}}}let Giveawaysu=GiveawaySu,for_giveawaysu=__webpack_require__(738);if(window.STYLE=GM_addStyle(for_giveawaysu.A+GM_getResourceText("style")),"discord.com"===window.location.hostname){external_Swal_namespaceObject=window.localStorage;if("#auth"===window.location.hash){window.localStorage.removeItem=()=>!0;var discordAuth=external_Swal_namespaceObject?.getItem("token")?.replace(/^"|"$/g,"");discordAuth&&0<discordAuth.length?(GM_setValue("discordAuth",{auth:discordAuth}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire({text:i18n("getDiscordAuthFailed"),icon:"error"})}else{let discordAuth=external_Swal_namespaceObject?.getItem("token")?.replace(/^"|"$/g,"");discordAuth&&0<discordAuth.length&&GM_setValue("discordAuth",{auth:discordAuth})}}$(async()=>{if("www.twitch.tv"===window.location.hostname&&"#auth"===window.location.hash&&(authToken=external_Cookies_default().get("auth-token"),!!external_Cookies_default().get("login")?(GM_setValue("twitchAuth",{authToken:authToken,clientId:commonOptions?.headers?.["Client-ID"]}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))),"x.com"===window.location.hostname&&"#auth"===window.location.hash){var authToken=external_Cookies_default().get("ct0");let isLogin=!!external_Cookies_default().get("twid");isLogin&&authToken?(GM_setValue("twitterAuth",{ct0:authToken}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))}if("www.youtube.com"===window.location.hostname&&"#auth"===window.location.hash&&((authToken=external_Cookies_default().get("__Secure-3PAPISID"))?(GM_setValue("youtubeAuth",{PAPISID:authToken}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))),"www.reddit.com"===window.location.hostname&&("#auth"===window.location.hash||"#auth"===GM_getValue("redditAuth"))){authToken=$("#redesign-beta-optin-btn");if(0<authToken.length)return GM_setValue("redditAuth","#auth"),authToken[0].click();GM_setValue("redditAuth",null),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))}if(Giveawaysu.test()){let website=new Giveawaysu;$("body").append(`<div id="auto-task-info-div" style="position: fixed;bottom: 10px;right: 10px;width: 300px;max-width: 60%;max-height: 600px;color: #000;background-color: #fff;padding-left: 5px;z-index: 999999999 !important;"><h2 style="text-align: center;"><button id="auto-do-task" class="btn btn-success">${i18n("doTask")}</button><button id="auto-verify-task" class="btn btn-success">${i18n("verifyTask")}</button></h2><div id="auto-task-info" style="overflow-y: auto;max-height: 500px;"></div></div>`),await website.after(),$("#auto-do-task").on("click",()=>{website.doTask()}),$("#auto-verify-task").on("click",()=>{website.verifyTask()}),console.log("%c%s","color:#1bbe1a","Auto Task GS特供脚本初始化完成！")}})}})();