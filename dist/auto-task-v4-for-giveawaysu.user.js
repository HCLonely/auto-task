// ==UserScript==
// @name               auto-task-v4-for-giveawaysu
// @namespace          auto-task-v4-for-giveawaysu
// @version            4.2.33
// @description        赠Key站自动任务
// @author             HCLonely
// @license            MIT
// @run-at             document-start
// @homepage           https://auto-task-doc.js.org/
// @supportURL         https://github.com/HCLonely/auto-task-v4/issues
// @updateURL          https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @installURL         https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @downloadURL        https://github.com/HCLonely/auto-task-new/raw/main/dist/auto-task-v4-for-giveawaysu.user.js
// @icon               https://auto-task-v4.hclonely.com/favicon.ico

// @include            *://giveaway.su/giveaway/view/*
// @include            *://discord.com/*
// @include            *://www.twitch.tv/*
// @include            *://www.youtube.com/*
// @include            *://*.reddit.com/*

// @grant              GM_addStyle
// @grant              GM_setValue
// @grant              GM_getValue
// @grant              GM_xmlhttpRequest
// @grant              GM_registerMenuCommand
// @grant              GM_info
// @grant              GM_getResourceText
// @grant              GM_openInTab
// @grant              window.close
// @grant              window.localStorage

// @connect            cdn.jsdelivr.net
// @connect            store.steampowered.com
// @connect            steamcommunity.com
// @connect            youtube.com
// @connect            www.youtube.com
// @connect            facebook.com
// @connect            instagram.com
// @connect            vk.com
// @connect            twitch.tv
// @connect            www.twitch.tv
// @connect            gql.twitch.tv
// @connect            github.com
// @connect            discordapp.com
// @connect            discord.gg
// @connect            discord.com
// @connect            www.reddit.com
// @connect            oauth.reddit.com
// @connect            raw.githubusercontent.com
// @connect            t.me
// @connect            bit.ly
// @connect            giveaway.su
// @connect            google.com
// @connect            givee.club
// @connect            *
// @require            https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js
// @require            https://cdn.jsdelivr.net/npm/js-cookie@3.0.1/dist/js.cookie.min.js
// @require            https://cdn.jsdelivr.net/npm/regenerator-runtime@0.13.5/runtime.min.js
// @require            https://cdn.jsdelivr.net/npm/js-sha1@0.6.0/src/sha1.min.js
// @require            https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.js
// @resource           style https://cdn.jsdelivr.net/npm/sweetalert2@11.3.5/dist/sweetalert2.min.css
// @require            https://cdn.jsdelivr.net/npm/keyboardjs@2.6.4/dist/keyboard.min.js

// @noframes
// ==/UserScript==

console.log('%c%s', 'color:blue', 'Auto Task GS特供脚本开始加载');

!function(){var __webpack_modules__={400:function(__unused_webpack_module,exports){!function(e){"use strict";var t=function(){return(t=Object.assign||function(e){for(var n,o=1,t=arguments.length;o<t;o++)for(var r in n=arguments[o])Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r]);return e}).apply(this,arguments)};function r(e,n,o){if(o||2===arguments.length)for(var t,r=0,i=n.length;r<i;r++)!t&&r in n||((t=t||Array.prototype.slice.call(n,0,r))[r]=n[r]);return e.concat(t||Array.prototype.slice.call(n))}function d(e){return"[object Object]"===n(e)}function l(e,n){var o=r(r([],n||[],!0),["_"],!1).join("|");return e.replace(new RegExp("((".concat(o,")[a-z])+"),"g"),function(e,n){return n.replace(new RegExp(o),"").toLocaleUpperCase()})}var n=function(e){return Object.prototype.toString.call(e)},o=(i.prototype.init=function(){try{this.getSystemName(),this.getBrowserName()}catch(e){console.warn("[UA formatter error] ".concat(e))}},i.prototype.getEngine=function(){var e=this.agent;return-1!==e.indexOf("Trident")?"Trident":-1!==e.indexOf("Firefox")?"Gecko":-1!==e.indexOf("Presto")?"Presto":"WebKit"},i.prototype.getSystemName=function(){var e,n=(this.agent.match(/^[a-z]+\/\d+\.\d+\s?\(([a-z\d\s:;./_-]+)\)/i)||[])[1];try{var o="";if(/Windows/i.test(n)){var t=(n.match(/NT\s(\d+\.\d+)/)||[])[1];switch(this.info.os="Windows",t){case"6.3":o="8.1";break;case"6.2":o="8";break;case"6.1":o="7";break;case"5.2":case"5.1":o="XP";break;default:o=t}return this.info.device="PC",void(this.info.osVersion=o)}if(/^Macintosh/i.test(n))return o=(n.match(/X\s((\d+(_|\.))+\d+)/)||[])[1],this.info.os="Macintosh",this.info.device="PC",void(this.info.osVersion=null!==(e=null==o?void 0:o.replace(/_/g,"."))&&void 0!==e?e:"Unknown");if(/^iPad/i.test(n))return o=(n.match(/((\d+_)+\d+)/)||[])[1],this.info.os="iPad",this.info.device="Tablet",void(this.info.osVersion=o.replace(/_/g,"."));if(/^iPhone/i.test(n))return o=(n.match(/((\d+_)+\d+)/)||[])[1],this.info.os="iPhone",this.info.device="Mobile",void(this.info.osVersion=o.replace(/_/g,"."));if(-1!==n.indexOf("Android")){var r=(n.match(/Android\s((\d+\.?)+\d?)/)||[])[1];return this.info.device="Mobile",this.info.os="Android",void(this.info.osVersion=r)}if(/Linux\s[a-z\d_]+/.test(n))return this.info.os="Linux",void(this.info.osVersion="Unknown");this.info.os="Unknown",this.info.osVersion="Unknown"}catch(e){this.info.os="Unknown",this.info.osVersion="Unknown"}},i.prototype.getBrowserName=function(){var e=Object.keys(this.browserNameMap).map(function(e){return new RegExp("".concat(e,"(\\/|\\s)(\\d+\\.)+\\d+"))}),n=1<(n=(this.agent.match(/[a-z\d]+(\/|\s)(\d+\.)+\d+/gi)||[]).filter(function(n){return-1!==e.findIndex(function(e){return e.test(n)})})).length&&!/^Safari/.test(n[n.length-1])?n.reverse():n;this.info=t(t({},this.info),this._formatBrowserVersion(n[0]))},i.prototype._formatBrowserVersion=function(e){var n,o,t,r;try{for(var i=null!==(o=null===(n=e.match(/(?<name>[a-z\d]+)(\/|\s)(?<version>(\d+\.)+\d+)/i))||void 0===n?void 0:n.groups)&&void 0!==o?o:{},s=i.name,a=i.version,c={},f=0,u=Object.entries(this.browserNameMap);f<u.length;f++){var d=u[f],l=d[0],h=d[1];if(new RegExp(l).test(s)){c=h;break}}var p={browserVersion:null!=a?a:"Unknown",browser:null!==(t=c.en)&&void 0!==t?t:"Unknown",browserZH:null!==(r=(null==c?void 0:c.zh)||c.en)&&void 0!==r?r:"Unknown"};return"Trident"===s&&(p.browserVersion={"4.0":8,"5.0":9,"6.0":10,"7.0":11}[a]),p}catch(e){return console.warn("[UA formatter error] ".concat(e)),{browser:"Unknown",browserVersion:"Unknown"}}},i);function i(e){this.agent="",this.info={browser:"",browserZH:"",browserVersion:"",os:"",osVersion:"",device:"Unknown",engine:"WebKit"},this.browserNameMap={MicroMessenger:{en:"MicroMessenger",zh:"微信"},MetaSr:{en:"MetaSr",zh:"搜狗浏览器"},"QQ(Browser)?":{en:"QQBrowser",zh:"QQ浏览器"},UCBrowser:{en:"UCBrowser",zh:"UC浏览器"},"2345Explorer":{en:"2345Explorer",zh:"2345极速浏览器"},Mb2345Browser:{en:"Mb2345Browser",zh:"2345手机浏览器"},Trident:{en:"Internet Explorer"},"Edge?":{en:"Edge"},OPR:{en:"Opera"},Vivaldi:{en:"Vivaldi"},Firefox:{en:"Firefox"},Chrome:{en:"Chrome"},Safari:{en:"Safari"}},this.agent=e,this.init();var n=this.info,o=n.browser,e=n.browserVersion,n=n.osVersion;this.info=t(t({},this.info),{engine:this.getEngine(),browserVersion:"Safari"===o?n:e})}function s(){this.cookies={},this.init()}var a=new(s.prototype.init=function(){var o={};document.cookie.split(/;\s/).forEach(function(e){var n=e.split(/=/),e=n[0],n=n[1];o[e]=n}),this.cookies=o},s.prototype.getItem=function(e){return this.cookies[e]},s.prototype.getAllItems=function(){return this.cookies},s.prototype.setItem=function(e,n,o,t,r,i){document.cookie="".concat(e,"=").concat(n).concat(o?"; expires=".concat(o):"").concat(t?"; path=".concat(t):"").concat(r?"; domain=".concat(r):"").concat(i?"; secure":"")},s);e.countDown=function e(n,o,t,r){if(!window)throw new Error("window is not defind.");if(0<n)return r&&r(),n--,window[o]=window.setTimeout(function(){e(n,o,t,r)},1e3),function(){return clearTimeout(window[o])};clearTimeout(window[o]),t&&t()},e.createRandomID=function(e){void 0===e&&(e=12);for(var n=[],o="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),t=o.length,r=0;r<e;r++)n.push(o[Math.round(Math.random()*t)]);return n.join("")},e.dCookie=a,e.debounce=function(o,t,r){var i;void 0===t&&(t=0);var s=r=void 0===r?!1:r;return function(){var e=this,n=arguments;s&&(o.apply(this,arguments),s=!1),clearTimeout(i),i=setTimeout(function(){r?s=!0:o.apply(e,n)},t)}},e.deepCopy=function e(n){if(d(n)||Array.isArray(n)){var o,t=Array.isArray(n)?[]:{};for(o in n)t[o]=e(n[o]);return t}return n},e.formatQueryParams=function(e){e=null===(e=/\?(?<params>(.*)=.+)/.exec(decodeURIComponent(e)))||void 0===e?void 0:e.groups;if(!e)return{};for(var n=e.params.split("&"),t={},o=0;o<n.length;o++)n[o].replace(/([^?&]*)=([^?&]*)/,function(e,n,o){return t[n]=o,e});return t},e.formatThousandth=function(e){var n="".concat(e).split("."),e=n[0],n=n[1],n=void 0===n?"":n,e=e.replace(/\d{1,3}(?=(\d{3})+$)/g,"$&,");return"".concat(e).concat(n?".".concat(n):"")},e.generateTree=function e(n,o,t,r){for(var i=[],s=0;s<n.length;s++){var a=n[s];a[t]===o&&(i.push(a),a.children=e(n,a[null!=r?r:"id"],t,r))}return i},e.isEmpty=function(e){return Array.isArray(e)?0===e.length:d(e)?0===Object.keys(e).length:["[object Set]","[object Map]"].includes(n(e))?0===e.size:[null,void 0,""].includes(e)},e.isFunction=function(e){return"[object Function]"===n(e)},e.isImageUrl=function(e){return/\.((png)|(jpe?g)|(gif)|(svg)|(webp))$/gi.test(e)},e.isObject=d,e.isRegexp=function(e){return"[object RegExp]"===n(e)},e.objectKeyToCamelCase=function e(n,o,t){if(Array.isArray(n))for(var r=[],i=0;i<n.length;i++)r[i]=e(o&&n[i][o]?n[i][o]:n[i],o,t);else if(d(n)){r={};for(var s=o&&n[o]?n[o]:n,a=0,c=Object.entries(s);a<c.length;a++){var f=(u=c[a])[0],u=u[1];Array.isArray(u)||d(s)?r[l(f,t)]=e(u,o,t):r[l(f,t)]=u}}else r=n;return r},e.realType=n,e.searchParams=function(e,n){return void 0===e&&(e=null===location||void 0===location?void 0:location.search),new URLSearchParams(e).get(n)},e.toLowerCamelCase=l,e.toUnderline=function(e){return e.replace(/([A-Z])/g,function(e){return"_".concat(e.toLocaleLowerCase())})},e.ua=function(e){return void 0===e&&(e=navigator.userAgent),new o(e).info},Object.defineProperty(e,"__esModule",{value:!0})}(exports)},821:function(module,___CSS_LOADER_EXPORT___,__webpack_require__){"use strict";__webpack_require__.d(___CSS_LOADER_EXPORT___,{Z:function(){return __WEBPACK_DEFAULT_EXPORT__}});var _node_modules_pnpm_registry_npmmirror_com_css_loader_6_5_1_webpack_5_60_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(220),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_registry_npmmirror_com_css_loader_6_5_1_webpack_5_60_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__),_node_modules_pnpm_registry_npmmirror_com_css_loader_6_5_1_webpack_5_60_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(402),___CSS_LOADER_EXPORT___=__webpack_require__.n(_node_modules_pnpm_registry_npmmirror_com_css_loader_6_5_1_webpack_5_60_0_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(___CSS_LOADER_EXPORT___());___CSS_LOADER_EXPORT___.push([module.id,"#auto-task-info li{text-align:left}#auto-task-info li a.high-light{color:#00aeff;font-weight:bold}#auto-task-info .success{color:green}#auto-task-info .error{color:red}#auto-task-info .warning{color:blue}#auto-task-info .info{color:#ff0}",""]);const __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___.toString()},402:function(module){"use strict";module.exports=function(cssWithMappingToString){var list=[];return list.toString=function(){return this.map(function(item){var content="",needLayer=void 0!==item[5];return item[4]&&(content+="@supports (".concat(item[4],") {")),item[2]&&(content+="@media ".concat(item[2]," {")),needLayer&&(content+="@layer".concat(0<item[5].length?" ".concat(item[5]):""," {")),content+=cssWithMappingToString(item),needLayer&&(content+="}"),item[2]&&(content+="}"),item[4]&&(content+="}"),content}).join("")},list.i=function(modules,media,dedupe,supports,layer){"string"==typeof modules&&(modules=[[null,modules,void 0]]);var alreadyImportedModules={};if(dedupe)for(var k=0;k<this.length;k++){var id=this[k][0];null!=id&&(alreadyImportedModules[id]=!0)}for(var _k=0;_k<modules.length;_k++){var item=[].concat(modules[_k]);dedupe&&alreadyImportedModules[item[0]]||(void 0!==layer&&(void 0===item[5]||(item[1]="@layer".concat(0<item[5].length?" ".concat(item[5]):""," {").concat(item[1],"}")),item[5]=layer),media&&(item[2]&&(item[1]="@media ".concat(item[2]," {").concat(item[1],"}")),item[2]=media),supports&&(item[4]?(item[1]="@supports (".concat(item[4],") {").concat(item[1],"}"),item[4]=supports):item[4]="".concat(supports)),list.push(item))}},list}},220:function(module){"use strict";module.exports=function(i){return i[1]}}},__webpack_module_cache__={};function __webpack_require__(moduleId){var module=__webpack_module_cache__[moduleId];if(void 0!==module)return module.exports;module=__webpack_module_cache__[moduleId]={id:moduleId,exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module.default}:function(){return module};return __webpack_require__.d(getter,{a:getter}),getter},__webpack_require__.d=function(exports,definition){for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop)};!function(){"use strict";var for_giveawaysu=Swal,external_Swal_default=__webpack_require__.n(for_giveawaysu);const external_Cookies_namespaceObject=Cookies;var javascript_utils_umd_min=__webpack_require__(400);function throwError_throwError(error,name){window.TRACE&&console.trace("%cAuto-Task[Debug]:","color:blue"),external_Swal_default().fire({title:i18n("errorReport"),icon:"error",showCancelButton:!0,confirmButtonText:i18n("toGithub"),showDenyButton:!0,denyButtonText:i18n("toKeylol"),cancelButtonText:i18n("close")}).then(isConfirmed=>{var{isDenied:text,isConfirmed}=isConfirmed;isConfirmed?window.open(`https://github.com/HCLonely/auto-task-v4/issues/new?title=${encodeURIComponent("[BUG] 脚本报错: "+name)}&labels=bug&template=bug_report.yml&website=${encodeURIComponent(window.location.href)}&browser=${encodeURIComponent(JSON.stringify((0,javascript_utils_umd_min.ua)(),null,4))}&manager=${encodeURIComponent(GM_info.scriptHandler+" "+GM_info.version)}&user-script=${encodeURIComponent(GM_info.script.version)}&logs=${encodeURIComponent(error.stack||"null")}&run-logs=`+encodeURIComponent($.makeArray($("#auto-task-info>li")).map(element=>element.innerText).join("\n")),"_blank"):text&&(text=`错误链接: [url=${window.location.href}]${window.location.href}[/url]

环境:

[code]${JSON.stringify((0,javascript_utils_umd_min.ua)(),null,4)}[/code]

脚本管理器: ${GM_info.scriptHandler} ${GM_info.version}
脚本版本: ${GM_info.script.version}

报错信息:
[code]${error.stack}[/code]

执行日志:
[code]${$.makeArray($("#auto-task-info>li")).map(element=>element.innerText).join("\n")}[/code]`,GM_setClipboard(text),external_Swal_default().fire({title:i18n("copySuccess"),icon:"success",confirmButtonText:i18n("ok")}).then(()=>{window.open("https://keylol.com/forum.php?mod=post&action=reply&fid=319&tid=777450","_blank")}))}),console.log("%c%s","color:white;background:red",`Auto-Task[Error]: ${name}
`+error.stack)}async function httpRequest_httpRequest(options){var times=1<arguments.length&&void 0!==arguments[1]?arguments[1]:0;window.TRACE&&console.trace("%cAuto-Task[Debug]:","color:blue");try{var result=await new Promise(resolve=>{options.dataType&&(options.responseType=options.dataType);var requestObj={timeout:3e4,ontimeout(data){resolve({result:"Error",statusText:"Timeout",status:601,data:data,options:options})},onabort(data){resolve({result:"Error",statusText:"Aborted",status:602,data:data,options:options})},onerror(data){resolve({result:"Error",statusText:"Error",status:603,data:data,options:options})},onload(data){resolve({result:"Success",statusText:"Load",status:600,data:data,options:options})},...options};GM_xmlhttpRequest(requestObj)});return window.DEBUG&&console.log("%cAuto-Task[httpRequest]:","color:blue",JSON.stringify(result)),600!==result.status&&times<2?await httpRequest_httpRequest(options,times+1):result}catch(error){return console.log("%cAuto-Task[httpRequest]:","color:red",JSON.stringify({errorMsg:error,options:options})),throwError_throwError(error,"httpRequest"),{result:"JsError",statusText:"Error",status:604,error:error,options:options}}}const tools_httpRequest=httpRequest_httpRequest;function delay(){let time=0<arguments.length&&void 0!==arguments[0]?arguments[0]:1e3;return new Promise(resolve=>{setTimeout(()=>{resolve(!0)},time)})}const scripts_echoLog=_ref=>{let{type,text,html,id}=_ref;const emptyStatus={success:()=>emptyStatus,error:()=>emptyStatus,warning:()=>emptyStatus,info:()=>emptyStatus,view:()=>emptyStatus};try{var _ele$;let ele;if(type)switch(type){case"joiningSteamGroup":case"leavingSteamGroup":case"gettingSteamGroupId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/groups/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"joiningSteamOfficialGroup":case"leavingSteamOfficialGroup":case"gettingSteamOfficialGroupId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/games/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"subscribingForum":case"unsubscribingForum":case"gettingForumId":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/app/${text}/discussions/" target="_blank">${text}</a>]...<font></font></li>`);break;case"followingCurator":case"unfollowingCurator":case"gettingCuratorId":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/${null!==text&&void 0!==text&&text.includes("/")?text:"curator/"+text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"addingToWishlist":case"removingFromWishlist":case"followingGame":case"unfollowingGame":case"gettingSubid":case"addingFreeLicense":case"requestingPlayTestAccess":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/app/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"addingFreeLicenseSubid":ele=$(`<li>${i18n("addingFreeLicense")}[<a href="https://steamdb.info/sub/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"favoritingWorkshop":case"unfavoritingWorkshop":case"gettingWorkshopAppId":case"votingUpWorkshop":ele=$(`<li>${i18n(type)}[<a href="https://steamcommunity.com/sharedfiles/filedetails/?id=${text}" target="_blank">
      ${text}</a>]...<font></font></li>`);break;case"gettingAnnouncementParams":case"likingAnnouncement":ele=$(`<li>${i18n(type)}[<a href="https://store.steampowered.com/news/app/${text}/view/${id}" target="_blank">
      ${id}</a>]...<font></font></li>`);break;case"joiningDiscordServer":case"gettingDiscordGuild":ele=$(`<li>${i18n(type)}[<a href="https://discord.com/invite/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"leavingDiscordServer":ele=$(`<li>${i18n(type)}[<a href="https://discord.com/channels/@me/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"updateDiscordAuth":ele=$(`<li style="color:red;">${i18n("updateDiscordAuth")}</li>`);break;case"followingTwitchChannel":case"unfollowingTwitchChannel":case"gettingTwitchChannelId":ele=$(`<li>${i18n(type)}[<a href="https://www.twitch.tv/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingInsUserId":case"followingIns":case"unfollowingIns":ele=$(`<li>${i18n(type)}[<a href="https://www.instagram.com/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingTwitterUserId":case"followingTwitterUser":case"unfollowingTwitterUser":ele=$(`<li>${i18n(type)}[<a href="https://twitter.com/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"retweetting":case"unretweetting":ele=$(`<li>${i18n(type)}${text}...<font></font></li>`);break;case"joiningReddit":case"leavingReddit":ele=$(`<li>${i18n(type)}[<a href="https://www.reddit.com/r/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"followingRedditUser":case"unfollowingRedditUser":ele=$(`<li>${i18n(type)}[<a href="https://www.reddit.com/user/${null===text||void 0===text?void 0:text.replace("u_","")}" target="_blank">
      ${null===text||void 0===text?void 0:text.replace("u_","")}</a>]...<font></font></li>`);break;case"followingYtbChannel":case"unfollowingYtbChannel":ele=$(`<li>${i18n(type)}[<a href="https://www.youtube.com/channel/${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"likingYtbVideo":case"unlikingYtbVideo":ele=$(`<li>${i18n(type)}[<a href="https://www.youtube.com/watch?v=${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"gettingVkId":case"joiningVkGroup":case"leavingVkGroup":case"joiningVkPublic":case"leavingVkPublic":case"sendingVkWall":case"deletingVkWall":ele=$(`<li>${i18n(type)}[<a href="https://vk.com/${text}/" target="_blank">${text}</a>]...<font></font></li>`);break;case"visitingLink":ele=$(`<li>${i18n("visitingLink")}[<a href="${text}" target="_blank">${text}</a>]...<font></font></li>`);break;case"verifyingInsAuth":case"text":ele=$(`<li>${i18n(text)}<font></font></li>`);break;case"html":ele=$(text||html);break;case"whiteList":ele=$(`<li><font class="warning">${i18n("skipTask")}[${text}(${id})](${i18n("whiteList")})</font></li>`);break;case"globalOptionsSkip":ele=$(`<li>${i18n("skipTaskOption")}<font class="warning">${text}</font></li>`);break;default:ele=$(`<li>${i18n("unKnown")}:${type}(${text})...<font></font></li>`)}else ele=text?$(`<li>${i18n(text)}<font></font></li>`):html?$(html):$("<li><font></font></li>");return ele.addClass("card-text"),$("#auto-task-info").append(ele),null!==(_ele$=ele[0])&&void 0!==_ele$&&_ele$.scrollIntoView(),{font:ele.find("font"),success(){var _this$font,_this$font3,text=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"Success",html=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return null!==(_this$font=this.font)&&void 0!==_this$font&&_this$font.attr("class","").addClass("success"),html?null!==(_this$font3=this.font)&&void 0!==_this$font3&&_this$font3.html(text):null!==(_this$font3=this.font)&&void 0!==_this$font3&&_this$font3.text(text),this},error(){var _this$font4,_this$font6,text=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"Error",html=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return null!==(_this$font4=this.font)&&void 0!==_this$font4&&_this$font4.attr("class","").addClass("error"),html?null!==(_this$font6=this.font)&&void 0!==_this$font6&&_this$font6.html(text):null!==(_this$font6=this.font)&&void 0!==_this$font6&&_this$font6.text(text),this},warning(){var _this$font7,_this$font9,text=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"Warning",html=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return null!==(_this$font7=this.font)&&void 0!==_this$font7&&_this$font7.attr("class","").addClass("warning"),html?null!==(_this$font9=this.font)&&void 0!==_this$font9&&_this$font9.html(text):null!==(_this$font9=this.font)&&void 0!==_this$font9&&_this$font9.text(text),this},info(){var _this$font10,_this$font12,text=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"Info",html=1<arguments.length&&void 0!==arguments[1]&&arguments[1];return null!==(_this$font10=this.font)&&void 0!==_this$font10&&_this$font10.attr("class","").addClass("info"),html?null!==(_this$font12=this.font)&&void 0!==_this$font12&&_this$font12.html(text):null!==(_this$font12=this.font)&&void 0!==_this$font12&&_this$font12.text(text),this},view(){var _this$font13;return null!==(_this$font13=this.font)&&void 0!==_this$font13&&_this$font13[0].scrollIntoView(),this}}}catch(error){return throwError_throwError(error,"echoLog"),emptyStatus}},unique=array=>{try{return[...new Set(array)]}catch(error){return throwError_throwError(error,"unique"),[]}},getRedirectLink=async link=>{try{if(!link)return null;const redirectLinksCache=GM_getValue("redirectLinks")||{};return redirectLinksCache[link]&&redirectLinksCache[link],await tools_httpRequest({url:link,method:"GET"}).then(data=>{data=data.data;return null!=data&&data.finalUrl?(redirectLinksCache[link]=data.finalUrl,GM_setValue("redirectLinks",redirectLinksCache),data.finalUrl):null})}catch(error){return throwError_throwError(error,"getRedirectLink"),null}};const defaultGlobalOptions={doTask:{discord:{servers:!0},instagram:{users:!0},twitch:{channels:!0},twitter:{users:!0,retweets:!0},vk:{names:!0},youtube:{channels:!0,likes:!0},reddit:{reddits:!0},steam:{groups:!0,officialGroups:!0,wishlists:!0,follows:!0,forums:!0,workshops:!0,curators:!0,workshopVotes:!0,announcements:!0,licenses:!0,playtests:!0}},undoTask:{discord:{servers:!0},instagram:{users:!0},twitch:{channels:!0},twitter:{users:!0,retweets:!0},vk:{names:!0},youtube:{channels:!0,likes:!0},reddit:{reddits:!0},steam:{groups:!0,officialGroups:!0,wishlists:!0,follows:!0,forums:!0,workshops:!0,curators:!0}},position:{buttonSideX:"right",buttonSideY:"top",buttonDistance:"15,30",showButtonSideX:"right",showButtonSideY:"top",showButtonDistance:"15,30",logSideX:"right",logSideY:"bottom",logDistance:"10,10"},hotKey:{doTaskKey:"alt + d",undoTaskKey:"alt + u",toggleLogKey:"alt + l"},other:{twitterVerifyId:"783214",youtubeVerifyChannel:"UCrXUsMBcfTVqwAS7DKg9C0Q",autoUpdateSource:"jsdelivr",language:"zh",checkLogin:!0,checkLeftKey:!0,defaultShowButton:!0,defaultShowLog:!0,debug:!1,receivePreview:!0}};for_giveawaysu=GM_getValue("globalOptions")||{};const assignObject=(obj1,obj2)=>{try{const newObj={};for(var[key,value]of Object.entries(obj1))"[object Object]"===Object.prototype.toString.call(value)&&"[object Object]"===Object.prototype.toString.call(obj2[key])?newObj[key]=assignObject(value,obj2[key]):newObj[key]=obj2[key]??value;return newObj}catch(error){return throwError_throwError(error,"assignObject"),defaultGlobalOptions}},globalOptions=assignObject(defaultGlobalOptions,for_giveawaysu);const languages={zh:{website:"网站",type:"类型",edit:"编辑",whiteList:"白名单",skipTask:"跳过撤销任务",whiteListOptions:"白名单设置",changeWhiteListOption:"设置白名单(%0)",whiteListNotFound:"找不到此项白名单: %0",changeWhiteListSuccess:"白名单修改成功，刷新生效！",changeWebsiteOptions:"网站设置",changeGlobalOptions:"全局设置",ok:"是",save:"保存",close:"关闭",return:"返回",option:"选项",value:"值",websiteOptions:"当前网站设置",changeWebsiteOptionsSuccess:"更改当前网站设置成功，刷新生效！",changeGlobalOptionsSuccess:"更改全局设置成功，刷新生效！",needLogin:"请先登录！",getTasksInfo:"正在获取并处理任务信息...",gettingKey:"正在获取Key...",verifyingTask:"正在验证任务",notice:"自动任务脚本提醒",noKeysLeft:"此页面已经没有剩余key了，是否关闭？",giveawayEnded:"此活动已结束，是否关闭？",giveawayNotWork:"此活动因某些原因(已结束/暂停/未开始...)不可用(如果是脚本误判请及时反馈)，是否关闭？",confirm:"确定",cancel:"取消",unKnown:"未知",unKnownTaskType:"未识别的任务",doing:"正在做任务",allTasksComplete:"所有任务已完成！",getTaskIdFailed:"获取任务Id失败！",initSuccess:"%0 初始化成功！",initFailed:"%0 初始化失败！",errorLink:"链接错误: %0",needInit:"请先初始化",verifyingAuth:"正在验证%0凭证...",updatingAuth:"正在更新%0凭证...",refreshingToken:"正在刷新%0凭证...",settingToken:"正在设置%0凭证...",initing:"正在初始化...",getFailed:"获取%0失败！",checkLoginFailed:"检测登录状态失败！",checkLeftKeyFailed:"检测剩余Key失败！",userId:"用户Id",joiningGiveaway:"正在加入赠Key",needJoinGiveaway:"需要先加入赠Key",cannotUndo:"此网站不支持取消任务",verifyAuth:"正在验证 %0 凭证...",closePageNotice:"如果此页面没有自动关闭，请自行关闭本页面。",errorReport:"检测到脚本报错，是否前往反馈BUG？",visitingLink:"正在访问链接: ",doTask:"做任务",undoTask:"撤销任务",verifyTask:"验证任务",getKey:"获取Key",selectAll:"全选",selectNone:"全不选",invertSelect:"反选",doFreeTask:"加入免费赠品",doPointTask:"加入点数赠品",skipTaskOption:"设置中已配置跳过任务",other:"其他",globalOptions:"全局设置",checkLogin:"登录检测</br>需要登录的网站自动登录，部分本网站支持",checkLeftKey:"剩余Key检测</br>赠Key活动结束提示是否关闭，部分本网站支持",twitterVerifyId:"通过尝试关注该账号验证Twitter凭证</br>默认为Twitter官方帐号 783214</br>不想关注官方账号可以改为自己的帐号",youtubeVerifyChannel:"通过尝试订阅该频道验证YouTube凭证</br>默认为YouTube官方频道 UCrXUsMBcfTVqwAS7DKg9C0Q</br>不想关注官方频道可以改为自己的频道",autoUpdateSource:"更新源</br>github: 需代理，实时更新</br>jsdelivr: 可不用代理，更新有延迟</br>standby: 备用</br>auto: 依次使用github, jsdelivr, standby源进行尝试更新",saveGlobalOptions:"保存全局设置",settingPage:"设置页面",name:"名称",version:"版本",scriptManager:"脚本管理器",script:"脚本",environment:"环境",os:"系统",browser:"浏览器",getId:"获取 %0 id",getTwitterUserId:"获取Twitter用户id(获取id功能仅在设置页面可用)",getYoutubeChannelId:"获取Youtube频道id(获取id功能仅在设置页面可用)",showButton:"显示按钮",hideButton:"隐藏按钮",showLog:"显示日志",hideLog:"隐藏日志",defaultShowButton:"默认显示按钮",defaultShowLog:"默认显示日志",debug:"输出调试日志，不要开启此选项！",receivePreview:"接收预览版更新",position:"组件位置",buttonSideX:"按钮区域水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",buttonSideY:"按钮区域垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",buttonDistance:"按钮区域距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",showButtonSideX:"显示按钮水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",showButtonSideY:"显示按钮垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",showButtonDistance:"显示按钮距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",logSideX:"日志区域水平方向定位(实时预览功能仅在设置页面可用)</br>left: 靠左 | right: 靠右",logSideY:"日志区域垂直方向定位(实时预览功能仅在设置页面可用)</br>top: 靠上 | bottom: 靠下",logDistance:"日志区域距边缘的距离(实时预览功能仅在设置页面可用)</br>格式: X距离,Y距离",hotKey:"快捷键",doTaskKey:"做任务快捷键</br>(实时预览功能仅在设置页面可用)",undoTaskKey:"撤销任务快捷键</br>(实时预览功能仅在设置页面可用)",toggleLogKey:"显示/隐藏日志快捷键</br>(实时预览功能仅在设置页面可用)",tasksHistory:"任务历史",clearHistory:"清空历史",clearHistoryFinished:"已清空任务历史！",deleteTask:"删除任务",lastChangeTime:"最后一次修改时间",clearTaskFinished:"删除以下任务完成！",clearTaskFailed:"删除任务失败，没有找到任务名！",syncData:"数据同步",settingData:"正在上传数据...",gettingData:"正在获取数据...",help:"帮助",fileName:"文件名",upload2gist:"同步到Gist",downloadFromGist:"从Gist同步",saveAndTest:"保存配置并测试",testSuccess:"测试成功！",testFailed:"测试失败！",saveAndTestNotice:"请先保存配置并测试！",processingData:"正在处理数据...",updatingData:"正在上传数据...",syncDataSuccess:"同步数据成功！",syncDataFailed:"同步数据失败，请在控制台查看错误信息！",downloadingData:"正在下载数据...",checkedNoData:"没有检测到远程数据，请确认配置是否正确！",savingData:"正在保存数据...",syncHistory:"同步任务历史",checkUpdateFailed:"检测更新失败",newVersionNotice:'检测到新版本V%0, <a class="high-light" href="%1" target="_blank">点此更新</a>',language:"语言</br>目前仅支持zh: 中文, en: 英文",gistOptions:"Gist 设置",swalNotice:"检测到您第一次安装V4版本脚本，请前往阅读用前必读内容！",echoNotice:'检测到您第一次安装V4版本脚本，请<a class="high-light" href="%0" target="_blank">点此前往</a>阅读用前必读内容！',noticeLink:"https://auto-task-doc.js.org/guide/#用前必读",toGithub:"前往Github反馈",toKeylol:"前往其乐论坛反馈",copySuccess:"错误信息已复制到剪切板，是否前往其乐论坛反馈？",copyFailed:"请复制下方错误信息后前往Keylol论坛反馈！",updateText:"%0 版本更新内容：",Active:"进行中",Ended:"已结束",Banned:"已封禁",Paused:"已暂停",notStart:"未开始",noRemoteData:"检测到远程无数据",errorRemoteDataFormat:"远程数据格式错误",updateHistory:'历史更新记录<a class="high-light" href="https://auto-task-doc.js.org/logs/" target="_blank">点此查看</a>',groups:"组",officialGroups:"官方组",wishlists:"愿望单",follows:"游戏关注",forums:"论坛",workshops:"创意工坊收藏",curators:"鉴赏家",workshopVotes:"创意工坊点赞",announcements:"社区通知",steamCommunity:"Steam社区",steamStore:"Steam商店",licenses:"入库免费游戏",playtests:"请求访问权限",needLoginSteamStore:'请先<a href="https://store.steampowered.com/login/" target="_blank">登录Steam商店</a>',needLoginSteamCommunity:'请先<a href="https://steamcommunity.com/login/home/" target="_blank">登录Steam社区</a>',joiningSteamGroup:"正在加入Steam组",leavingSteamGroup:"正在退出Steam组",gettingSteamGroupId:"正在获取Steam组Id",joiningSteamOfficialGroup:"正在加入Steam官方组",leavingSteamOfficialGroup:"正在退出Steam官方组",gettingSteamOfficialGroupId:"正在获取Steam官方组Id",subscribingForum:"正在订阅Steam论坛",unsubscribingForum:"正在取消订阅Steam论坛",gettingForumId:"正在获取Steam论坛Id",followingCurator:"正在关注Steam鉴赏家",unfollowingCurator:"正在取关Steam鉴赏家",gettingCuratorId:"正在获取Steam鉴赏家Id",addingToWishlist:"正在添加游戏到Steam愿望单",removingFromWishlist:"正在从Steam愿望单移除游戏",followingGame:"正在关注Steam游戏",unfollowingGame:"正在取关Steam游戏",favoritingWorkshop:"正在收藏Steam创意工坊物品",unfavoritingWorkshop:"正在取消收藏Steam创意工坊物品",gettingWorkshopAppId:"正在获取Steam创意工坊物品Id",votingUpWorkshop:"正在点赞Steam创意工坊物品",gettingAnnouncementParams:"正在获取Steam通知信息",likingAnnouncement:"正在点赞Steam通知",changingArea:"正在更换Steam地区: %0...",notNeededChangeArea:"当前地区不需要更换",noAnotherArea:"请检测是否开启正确开启代理",gettingAreaInfo:"正在获取Steam地区信息...",changeAreaNotice:"疑似锁区游戏，尝试换区执行",steamFinishNotice:"Steam任务完成，尝试将购物车地区换回CN",gettingSubid:"正在获取游戏subid",addingFreeLicense:"正在入库",missParams:"缺少参数",gettingLicenses:"正在获取Licenses...",requestingPlayTestAccess:"正在请求访问权限",tryChangeAreaNotice:"此功能无法检测游戏是否限区，因此会尝试换区后再入库，换区失败也不影响后续入库",servers:"服务器",joiningDiscordServer:"正在加入Discord服务器",leavingDiscordServer:"正在退出Discord服务器",gettingDiscordGuild:"正在获取Discord服务器Id",getDiscordAuthFailed:"获取Discord凭证失败，请检测Discord帐号是否已登录",discordImportantNotice:"重要提醒！！！",discordImportantNoticeText:"由于Discord网站后台更新，目前使用此脚本加组后可能会导致Discord帐号被强制退出，且需要两步验证才能正常登录，请谨慎使用！！！",continue:"继续",skipDiscordTask:"跳过Discord任务",continueAndDontRemindAgain:"继续且不再提醒",users:"用户",loginIns:'请先<a href="https://www.instagram.com/accounts/login/" target="_blank">登录Instagram</a>',insBanned:"您的Instagram账户已被封禁",verifyingInsAuth:"正在验证Instagram凭证...",gettingInsUserId:"正在获取Instagram用户Id",followingIns:"正在关注Instagram用户",unfollowingIns:"正在取关Instagram用户",reddits:"社区/用户",loginReddit:'请先<a href="https://www.reddit.com/login/" target="_blank">登录Reddit</a>',changingRedditVersion:"正在切换Reddit为新版页面...",joiningReddit:"正在加入Reddit社区",leavingReddit:"正在退出Reddit社区",followingRedditUser:"正在关注Reddit用户",unfollowingRedditUser:"正在取关Reddit用户",channels:"频道",followingTwitchChannel:"正在关注Twitch频道",unfollowingTwitchChannel:"正在取关Twitch频道",gettingTwitchChannelId:"正在获取Twitch频道Id",checkingTwitchIntegrity:"正在检查Twitch完整性...",twitterUser:"推特用户",retweets:"转推",gettingTwitterUserId:"正在获取推特用户Id",followingTwitterUser:"正在关注推特用户",unfollowingTwitterUser:"正在取关推特用户",retweetting:"正在转推",unretweetting:"正在撤销转推",names:"组/社区/动态",loginVk:'请先<a href="https://vk.com/login/" target="_blank">登录Vk</a>',gettingVkId:"正在获取Vk任务Id",joiningVkGroup:"正在加入Vk组",leavingVkGroup:"正在退出Vk组",joiningVkPublic:"正在加入Vk社区",leavingVkPublic:"正在退出Vk社区",sendingVkWall:"正在转发Vk动态",deletingVkWall:"正在撤销转发Vk动态",youtubeChannel:"YouTube频道",likes:"点赞",loginYtb:'请先<a href="https://accounts.google.com/ServiceLogin?service=youtube" target="_blank">登录YouTube</a>',tryUpdateYtbAuth:'请尝试<a href="https://www.youtube.com/#auth" target="_blank">更新YouTube凭证</a>',gettingYtbToken:"正在获取YouTube Token...",followingYtbChannel:"正在订阅YouTube频道",unfollowingYtbChannel:"正在退订YouTube频道",likingYtbVideo:"正在点赞YouTube视频",unlikingYtbVideo:"正在取消点赞YouTube视频",giveKeyNoticeBefore:"每次验证间隔15s",giveKeyNoticeAfter:'如果没有key, 请在<a href="https://givekey.ru/profile" target="_blank">https://givekey.ru/profile</a>查看',noPoints:"点数不够，跳过抽奖",getNeedPointsFailed:"获取所需点数失败，跳过抽奖",joiningLottery:"正在加入抽奖",doingGleamTask:"正在做Gleam任务...",gettingGleamLink:"正在获取Gleam任务链接...",gleamTaskNotice:"如果此页面长时间未关闭，请完成任一任务后自行关闭！",verifiedGleamTasks:"已尝试验证所有任务，验证失败的任务请尝试手动验证或完成！",gsNotice:'为避免得到"0000-0000-0000"key, 已自动屏蔽"Grab Key"按钮，获取key时请关闭脚本！',giveeClubVerifyNotice:"正在验证任务...",giveeClubVerifyFinished:"请等待验证完成后自行加入赠Key",doingKeyhubTask:"正在做Keyhub任务...",SweepWidgetNotice:"正在处理并验证任务，每次验证任务有1~3s间隔防止触发验证过快警告...",confirmingTask:"正在跳过警告页面..."},en:{website:"Website",type:"Type",edit:"Edit",whiteList:"Whitelist",skipTask:"Skip undo task",whiteListOptions:"Whitelist options",changeWhiteListOption:"Whitelist option(%0)",whiteListNotFound:"Cannot find this whitelist: %0",changeWhiteListSuccess:"The whitelist is successfully modified, and the page refresh will take effect!",changeWebsiteOptions:"Website options",changeGlobalOptions:"Global options",ok:"OK",save:"Save",close:"Close",return:"Return",option:"Option",value:"Value",websiteOptions:"Current website settings",changeWebsiteOptionsSuccess:"The current website setting is changed successfully, and the page refresh will take effect!",changeGlobalOptionsSuccess:"The global setting is changed successfully, and the refresh will take effect!",needLogin:"Please log in first!",getTasksInfo:"Obtaining and processing task information...",gettingKey:"Getting Key...",verifyingTask:"Verifying task",notice:"Automatic task script notice",noKeysLeft:"There are no more keys left on this page. Do you want to close it?",giveawayEnded:"This event has ended, do you want to close it?",giveawayNotWork:"This activity is unavailable for some reasons (banned/ended/paused/not started...) (if it is a script misjudgment, please give us feedback in time), is it closed?",confirm:"Confirm",cancel:"Cancel",unKnown:"Unknown",unKnownTaskType:"Unrecognized task",doing:"Doing a task",allTasksComplete:"All tasks have been completed!",getTaskIdFailed:"Failed to obtain task Id!",initSuccess:"%0 was initialized successfully!",initFailed:"%0 initialization failed!",errorLink:"Link error: %0",needInit:"Please initialize first",verifyingAuth:"Verifying %0 token...",updatingAuth:"Update %0 token...",initing:"Initializing...",getFailed:"Failed to get %0!",checkLoginFailed:"Failed to detect login status!",checkLeftKeyFailed:"Failed to detect the remaining keys!",userId:"User Id",joiningGiveaway:"Joining giveaway",needJoinGiveaway:"Need to join the giveaway first",cannotUndo:"This website does not support canceling tasks",verifyAuth:"Verifying %0 token...",closePageNotice:"f this page does not close automatically, please close this page yourself.",errorReport:"A script error is detected, do you want to report the BUG?",visitingLink:"Visiting link: ",doTask:"DoTask",undoTask:"UndoTask",verifyTask:"Verify",getKey:"GetKey",selectAll:"SelectAll",selectNone:"SelectNone",invertSelect:"InvertSelect",doFreeTask:"FreeTask",doPointTask:"PointTask",skipTaskOption:"Skip task has been configured in the settings",other:"Other",globalOptions:"Global Options",checkLogin:"Login detection</br>Need to log in to the website automatically log in, part of this website supports.",checkLeftKey:"Key remaining detection</br>The end of the giveaway event prompts whether to close or not, part of this website supports.",twitterVerifyId:"Verify Twitter token by trying to follow the account.</br>The default is the official Twitter account 783214.</br>If you don't want to follow the official account, you can change it to your own account.",youtubeVerifyChannel:"Verify YouTube token by trying to subscribe to the channel.</br>The default is the official YouTube channel UCrXUsMBcfTVqwAS7DKg9C0Q.</br>If you don't want to follow the official channel, you can change it to your own channel.",autoUpdateSource:"The source to update</br>github: Fast update.</br>jsdelivr: Update is delayed.</br>standby: Standby source.</br>auto: Try to update using github, jsdelivr, standby sources in turn.",saveGlobalOptions:"SaveSettings",settingPage:"Setting Page",name:"Name",version:"Version",scriptManager:"Script Manager",script:"Script",environment:"Environment",os:"OS",browser:"Browser",getId:"Get %0 id",getTwitterUserId:"Get Twitter user id (Get id function is only available on the settings page).",getYoutubeChannelId:"Get Youtube channel id (Get id function is only available on the settings page).",showButton:"ShowButton",hideButton:"HideButton",showLog:"ShowLog",hideLog:"HideLog",defaultShowButton:"Default display button",defaultShowLog:"Display log by default",debug:"Output debug log, do not enable this option!",receivePreview:"Receive preview updates",position:"Component position",buttonSideX:"Horizontal positioning of the button area (real-time preview function is only available on the setting page).</br>left: left | right: right",buttonSideY:"The button area is positioned in the vertical direction (real-time preview function is only available on the settings page).</br>top: top | bottom: bottom",buttonDistance:"The distance between the button area and the edge (the real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",showButtonSideX:"ShowButton horizontal positioning (real-time preview function is only available on the setting page).</br>left: left | right: right",showButtonSideY:"ShowButton vertical positioning (real-time preview function is only available on the setting page).</br>top: top | bottom: bottom",showButtonDistance:"The distance between the ShowButton and the edge (real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",logSideX:"Horizontal positioning of the log area (real-time preview function is only available on the setting page).</br>left: left | right: right",logSideY:"Vertical positioning of the log area (real-time preview function is only available on the setting page).</br>top: top | bottom: bottom",logDistance:"The distance between the log area and the edge (the real-time preview function is only available on the setting page).</br> Format: X distance, Y distance",hotKey:"Shortcut key",doTaskKey:"DoTask shortcut keys</br> (real-time preview function is only available on the settings page).",undoTaskKey:"UndoTask shortcut keys</br> (real-time preview function is only available on the settings page).",toggleLogKey:"ShowLog/HideLog shortcut keys</br> (real-time preview function is only available on the settings page).",tasksHistory:"TasksHistory",clearHistory:"Clear history",clearHistoryFinished:"The mission history has been cleared!",deleteTask:"Delete task",lastChangeTime:"Last Change Time",clearTaskFinished:"Delete the following tasks completed!",clearTaskFailed:"Failed to delete the task, the task name was not found!",syncData:"DataSync",settingData:"Uploading data...",gettingData:"Getting data...",help:"Help",fileName:"Filename",upload2gist:"Sync to Gist",downloadFromGist:"Sync from Gist",saveAndTest:"Save configuration and test",testSuccess:"Test success!",testFailed:"Test failed!",saveAndTestNotice:"Please save the configuration and test first!",processingData:"Processing data...",updatingData:"Uploading data...",syncDataSuccess:"Synchronized data successfully!",syncDataFailed:"Failed to synchronize data, please check the error message on the console!",downloadingData:"Downloading data...",checkedNoData:"No remote data is detected, please confirm whether the configuration is correct!",savingData:"Saving data...",syncHistory:"Synchronize tasks history",checkUpdateFailed:"Check update failed",newVersionNotice:'Checked a new version V%0, <a class="high-light" href="%1" target="_blank">click to update</a>',language:"Language</br> Currently only supports zh: Chinese, en: English",gistOptions:"Gist Settings",swalNotice:"It is detected that you are installing the V4 version script for the first time, please go to read the READ ME FIRST content before use!",echoNotice:'It is detected that you are installing the V4 version script for the first time, please <a class="high-light" href="%0" target="_blank">click here</a> to read the READ ME FIRST content before use!',noticeLink:"https://auto-task-doc.js.org/en/guide/#read-me-first",toGithub:"Feedback(Github)",toKeylol:"Feedback(Keylol)",copySuccess:"The error message has been copied to the clipboard. Do you want to go to the Keylol forum to give feedback?",copyFailed:"Please copy the error information below and report back to the Keylol forum!",updateText:"Updates in version %0:",Active:"Active",Ended:"Ended",Banned:"Banned",Paused:"Paused",notStart:"notStart",noRemoteData:"No data remotely",errorRemoteDataFormat:"Remote data has wrong format",updateHistory:'<a class="high-light" href="https://auto-task-doc.js.org/logs/" target="_blank">Click here</a> to view the historical update record.',groups:"Group",officialGroups:"Official Group",wishlists:"Wishlist",follows:"Follow Game",forums:"Forum",workshops:"Favorite Workshop",curators:"Curator",workshopVotes:"Voteup Workshop",announcements:"Announcement",steamCommunity:"Steam Community",steamStore:"Steam Store",licenses:"Add License",playtests:"Playtest Access",needLoginSteamStore:'Please <a href="https://store.steampowered.com/login/" target="_blank">log in to the Steam Store</a>',needLoginSteamCommunity:'Please <a href="https://steamcommunity.com/login/home/" target="_blank">log in to the Steam Community</a>',joiningSteamGroup:"Joining Steam Group",leavingSteamGroup:"Leaving Steam Group",gettingSteamGroupId:"Getting Steam Group Id",joiningSteamOfficialGroup:"Joining Steam Official Group",leavingSteamOfficialGroup:"Leaving Steam Official Group",gettingSteamOfficialGroupId:"Getting Steam Official Group Id",subscribingForum:"Subscribing the Steam Forum",unsubscribingForum:"Unsubscribing the Steam Forum",gettingForumId:"Getting Steam Forum Id",followingCurator:"Following Steam Curator",unfollowingCurator:"Unfollowing Steam Curator",gettingCuratorId:"Getting Steam Curator Id",addingToWishlist:"Adding the game to the Steam wishlist",removingFromWishlist:"Removing the game from the Steam wishlist",followingGame:"Following Steam games",unfollowingGame:"Unfollowing Steam games",favoritingWorkshop:"Favouring Steam Workshop Items",unfavoritingWorkshop:"Unfavoriting Steam Workshop Items",gettingWorkshopAppId:"Getting Steam Workshop Item Id",votingUpWorkshop:"Liking Steam workshop items",gettingAnnouncementParams:"Getting Steam announcement information",likingAnnouncement:"Liking Steam announcement",changingArea:"Changing Steam area: %0...",notNeededChangeArea:"The current area does not need to be changed",noAnotherArea:"Please check whether the proxy is turned on correctly",gettingAreaInfo:"Getting Steam area information...",changeAreaNotice:"Suspected of a locked zone game, try to change the zone to execute",steamFinishNotice:"Steam task completed, try to change the shopping cart area back to CN",gettingSubid:"Getting subid",addingFreeLicense:"Adding free license",missParams:"Missing parameters",gettingLicenses:"Getting licenses...",requestingPlayTestAccess:"Requesting play test access",tryChangeAreaNotice:"This function cannot detect whether the game is limited, so it will try to change the area before entering the library. Failure to change the area will not affect the subsequent storage.",servers:"Server",joiningDiscordServer:"Joining Discord Server",leavingDiscordServer:"Leaving Discord Server",gettingDiscordGuild:"Getting Discord server Id",getDiscordAuthFailed:"Failed to get Discord token, please check whether the Discord account is logged in",discordImportantNotice:"Important Reminder! ! !",discordImportantNoticeText:"Due to the background update of the Discord website, currently using this script to join a group may cause the Discord account to be forcibly logged out, and two-step verification is required to log in normally, please use it with caution! ! !",continue:"Continue",skipDiscordTask:"Skip",continueAndDontRemindAgain:"Continue without Reminders",users:"User",loginIns:'Please <a href="https://www.instagram.com/accounts/login/" target="_blank">log in to Instagram</a>',insBanned:"Your Instagram account has been banned",verifyingInsAuth:"Verifying Instagram token...",gettingInsUserId:"Getting Instagram user Id",followingIns:"Following Instagram user",unfollowingIns:"Unfollowing Instagram user",reddits:"Reddit/User",loginReddit:'Please <a href="https://www.reddit.com/login/" target="_blank">log in to Reddit</a>',changingRedditVersion:"Switching Reddit to a new version page...",joiningReddit:"Joining the Reddit",leavingReddit:"Leaving the Reddit",followingRedditUser:"Following Reddit User",unfollowingRedditUser:"Unfollowing Reddit User",channels:"Channel",followingTwitchChannel:"Following Twitch Channel",unfollowingTwitchChannel:"Unfollowing Twitch Channel",gettingTwitchChannelId:"Getting Twitch Channel Id",checkingTwitchIntegrity:"Checking Twitch integrity...",twitterUser:"Twitter User",retweets:"Retweet",gettingTwitterUserId:"Getting Twitter User Id",followingTwitterUser:"Following Twitter User",unfollowingTwitterUser:"Unfollowing Twitter User",retweetting:"Retweetting",unretweetting:"Unretweetting",names:"Group/Public/Wall",loginVk:'Please <a href="https://vk.com/login/" target="_blank">log in to Vk</a>',gettingVkId:"Getting Vk task Id",joiningVkGroup:"Joining Vk Group",leavingVkGroup:"Leaving Vk Group",joiningVkPublic:"Joining Vk Public",leavingVkPublic:"Leaving Vk Public",sendingVkWall:"Sending Vk Wall",deletingVkWall:"Deleting Vk Wall",youtubeChannel:"YouTube Channel",likes:"Like",loginYtb:'Please <a href="https://accounts.google.com/ServiceLogin?service=youtube" target="_blank">log in to YouTube</a>',tryUpdateYtbAuth:'Please try to <a href="https://www.youtube.com/#auth" target="_blank">update YouTube token</a>',gettingYtbToken:"Getting YouTube Token...",followingYtbChannel:"Subscribing to YouTube channel",unfollowingYtbChannel:"Unsubscribing to YouTube channel",likingYtbVideo:"Liking YouTube video",unlikingYtbVideo:"Unliking YouTube video",giveKeyNoticeBefore:"Each verification interval is 15s",giveKeyNoticeAfter:'If there is no key, please check at <a href="https://givekey.ru/profile" target="_blank">https://givekey.ru/profile</a>',noPoints:"Not enough points, skip the lottery",getNeedPointsFailed:"ailed to obtain the required points, skip the lottery",joiningLottery:"Joining the lottery",doingGleamTask:"Doing Gleam Task...",gettingGleamLink:"Getting Gleam task link...",gleamTaskNotice:"If this page has not been closed for a long time, please close it yourself after completing any task!",verifiedGleamTasks:"Attempted to verify all tasks. If the verification fails, please try to verify manually or complete it!",gsNotice:'In order to avoid getting the "0000-0000-0000" key, the "Grab Key" button has been hidden, please close the script when obtaining the key!',giveeClubVerifyNotice:"Verifying task...",giveeClubVerifyFinished:"Wait for the verification to complete and join it by yourself",doingKeyhubTask:"Doing Keyhub Task...",SweepWidgetNotice:"The task is being processed and verified. There is an interval of 1~3s for each verification task to prevent the triggering of too fast verification warning...",confirmingTask:"Confirming task..."}},language=["zh","en"].includes(globalOptions.other.language)?globalOptions.other.language:"en";const i18n=function(key){for(var _languages$language,_len=arguments.length,argvs=new Array(1<_len?_len-1:0),_key=1;_key<_len;_key++)argvs[_key-1]=arguments[_key];return null!==(_languages$language=languages[language])&&void 0!==_languages$language&&_languages$language[key]?languages[language][key].replace(/%([\d]+)/g,(match,index)=>argvs[parseInt(index,10)]):key};for_giveawaysu=class{constructor(){var obj,key,value;value=void 0,(key="tasks")in(obj=this)?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value}getRealParams(name,links,doTask,link2param){try{let realParams=[];return 0<links.length&&(realParams=[...realParams,...links.map(link=>link2param(link)).filter(link=>link)]),!doTask&&0<this.tasks[name].length&&(realParams=[...realParams,...this.tasks[name]]),unique(realParams)}catch(error){return throwError_throwError(error,"Social.getRealParams"),[]}}};function _classPrivateMethodInitSpec(obj,privateSet){_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function _classPrivateFieldInitSpec(obj,privateMap,value){_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function _checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Discord_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function _classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const defaultTasks=JSON.stringify({servers:[]});var _auth=new WeakMap,_cache=new WeakMap,_initialized=new WeakMap,_verifyAuth=new WeakSet,_updateAuth=new WeakSet,_joinServer=new WeakSet,_leaveServer=new WeakSet,_getGuild=new WeakSet,_setCache=new WeakSet;async function _verifyAuth2(){try{const logStatus=scripts_echoLog({text:i18n("verifyingAuth","Discord")});var{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v6/users/@me",method:"HEAD",headers:{authorization:_classPrivateFieldGet(this,_auth).auth}});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Discord.verifyAuth"),!1}}async function _updateAuth2(){try{const logStatus=scripts_echoLog({text:i18n("updatingAuth","Discord")});return await new Promise(resolve=>{const newTab=GM_openInTab("https://discord.com/channels/@me#auth",{active:!0,insert:!0,setParent:!0});newTab.onclose=async()=>{var auth=null===(auth=GM_getValue("discordAuth"))||void 0===auth?void 0:auth.auth;auth?(_classPrivateFieldSet(this,_auth,{auth:auth}),logStatus.success(),resolve(await _classPrivateMethodGet(this,_verifyAuth,_verifyAuth2).call(this))):(logStatus.error("Error: Update discord auth failed!"),resolve(!1))}})}catch(error){return throwError_throwError(error,"Discord.updateAuth"),!1}}async function _joinServer2(inviteId){try{const logStatus=scripts_echoLog({type:"joiningDiscordServer",text:inviteId});var _data$response,_data$response$guild,{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/invites/"+inviteId,method:"POST",dataType:"json",headers:{authorization:_classPrivateFieldGet(this,_auth).auth,origin:"https://discord.com",referer:"https://discord.com/invite/"+inviteId}});if("Success"!==result||200!==(null==data?void 0:data.status))return logStatus.error(result+`:${statusText}(${status})`),!1;logStatus.success();var guild=String(null===(_data$response=data.response)||void 0===_data$response||null===(_data$response$guild=_data$response.guild)||void 0===_data$response$guild?void 0:_data$response$guild.id);return guild&&(_classPrivateMethodGet(this,_setCache,_setCache2).call(this,inviteId,guild),this.tasks.servers=unique([...this.tasks.servers,inviteId])),!0}catch(error){return throwError_throwError(error,"Discord.joinServer"),!1}}async function _leaveServer2(inviteId){try{if(this.whiteList.servers.includes(inviteId))return scripts_echoLog({type:"whiteList",text:"Discord.leaveServer",id:inviteId}),!0;var guild=await _classPrivateMethodGet(this,_getGuild,_getGuild2).call(this,inviteId);if(!guild)return!1;const logStatus=scripts_echoLog({type:"leavingDiscordServer",text:guild});var{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/users/@me/guilds/"+guild,method:"DELETE",headers:{authorization:_classPrivateFieldGet(this,_auth).auth}});return"Success"===result&&204===(null==data?void 0:data.status)?(logStatus.success(),!0):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Discord.leaveServer"),!1}}async function _getGuild2(inviteId){try{const logStatus=scripts_echoLog({type:"gettingDiscordGuild",text:inviteId});var guild=_classPrivateFieldGet(this,_cache)[inviteId];if(guild)return logStatus.success(),guild;var _data$response2,_data$response2$guild,{result,statusText,status,data}=await tools_httpRequest({url:"https://discord.com/api/v9/invites/"+inviteId,responseType:"json",method:"GET"});if("Success"!==result||200!==(null==data?void 0:data.status))return logStatus.error(result+`:${statusText}(${status})`),!1;{const guild=null===(_data$response2=data.response)||void 0===_data$response2||null===(_data$response2$guild=_data$response2.guild)||void 0===_data$response2$guild?void 0:_data$response2$guild.id;return guild?(logStatus.success(),_classPrivateMethodGet(this,_setCache,_setCache2).call(this,inviteId,guild),guild):(logStatus.error(result+`:${statusText}(${status})`),!1)}}catch(error){return throwError_throwError(error,"Discord.getGuild"),!1}}function _setCache2(inviteId,guild){try{_classPrivateFieldGet(this,_cache)[inviteId]=guild,GM_setValue("discordCache",_classPrivateFieldGet(this,_cache))}catch(error){throwError_throwError(error,"Discord.setCache")}}const social_Discord=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),_classPrivateMethodInitSpec(this,_setCache),_classPrivateMethodInitSpec(this,_getGuild),_classPrivateMethodInitSpec(this,_leaveServer),_classPrivateMethodInitSpec(this,_joinServer),_classPrivateMethodInitSpec(this,_updateAuth),_classPrivateMethodInitSpec(this,_verifyAuth),Discord_defineProperty(this,"tasks",JSON.parse(defaultTasks)),Discord_defineProperty(this,"whiteList",{...JSON.parse(defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.discord}),_classPrivateFieldInitSpec(this,_auth,{writable:!0,value:GM_getValue("discordAuth")||{}}),_classPrivateFieldInitSpec(this,_cache,{writable:!0,value:GM_getValue("discordCache")||{}}),_classPrivateFieldInitSpec(this,_initialized,{writable:!0,value:!1})}async init(){try{if(!GM_getValue("dontRemindDiscordAgain"))if(!await external_Swal_default().fire({title:i18n("discordImportantNotice"),text:i18n("discordImportantNoticeText"),showCancelButton:!0,showDenyButton:!0,confirmButtonText:i18n("continue"),cancelButtonText:i18n("skipDiscordTask"),denyButtonText:i18n("continueAndDontRemindAgain")}).then(isDenied=>{var{isConfirmed,isDenied}=isDenied;return!!isConfirmed||!!isDenied&&(GM_setValue("dontRemindDiscordAgain",!0),!0)}))return _classPrivateFieldSet(this,_initialized,!1),"skip";return globalOptions.doTask.discord.servers||globalOptions.undoTask.discord.servers?!!_classPrivateFieldGet(this,_initialized)||(_classPrivateFieldGet(this,_auth).auth?await _classPrivateMethodGet(this,_verifyAuth,_verifyAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Discord")),_classPrivateFieldSet(this,_initialized,!0),!0):(GM_setValue("discordAuth",{auth:null}),await _classPrivateMethodGet(this,_updateAuth,_updateAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Discord")),_classPrivateFieldSet(this,_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Discord")),!1)):!!await _classPrivateMethodGet(this,_updateAuth,_updateAuth2).call(this)&&(_classPrivateFieldSet(this,_initialized,!0),!0)):(_classPrivateFieldSet(this,_initialized,!1),"skip")}catch(error){return throwError_throwError(error,"Discord.init"),!1}}async toggle(serverLinks){var{doTask=!0,serverLinks=[]}=serverLinks;try{if(!_classPrivateFieldGet(this,_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.discord.servers||!doTask&&!globalOptions.undoTask.discord.servers)scripts_echoLog({type:"globalOptionsSkip",text:"discord.servers"});else{var realServers=this.getRealParams("servers",serverLinks,doTask,_link$match=>{return null===(_link$match=_link$match.match(/invite\/(.+)/))||void 0===_link$match?void 0:_link$match[1]});if(0<realServers.length)for(const server of realServers)doTask?prom.push(_classPrivateMethodGet(this,_joinServer,_joinServer2).call(this,server)):prom.push(_classPrivateMethodGet(this,_leaveServer,_leaveServer2).call(this,server)),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Discord.toggleServers"),!1}}};function Instagram_classPrivateMethodInitSpec(obj,privateSet){Instagram_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Instagram_classPrivateFieldInitSpec(obj,privateMap,value){Instagram_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Instagram_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Instagram_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Instagram_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Instagram_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Instagram_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Instagram_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Instagram_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Instagram_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Instagram_defaultTasks=JSON.stringify({users:[]});var Instagram_cache=new WeakMap,Instagram_auth=new WeakMap,Instagram_initialized=new WeakMap,_getUserInfo=new WeakSet,_followUser=new WeakSet,_unfollowUser=new WeakSet,Instagram_setCache=new WeakSet;async function _getUserInfo2(){var name=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"instagram";try{const logStatus=scripts_echoLog({type:"instagram"===name?"verifyingInsAuth":"gettingInsUserId",text:name});var userId=Instagram_classPrivateFieldGet(this,Instagram_cache)[name];if(userId&&"instagram"!==name)return logStatus.success(),userId;const{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/${name}/`,method:"GET"});if("Success"!==result)return!1;if(null!==data&&void 0!==data&&data.finalUrl.includes("accounts/login"))return logStatus.error("Error:"+i18n("loginIns"),!0),!1;if(null!==data&&void 0!==data&&data.finalUrl.includes("www.instagram.com/challenge"))return logStatus.error("Error:"+i18n("insBanned")),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(result+`:${statusText}(${status})`),!1;var _data$responseText$ma,_data$responseText$ma2,_data$responseText$ma3,csrftoken=null===(_data$responseText$ma=data.responseText.match(/"csrf_token":"(.+?)"/))||void 0===_data$responseText$ma?void 0:_data$responseText$ma[1],hash=null===(_data$responseText$ma2=data.responseText.match(/"rollout_hash":"(.+?)"/))||void 0===_data$responseText$ma2?void 0:_data$responseText$ma2[1];if("instagram"===name)return!(!csrftoken||!hash)&&(Instagram_classPrivateFieldSet(this,Instagram_auth,{csrftoken:csrftoken,hash:hash}),!0);var id=null===(_data$responseText$ma3=data.responseText.match(/"profilePage_([\d]+?)"/))||void 0===_data$responseText$ma3?void 0:_data$responseText$ma3[1];return id?(Instagram_classPrivateMethodGet(this,Instagram_setCache,Instagram_setCache2).call(this,name,id),logStatus.success(),id):(logStatus.error("Error: Get ins data error!"),!1)}catch(error){return throwError_throwError(error,"Instagram.getUserInfo"),!1}}async function _followUser2(name){try{var id=await Instagram_classPrivateMethodGet(this,_getUserInfo,_getUserInfo2).call(this,name);if(!id)return!1;const logStatus=scripts_echoLog({type:"followingIns",text:name});var _data$response,_data$response2,{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/web/friendships/${id}/follow/`,method:"POST",dataType:"json",headers:{"x-csrftoken":Instagram_classPrivateFieldGet(this,Instagram_auth).csrftoken,origin:"https://www.instagram.com",referer:`https://www.instagram.com/${name}/`,"content-type":"application/x-www-form-urlencoded","sec-fetch-site":"same-origin","x-instagram-ajax":Instagram_classPrivateFieldGet(this,Instagram_auth).hash}});return"Success"===result?200===(null==data?void 0:data.status)&&"following"===(null===(_data$response=data.response)||void 0===_data$response?void 0:_data$response.result)?(logStatus.success(),this.tasks.users=unique([...this.tasks.users,name]),!0):(logStatus.error("Error:"+((null==data||null===(_data$response2=data.response)||void 0===_data$response2?void 0:_data$response2.feedback_message)||`${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`)),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Instagram.followUser"),!1}}async function _unfollowUser2(name){try{if(this.whiteList.users.includes(name))return scripts_echoLog({type:"whiteList",text:"Instagram.unfollowUser",id:name}),!0;var id=await Instagram_classPrivateMethodGet(this,_getUserInfo,_getUserInfo2).call(this,name);if(!id)return!1;const logStatus=scripts_echoLog({type:"unfollowingIns",text:name});var _data$response3,{result,statusText,status,data}=await tools_httpRequest({url:`https://www.instagram.com/web/friendships/${id}/unfollow/`,method:"POST",dataType:"json",headers:{"x-csrftoken":Instagram_classPrivateFieldGet(this,Instagram_auth).csrftoken,origin:"https://www.instagram.com",referer:`https://www.instagram.com/${name}/`,"content-type":"application/x-www-form-urlencoded","sec-fetch-site":"same-origin","x-instagram-ajax":Instagram_classPrivateFieldGet(this,Instagram_auth).hash}});return"Success"===result?200===(null==data?void 0:data.status)&&"ok"===(null===(_data$response3=data.response)||void 0===_data$response3?void 0:_data$response3.status)?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Instagram.unfollowUser"),!1}}function Instagram_setCache2(name,id){try{Instagram_classPrivateFieldGet(this,Instagram_cache)[name]=id,GM_setValue("instagramCache",Instagram_classPrivateFieldGet(this,Instagram_cache))}catch(error){throwError_throwError(error,"Instagram.setCache")}}const social_Instagram=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Instagram_classPrivateMethodInitSpec(this,Instagram_setCache),Instagram_classPrivateMethodInitSpec(this,_unfollowUser),Instagram_classPrivateMethodInitSpec(this,_followUser),Instagram_classPrivateMethodInitSpec(this,_getUserInfo),Instagram_defineProperty(this,"tasks",JSON.parse(Instagram_defaultTasks)),Instagram_defineProperty(this,"whiteList",{...JSON.parse(Instagram_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.instagram}),Instagram_classPrivateFieldInitSpec(this,Instagram_cache,{writable:!0,value:GM_getValue("instagramCache")||{}}),Instagram_classPrivateFieldInitSpec(this,Instagram_auth,{writable:!0,value:{}}),Instagram_classPrivateFieldInitSpec(this,Instagram_initialized,{writable:!0,value:!1})}async init(){try{return Instagram_classPrivateFieldGet(this,Instagram_initialized)?!0:await Instagram_classPrivateMethodGet(this,_getUserInfo,_getUserInfo2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Instagram")),Instagram_classPrivateFieldSet(this,Instagram_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Instagram")),!1)}catch(error){return throwError_throwError(error,"Instagram.init"),!1}}async toggle(userLinks){var{doTask=!0,userLinks=[]}=userLinks;try{if(!Instagram_classPrivateFieldGet(this,Instagram_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.instagram.users||!doTask&&!globalOptions.undoTask.instagram.users)scripts_echoLog({type:"globalOptionsSkip",text:"instagram.users"});else{var realUsers=this.getRealParams("users",userLinks,doTask,_link$match=>{return null===(_link$match=_link$match.match(/https:\/\/www\.instagram\.com\/(.+)?\//))||void 0===_link$match?void 0:_link$match[1]});if(0<realUsers.length)for(const username of realUsers)doTask?prom.push(Instagram_classPrivateMethodGet(this,_followUser,_followUser2).call(this,username)):prom.push(Instagram_classPrivateMethodGet(this,_unfollowUser,_unfollowUser2).call(this,username)),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Instagram.toggleUsers"),!1}}};function Reddit_classPrivateMethodInitSpec(obj,privateSet){Reddit_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Reddit_classPrivateFieldInitSpec(obj,privateMap,value){Reddit_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Reddit_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Reddit_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Reddit_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Reddit_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Reddit_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Reddit_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Reddit_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Reddit_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Reddit_defaultTasks=JSON.stringify({reddits:[]});var Reddit_auth=new WeakMap,Reddit_initialized=new WeakMap,_useBeta=new WeakSet,Reddit_updateAuth=new WeakSet;async function _useBeta2(){try{const logStatus=scripts_echoLog({text:i18n("changingRedditVersion")});return GM_setValue("redditAuth",null),await new Promise(resolve=>{const newTab=GM_openInTab("https://www.reddit.com/#auth",{active:!0,insert:!0,setParent:!0});newTab.onclose=async()=>{logStatus.success(),resolve(await Reddit_classPrivateMethodGet(this,Reddit_updateAuth,Reddit_updateAuth2).call(this,!0))}})}catch(error){return throwError_throwError(error,"Reddit.useBeta"),!1}}async function Reddit_updateAuth2(){var _data$responseText$ma,beta=0<arguments.length&&void 0!==arguments[0]&&arguments[0];try{const logStatus=scripts_echoLog({text:i18n("updatingAuth","Reddit")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://www.reddit.com/",method:"GET",nochche:!0,headers:{"Cache-Control":"no-cache"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(null!==data&&void 0!==data&&data.responseText.includes("www.reddit.com/login/"))return logStatus.error("Error:"+i18n("loginReddit"),!0),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;if(data.responseText.includes("redesign-beta-optin-btn")&&!beta)return await Reddit_classPrivateMethodGet(this,_useBeta,_useBeta2).call(this);var accessToken=null===(_data$responseText$ma=data.responseText.match(/"accessToken":"(.*?)","expires":"(.*?)"/))||void 0===_data$responseText$ma?void 0:_data$responseText$ma[1];return accessToken?(Reddit_classPrivateFieldSet(this,Reddit_auth,{token:accessToken}),logStatus.success(),!0):(logStatus.error('Error: Parameter "accessToken" not found!'),!1)}catch(error){return throwError_throwError(error,"Reddit.updateAuth"),!1}}const social_Reddit=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Reddit_classPrivateMethodInitSpec(this,Reddit_updateAuth),Reddit_classPrivateMethodInitSpec(this,_useBeta),Reddit_defineProperty(this,"tasks",JSON.parse(Reddit_defaultTasks)),Reddit_defineProperty(this,"whiteList",{...JSON.parse(Reddit_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.reddit}),Reddit_classPrivateFieldInitSpec(this,Reddit_auth,{writable:!0,value:void 0}),Reddit_classPrivateFieldInitSpec(this,Reddit_initialized,{writable:!0,value:!1})}async init(){try{return Reddit_classPrivateFieldGet(this,Reddit_initialized)?!0:await Reddit_classPrivateMethodGet(this,Reddit_updateAuth,Reddit_updateAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Reddit")),Reddit_classPrivateFieldSet(this,Reddit_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Reddit")),!1)}catch(error){return throwError_throwError(error,"Reddit.init"),!1}}async toggleTask(doTask){var{name,doTask=!0}=doTask;try{if(!doTask&&this.whiteList.reddits.includes(name))return scripts_echoLog({type:"whiteList",text:"Reddit.undoTask",id:name}),!0;let type=doTask?"joiningReddit":"leavingReddit";/^u_/.test(name)&&(type=doTask?"followingRedditUser":"unfollowingRedditUser");const logStatus=scripts_echoLog({type:type,text:name});var{result,statusText,status,data}=await tools_httpRequest({url:"https://oauth.reddit.com/api/subscribe?redditWebClient=desktop2x&app=desktop2x-client-production&raw_json=1&gilding_detail=1",method:"POST",headers:{authorization:"Bearer "+Reddit_classPrivateFieldGet(this,Reddit_auth).token,"content-type":"application/x-www-form-urlencoded"},data:$.param({action:doTask?"sub":"unsub",sr_name:name,api_type:"json"})});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),doTask&&(this.tasks.reddits=unique([...this.tasks.reddits,name])),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Reddit.toggleTask"),!1}}async toggle(redditLinks){var{doTask=!0,redditLinks=[]}=redditLinks;try{if(!Reddit_classPrivateFieldGet(this,Reddit_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.reddit.reddits||!doTask&&!globalOptions.undoTask.reddit.reddits)scripts_echoLog({type:"globalOptionsSkip",text:"reddit.reddits"});else{var realReddits=this.getRealParams("reddits",redditLinks,doTask,userName=>{var name=null===(name=userName.match(/https?:\/\/www\.reddit\.com\/r\/([^/]*)/))||void 0===name?void 0:name[1],userName=null===(userName=userName.match(/https?:\/\/www\.reddit\.com\/user\/([^/]*)/))||void 0===userName?void 0:userName[1];return userName?name||userName:name});if(0<realReddits.length)for(const name of realReddits)prom.push(this.toggleTask({name:name,doTask:doTask})),await delay(1e3)}return await Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Reddit.toggle"),!1}}};function Twitch_classPrivateMethodInitSpec(obj,privateSet){Twitch_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Twitch_classPrivateFieldInitSpec(obj,privateMap,value){Twitch_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Twitch_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Twitch_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Twitch_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Twitch_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Twitch_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Twitch_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Twitch_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Twitch_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Twitch_defaultTasks=JSON.stringify({channels:[]});var Twitch_auth=new WeakMap,Twitch_cache=new WeakMap,Twitch_initialized=new WeakMap,_integrityToken=new WeakMap,Twitch_verifyAuth=new WeakSet,_integrity=new WeakSet,Twitch_updateAuth=new WeakSet,_toggleChannel=new WeakSet,_getChannelId=new WeakSet,Twitch_setCache=new WeakSet;async function Twitch_verifyAuth2(isFirst){try{const logStatus=scripts_echoLog({text:i18n("verifyingAuth","Twitch")});var _data$response,_data$response$,_data$response$$data,{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",dataType:"json",headers:{Authorization:"OAuth "+Twitch_classPrivateFieldGet(this,Twitch_auth).authToken,"Client-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientId},data:'[{"operationName":"FrontPageNew_User","variables":{"limit":1},"extensions":{"persistedQuery":{"version":1,"sha256Hash":"64bd07a2cbaca80699d62636d966cf6395a5d14a1f0a14282067dcb28b13eb11"}}}]'});return"Success"===result?200===(null==data?void 0:data.status)&&null!==(_data$response=data.response)&&void 0!==_data$response&&null!==(_data$response$=_data$response[0])&&void 0!==_data$response$&&null!==(_data$response$$data=_data$response$.data)&&void 0!==_data$response$$data&&_data$response$$data.currentUser?(await Twitch_classPrivateMethodGet(this,_integrity,_integrity2).call(this,isFirst),logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Twitch.verifyAuth"),!1}}async function _integrity2(){var isFirst=!(0<arguments.length&&void 0!==arguments[0])||arguments[0],ct=1<arguments.length&&void 0!==arguments[1]?arguments[1]:"";try{const logStatus=scripts_echoLog({text:i18n("checkingTwitchIntegrity")});if(isFirst&&(!Twitch_classPrivateFieldGet(this,Twitch_auth).authToken||!Twitch_classPrivateFieldGet(this,Twitch_auth).clientId||!Twitch_classPrivateFieldGet(this,Twitch_auth).clientVersion||!Twitch_classPrivateFieldGet(this,Twitch_auth).deviceId||!Twitch_classPrivateFieldGet(this,Twitch_auth).clientSessionId))return await Twitch_classPrivateMethodGet(this,Twitch_updateAuth,Twitch_updateAuth2).call(this,!1);var _data$responseHeaders,_data$response2,{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/integrity",method:"POST",dataType:"json",anonymous:!0,headers:{Origin:"https://www.twitch.tv",Referer:"https://www.twitch.tv/",Authorization:"OAuth "+Twitch_classPrivateFieldGet(this,Twitch_auth).authToken,"Client-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientId,"Client-Version":Twitch_classPrivateFieldGet(this,Twitch_auth).clientVersion,"X-Device-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).deviceId,"Client-Session-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientSessionId,"x-kpsdk-ct":ct}});return"Success"===result?!ct&&null!=data&&null!==(_data$responseHeaders=data.responseHeaders)&&void 0!==_data$responseHeaders&&_data$responseHeaders["x-kpsdk-ct"]?await Twitch_classPrivateMethodGet(this,_integrity,_integrity2).call(this,isFirst,data.responseHeaders["x-kpsdk-ct"]):200===(null==data?void 0:data.status)&&null!==(_data$response2=data.response)&&void 0!==_data$response2&&_data$response2.token?(Twitch_classPrivateFieldSet(this,_integrityToken,data.response.token),logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Twitch.integrity"),!1}}async function Twitch_updateAuth2(){let isFirst=!(0<arguments.length&&void 0!==arguments[0])||arguments[0];try{const logStatus=scripts_echoLog({text:i18n("updatingAuth","Twitch")});return await new Promise(resolve=>{const newTab=GM_openInTab("https://www.twitch.tv/#auth",{active:!0,insert:!0,setParent:!0});newTab.onclose=async()=>{var auth=GM_getValue("twitchAuth");auth?(Twitch_classPrivateFieldSet(this,Twitch_auth,auth),logStatus.success(),resolve(await Twitch_classPrivateMethodGet(this,Twitch_verifyAuth,Twitch_verifyAuth2).call(this,isFirst))):(logStatus.error("Error: Update twitch auth failed!"),resolve(!1))}})}catch(error){return throwError_throwError(error,"Twitch.updateAuth"),!1}}async function _toggleChannel2(doTask){var{name,doTask=!0}=doTask;try{if(!doTask&&this.whiteList.channels.includes(name))return scripts_echoLog({type:"whiteList",text:"Twitch.unfollowChannel",id:name}),!0;var channelId=await Twitch_classPrivateMethodGet(this,_getChannelId,_getChannelId2).call(this,name);if(!channelId)return!1;const logStatus=scripts_echoLog({type:`${doTask?"":"un"}followingTwitchChannel`,text:name});var _data$response3,_data$response4,_data$response4$0$err,_data$response4$0$err2,followData='[{"operationName":"FollowButton_FollowUser","variables":{"input":{"disableNotifications":false,"targetID":"'+channelId+'"}},"extensions":{"persistedQuery":{"version":1,"sha256Hash":"800e7346bdf7e5278a3c1d3f21b2b56e2639928f86815677a7126b093b2fdd08"}}}]',unfollowData=`[{"operationName":"FollowButton_UnfollowUser","variables":{"input":{"targetID":"${channelId}"}},`+'"extensions":{"persistedQuery":{"version":1,"sha256Hash":"f7dae976ebf41c755ae2d758546bfd176b4eeb856656098bb40e0a672ca0d880"}}}]',{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",dataType:"json",anonymous:!0,headers:{Origin:"https://www.twitch.tv",Referer:"https://www.twitch.tv/",Authorization:"OAuth "+Twitch_classPrivateFieldGet(this,Twitch_auth).authToken,"Client-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientId,"Client-Version":Twitch_classPrivateFieldGet(this,Twitch_auth).clientVersion,"X-Device-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).deviceId,"Client-Session-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientSessionId,"Client-Integrity":Twitch_classPrivateFieldGet(this,_integrityToken)},data:doTask?followData:unfollowData});return"Success"===result?200===(null==data?void 0:data.status)&&null!==(_data$response3=data.response)&&void 0!==_data$response3&&_data$response3[0]&&!data.response[0].errors?(logStatus.success(),doTask&&(this.tasks.channels=unique([...this.tasks.channels,name])),!0):(logStatus.error("Error:"+((null==data||null===(_data$response4=data.response)||void 0===_data$response4||null===(_data$response4$0$err=_data$response4[0].errors)||void 0===_data$response4$0$err||null===(_data$response4$0$err2=_data$response4$0$err[0])||void 0===_data$response4$0$err2?void 0:_data$response4$0$err2.message)||`${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`)),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Twitch.toggleChannel"),!1}}async function _getChannelId2(name){try{const logStatus=scripts_echoLog({type:"gettingTwitchChannelId",text:name});var channelId=Twitch_classPrivateFieldGet(this,Twitch_cache)[name];if(channelId)return logStatus.success(),channelId;var _data$response5,_data$response5$,_data$response5$$data,_data$response5$$data2,{result,statusText,status,data}=await tools_httpRequest({url:"https://gql.twitch.tv/gql",method:"POST",headers:{Authorization:"OAuth "+Twitch_classPrivateFieldGet(this,Twitch_auth).authToken,"Client-Id":Twitch_classPrivateFieldGet(this,Twitch_auth).clientId},responseType:"json",data:`[{"operationName":"ActiveWatchParty","variables":{"channelLogin":"${name}"},`+'"extensions":{"persistedQuery":{"version":1,"sha256Hash":"4a8156c97b19e3a36e081cf6d6ddb5dbf9f9b02ae60e4d2ff26ed70aebc80a30"}}}]'});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null==data?void 0:data.status))return logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1;{const channelId=null===(_data$response5=data.response)||void 0===_data$response5||null===(_data$response5$=_data$response5[0])||void 0===_data$response5$||null===(_data$response5$$data=_data$response5$.data)||void 0===_data$response5$$data||null===(_data$response5$$data2=_data$response5$$data.user)||void 0===_data$response5$$data2?void 0:_data$response5$$data2.id;return channelId?(Twitch_classPrivateMethodGet(this,Twitch_setCache,Twitch_setCache2).call(this,name,String(channelId)),logStatus.success(),channelId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Twitch.getChannelId"),!1}}function Twitch_setCache2(name,id){try{Twitch_classPrivateFieldGet(this,Twitch_cache)[name]=id,GM_setValue("twitchCache",Twitch_classPrivateFieldGet(this,Twitch_cache))}catch(error){throwError_throwError(error,"Twitch.setCache")}}const social_Twitch=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Twitch_classPrivateMethodInitSpec(this,Twitch_setCache),Twitch_classPrivateMethodInitSpec(this,_getChannelId),Twitch_classPrivateMethodInitSpec(this,_toggleChannel),Twitch_classPrivateMethodInitSpec(this,Twitch_updateAuth),Twitch_classPrivateMethodInitSpec(this,_integrity),Twitch_classPrivateMethodInitSpec(this,Twitch_verifyAuth),Twitch_defineProperty(this,"tasks",JSON.parse(Twitch_defaultTasks)),Twitch_defineProperty(this,"whiteList",{...JSON.parse(Twitch_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.twitch}),Twitch_classPrivateFieldInitSpec(this,Twitch_auth,{writable:!0,value:GM_getValue("twitchAuth")||{}}),Twitch_classPrivateFieldInitSpec(this,Twitch_cache,{writable:!0,value:GM_getValue("twitchCache")||{}}),Twitch_classPrivateFieldInitSpec(this,Twitch_initialized,{writable:!0,value:!1}),Twitch_classPrivateFieldInitSpec(this,_integrityToken,{writable:!0,value:void 0})}async init(){try{return Twitch_classPrivateFieldGet(this,Twitch_initialized)?!0:Twitch_classPrivateFieldGet(this,Twitch_auth).authToken&&Twitch_classPrivateFieldGet(this,Twitch_auth).clientId&&Twitch_classPrivateFieldGet(this,Twitch_auth).clientVersion&&Twitch_classPrivateFieldGet(this,Twitch_auth).deviceId&&Twitch_classPrivateFieldGet(this,Twitch_auth).clientSessionId?await Twitch_classPrivateMethodGet(this,Twitch_verifyAuth,Twitch_verifyAuth2).call(this,!0)?(scripts_echoLog({}).success(i18n("initSuccess","Twitch")),Twitch_classPrivateFieldSet(this,Twitch_initialized,!0),!0):(GM_setValue("twitchAuth",null),await Twitch_classPrivateMethodGet(this,Twitch_updateAuth,Twitch_updateAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Twitch")),Twitch_classPrivateFieldSet(this,Twitch_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Twitch")),!1)):!!await Twitch_classPrivateMethodGet(this,Twitch_updateAuth,Twitch_updateAuth2).call(this)&&(Twitch_classPrivateFieldSet(this,Twitch_initialized,!0),!0)}catch(error){return throwError_throwError(error,"Twitch.init"),!1}}async toggle(channelLinks){var{doTask=!0,channelLinks=[]}=channelLinks;try{if(!Twitch_classPrivateFieldGet(this,Twitch_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.twitch.channels||!doTask&&!globalOptions.undoTask.twitch.channels)scripts_echoLog({type:"globalOptionsSkip",text:"twitch.channels"});else{var realChannels=this.getRealParams("channels",channelLinks,doTask,_link$match=>{return null===(_link$match=_link$match.match(/https:\/\/(www\.)?twitch\.tv\/(.+)/))||void 0===_link$match?void 0:_link$match[2]});if(0<realChannels.length)for(const channel of realChannels)prom.push(Twitch_classPrivateMethodGet(this,_toggleChannel,_toggleChannel2).call(this,{name:channel,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Twitch.toggle"),!1}}};function Vk_classPrivateMethodInitSpec(obj,privateSet){Vk_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Vk_classPrivateFieldInitSpec(obj,privateMap,value){Vk_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Vk_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Vk_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Vk_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Vk_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Vk_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Vk_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Vk_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Vk_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Vk_defaultTasks=JSON.stringify({names:[]});var _username=new WeakMap,Vk_cache=new WeakMap,Vk_initialized=new WeakMap,Vk_verifyAuth=new WeakSet,_toggleGroup=new WeakSet,_togglePublic=new WeakSet,_sendWall=new WeakSet,_deleteWall=new WeakSet,_getId=new WeakSet,_toggleVk=new WeakSet,Vk_setCache=new WeakSet;async function Vk_verifyAuth2(){try{const logStatus=scripts_echoLog({text:i18n("verifyAuth","Vk")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/im",method:"GET"});var _data$responseText$ma;return"Success"===result?null!==data&&void 0!==data&&data.finalUrl.includes("vk.com/login")?(logStatus.error("Error:"+i18n("loginVk"),!0),!1):200===(null===data||void 0===data?void 0:data.status)?(Vk_classPrivateFieldSet(this,_username,(null===(_data$responseText$ma=data.responseText.match(/TopNavBtn__profileLink" href="\/(.*?)"/))||void 0===_data$responseText$ma?void 0:_data$responseText$ma[1])||""),logStatus.success(),!0):(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Vk.verifyAuth"),!1}}async function _toggleGroup2(name,dataParam){var doTask=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];try{const logStatus=scripts_echoLog({type:doTask?"joiningVkGroup":"leavingVkGroup",text:name});if("enter"===dataParam.groupAct&&!doTask||"leave"===dataParam.groupAct&&doTask)return logStatus.success(),!0;const reqData={act:doTask?"enter":"leave",al:1,gid:dataParam.groupId,hash:dataParam.groupHash};doTask&&(reqData.context="_");var{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/al_groups.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param(reqData)});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),doTask&&(this.tasks.names=unique([...this.tasks.names,name])),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Vk.toggleGroup"),!1}}async function _togglePublic2(name,dataParam){var doTask=!(2<arguments.length&&void 0!==arguments[2])||arguments[2];try{const logStatus=scripts_echoLog({type:doTask?"joiningVkPublic":"leavingVkPublic",text:name});if(dataParam.publicJoined&&doTask||!dataParam.publicJoined&&!doTask)return logStatus.success(),!0;var{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/al_public.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:doTask?"a_enter":"a_leave",al:1,pid:dataParam.publicPid,hash:dataParam.publicHash})});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),doTask&&(this.tasks.names=unique([...this.tasks.names,name])),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Vk.togglePublic"),!1}}async function _sendWall2(name){try{const logStatus=scripts_echoLog({type:"sendingVkWall",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/like.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:"publish_box",al:1,object:name})});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma2,hash=null===(_data$responseText$ma2=data.responseText.match(/shHash:[\s]*'(.*?)'/))||void 0===_data$responseText$ma2?void 0:_data$responseText$ma2[1];if(hash){var{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://vk.com/like.php",method:"POST",headers:{origin:"https://vk.com",referer:"https://vk.com/"+name,"content-type":"application/x-www-form-urlencoded"},data:$.param({Message:"",act:"a_do_publish",al:1,close_comments:0,friends_only:0,from:"box",hash:hash,list:"",mark_as_ads:0,mute_notifications:0,object:name,ret_data:1,to:0})});if("Success"!==resultR)return logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1;if(200===(null==dataR?void 0:dataR.status)){var _dataR$responseText,_jsonData$payload,_jsonData$payload$,_jsonData$payload$$,_jsonData$payload2,_jsonData$payload2$,_jsonData$payload2$$,_jsonData$payload3,_jsonData$payload3$,_jsonData$payload3$$,jsonData=JSON.parse((null===(_dataR$responseText=dataR.responseText)||void 0===_dataR$responseText?void 0:_dataR$responseText.replace("\x3c!--",""))||"{}");if(!0===(null==jsonData||null===(_jsonData$payload=jsonData.payload)||void 0===_jsonData$payload||null===(_jsonData$payload$=_jsonData$payload[1])||void 0===_jsonData$payload$||null===(_jsonData$payload$$=_jsonData$payload$[1])||void 0===_jsonData$payload$$?void 0:_jsonData$payload$$.share_my)){logStatus.success();var postId=String(null==jsonData||null===(_jsonData$payload2=jsonData.payload)||void 0===_jsonData$payload2||null===(_jsonData$payload2$=_jsonData$payload2[1])||void 0===_jsonData$payload2$||null===(_jsonData$payload2$$=_jsonData$payload2$[1])||void 0===_jsonData$payload2$$?void 0:_jsonData$payload2$$.post_id),ownerId=String(null==jsonData||null===(_jsonData$payload3=jsonData.payload)||void 0===_jsonData$payload3||null===(_jsonData$payload3$=_jsonData$payload3[1])||void 0===_jsonData$payload3$||null===(_jsonData$payload3$$=_jsonData$payload3$[1])||void 0===_jsonData$payload3$$?void 0:_jsonData$payload3$$.owner_id);return postId&&ownerId&&Vk_classPrivateMethodGet(this,Vk_setCache,Vk_setCache2).call(this,name,ownerId+"_"+postId),this.tasks.names=unique([...this.tasks.names,name]),!0}}return logStatus.error(`Error:${null==dataR?void 0:dataR.statusText}(${null==dataR?void 0:dataR.status})`),!1}return logStatus.error('Error: Get "hash" failed'),!1}catch(error){return throwError_throwError(error,"Vk.sendWall"),!1}}async function _deleteWall2(name,dataParams){try{const logStatus=scripts_echoLog({type:"deletingVkWall",text:name});var{result,statusText,status,data}=await tools_httpRequest({url:"https://vk.com/al_wall.php?act=delete",method:"POST",headers:{origin:"https://vk.com",referer:`https://vk.com/${Vk_classPrivateFieldGet(this,_username)}?w=wall${Vk_classPrivateFieldGet(this,Vk_cache)[name]}%2Fall`,"content-type":"application/x-www-form-urlencoded"},data:$.param({act:"delete",al:1,confirm:0,from:"wkview",hash:dataParams.wallHash,post:Vk_classPrivateFieldGet(this,Vk_cache)[name]})});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null==data?void 0:data.status))return logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1;var _data$responseText,_jsonData$payload4,_jsonData$payload4$,jsonData=JSON.parse((null===(_data$responseText=data.responseText)||void 0===_data$responseText?void 0:_data$responseText.replace("\x3c!--",""))||"{}");return null!=jsonData&&null!==(_jsonData$payload4=jsonData.payload)&&void 0!==_jsonData$payload4&&null!==(_jsonData$payload4$=_jsonData$payload4[1])&&void 0!==_jsonData$payload4$&&_jsonData$payload4$[1]?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1)}catch(error){return throwError_throwError(error,"Vk.deleteWall"),!1}}async function _getId2(name,doTask){try{let url="https://vk.com/"+name;if(/^wall-/.test(name)){if(doTask)return{type:"sendWall"};if(!Vk_classPrivateFieldGet(this,Vk_cache)[name])return{type:"unSupport"};url=`https://vk.com/${Vk_classPrivateFieldGet(this,_username)}?w=wall`+Vk_classPrivateFieldGet(this,Vk_cache)[name]}const logStatus=scripts_echoLog({type:"gettingVkId",text:name}),{result,statusText,status,data}=await tools_httpRequest({url:url,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma3,_data$responseText$ma4,[,groupAct,groupId,,groupHash]=data.responseText.match(/Groups.(enter|leave)\(.*?,.*?([\d]+?), (&#39;|')(.*?)(&#39;|')/)||[],publicHash=null===(_data$responseText$ma3=data.responseText.match(/"enterHash":"(.*?)"/))||void 0===_data$responseText$ma3?void 0:_data$responseText$ma3[1],publicPid=null===(_data$responseText$ma4=data.responseText.match(/"public_id":([\d]+?),/))||void 0===_data$responseText$ma4?void 0:_data$responseText$ma4[1],publicJoined=!data.responseText.includes("Public.subscribe");if(groupAct&&groupId&&groupHash)return logStatus.success(),{groupAct:groupAct,groupId:groupId,groupHash:groupHash,type:"group"};if(publicHash&&publicPid)return logStatus.success(),{publicHash:publicHash,publicPid:publicPid,publicJoined:publicJoined,type:"public"};if(data.responseText.includes("wall.deletePost")&&!doTask){var _data$responseText$ma5,wallHash=null===(_data$responseText$ma5=data.responseText.match(/wall\.deletePost\(this, '.*?', '(.*?)'\)/))||void 0===_data$responseText$ma5?void 0:_data$responseText$ma5[1];if(wallHash)return logStatus.success(),{type:"deleteWall",wallHash:wallHash}}else if(name.includes("wall")&&doTask)return logStatus.success(),{type:"sendWall"};return logStatus.error("Error: Parameters not found!"),!1}catch(error){return throwError_throwError(error,"Vk.getId"),!1}}async function _toggleVk2(_ref2){let{name,doTask=!0}=_ref2;try{if(!doTask&&this.whiteList.names.includes(name))return scripts_echoLog({type:"whiteList",text:"Vk.undoTask",id:name}),!0;var formatName=name.replace(/\/$/,""),data=await Vk_classPrivateMethodGet(this,_getId,_getId2).call(this,formatName,doTask);if(!data)return!1;switch(data.type){case"group":return await Vk_classPrivateMethodGet(this,_toggleGroup,_toggleGroup2).call(this,formatName,data,doTask);case"public":return await Vk_classPrivateMethodGet(this,_togglePublic,_togglePublic2).call(this,formatName,data,doTask);case"sendWall":return!doTask||await Vk_classPrivateMethodGet(this,_sendWall,_sendWall2).call(this,formatName);case"deleteWall":return!!doTask||await Vk_classPrivateMethodGet(this,_deleteWall,_deleteWall2).call(this,formatName,data);default:return!1}}catch(error){return throwError_throwError(error,"Vk.toggleVk"),!1}}function Vk_setCache2(name,postId){try{Vk_classPrivateFieldGet(this,Vk_cache)[name]=postId,GM_setValue("vkCache",Vk_classPrivateFieldGet(this,Vk_cache))}catch(error){throwError_throwError(error,"Vk.setCache")}}const social_Vk=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Vk_classPrivateMethodInitSpec(this,Vk_setCache),Vk_classPrivateMethodInitSpec(this,_toggleVk),Vk_classPrivateMethodInitSpec(this,_getId),Vk_classPrivateMethodInitSpec(this,_deleteWall),Vk_classPrivateMethodInitSpec(this,_sendWall),Vk_classPrivateMethodInitSpec(this,_togglePublic),Vk_classPrivateMethodInitSpec(this,_toggleGroup),Vk_classPrivateMethodInitSpec(this,Vk_verifyAuth),Vk_defineProperty(this,"tasks",JSON.parse(Vk_defaultTasks)),Vk_defineProperty(this,"whiteList",{...JSON.parse(Vk_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.vk}),Vk_classPrivateFieldInitSpec(this,_username,{writable:!0,value:""}),Vk_classPrivateFieldInitSpec(this,Vk_cache,{writable:!0,value:GM_getValue("vkCache")||{}}),Vk_classPrivateFieldInitSpec(this,Vk_initialized,{writable:!0,value:!1})}async init(){try{return Vk_classPrivateFieldGet(this,Vk_initialized)?!0:await Vk_classPrivateMethodGet(this,Vk_verifyAuth,Vk_verifyAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Vk")),Vk_classPrivateFieldSet(this,Vk_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Vk")),!1)}catch(error){return throwError_throwError(error,"Vk.init"),!1}}async toggle(nameLinks){var{doTask=!0,nameLinks=[]}=nameLinks;try{if(!Vk_classPrivateFieldGet(this,Vk_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.vk.names||!doTask&&!globalOptions.undoTask.vk.names)scripts_echoLog({type:"globalOptionsSkip",text:"vk.names"});else{var realNames=this.getRealParams("names",nameLinks,doTask,_link$match=>{return null===(_link$match=_link$match.match(/https:\/\/vk\.com\/([^/]+)/))||void 0===_link$match?void 0:_link$match[1]});if(0<realNames.length)for(const name of realNames)prom.push(Vk_classPrivateMethodGet(this,_toggleVk,_toggleVk2).call(this,{name:name,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Vk.toggle"),!1}}};function Youtube_classPrivateMethodInitSpec(obj,privateSet){Youtube_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Youtube_classPrivateFieldInitSpec(obj,privateMap,value){Youtube_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Youtube_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Youtube_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Youtube_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Youtube_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Youtube_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Youtube_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Youtube_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Youtube_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Youtube_defaultTasks=JSON.stringify({channels:[],likes:[]}),getInfo=async function(link,type){try{const logStatus=scripts_echoLog({text:i18n("gettingYtbToken")}),{result,statusText,status,data}=await tools_httpRequest({url:link,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),{};if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),{};{var _data$responseText$ma,_ref;if(data.responseText.includes("accounts.google.com/ServiceLogin?service=youtube"))return logStatus.error("Error:"+i18n("loginYtb"),!0),{needLogin:!0};var apiKey=null===(_data$responseText$ma=data.responseText.match(/"INNERTUBE_API_KEY":"(.*?)"/))||void 0===_data$responseText$ma?void 0:_data$responseText$ma[1],context=(null===(_ref=data.responseText.match(/\(\{"INNERTUBE_CONTEXT":([\w\W]*?)\}\)/)||data.responseText.match(/"INNERTUBE_CONTEXT":([\w\W]*?\}),"INNERTUBE/))||void 0===_ref?void 0:_ref[1])||"{}";const{client,request}=JSON.parse(context);if(apiKey&&client&&request){if(client.hl="en","channel"===type){var _data$responseText$ma2,channelId=null===(_data$responseText$ma2=data.responseText.match(/<meta itemprop="channelId" content="(.+?)">/))||void 0===_data$responseText$ma2?void 0:_data$responseText$ma2[1];return channelId?(logStatus.success(),{params:{apiKey:apiKey,client:client,request:request,channelId:channelId}}):(logStatus.error('Error: Get "channelId" failed!'),{})}if("likeVideo"!==type)return logStatus.error("Error: Unknown type"),{};var _data$responseText$ma3,_data$responseText$ma4,videoId=null===(_data$responseText$ma3=data.responseText.match(/<link rel="shortlinkUrl" href="https:\/\/youtu\.be\/(.*?)">/))||void 0===_data$responseText$ma3?void 0:_data$responseText$ma3[1],likeParams=null===(_data$responseText$ma4=data.responseText.match(/"likeParams":"(.*?)"/))||void 0===_data$responseText$ma4?void 0:_data$responseText$ma4[1];return videoId?(logStatus.success(),{params:{apiKey:apiKey,client:client,request:request,videoId:videoId,likeParams:likeParams}}):(logStatus.error('Error: Get "videoId" failed!'),{})}return logStatus.error('Error: Parameter "apiKey" not found!'),{}}}catch(error){return throwError_throwError(error,"Youtube.getInfo"),{}}};var Youtube_auth=new WeakMap,Youtube_initialized=new WeakMap,_verifyChannel=new WeakMap,Youtube_verifyAuth=new WeakSet,Youtube_updateAuth=new WeakSet,_getInfo=new WeakSet,Youtube_toggleChannel=new WeakSet,_toggleLikeVideo=new WeakSet;class Youtube extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Youtube_classPrivateMethodInitSpec(this,_toggleLikeVideo),Youtube_classPrivateMethodInitSpec(this,Youtube_toggleChannel),Youtube_classPrivateMethodInitSpec(this,_getInfo),Youtube_classPrivateMethodInitSpec(this,Youtube_updateAuth),Youtube_classPrivateMethodInitSpec(this,Youtube_verifyAuth),Youtube_defineProperty(this,"tasks",JSON.parse(Youtube_defaultTasks)),Youtube_defineProperty(this,"whiteList",{...JSON.parse(Youtube_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.youtube}),Youtube_classPrivateFieldInitSpec(this,Youtube_auth,{writable:!0,value:GM_getValue("youtubeAuth")||{}}),Youtube_classPrivateFieldInitSpec(this,Youtube_initialized,{writable:!0,value:!1}),Youtube_classPrivateFieldInitSpec(this,_verifyChannel,{writable:!0,value:"https://www.youtube.com/channel/"+globalOptions.other.youtubeVerifyChannel})}async init(){try{return Youtube_classPrivateFieldGet(this,Youtube_initialized)?!0:Youtube_classPrivateFieldGet(this,Youtube_auth).PAPISID?await Youtube_classPrivateMethodGet(this,Youtube_verifyAuth,Youtube_verifyAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Youtube")),Youtube_classPrivateFieldSet(this,Youtube_initialized,!0),!0):(GM_setValue("youtubeAuth",null),await Youtube_classPrivateMethodGet(this,Youtube_updateAuth,Youtube_updateAuth2).call(this)?(scripts_echoLog({}).success(i18n("initSuccess","Youtube")),Youtube_classPrivateFieldSet(this,Youtube_initialized,!0),!0):(scripts_echoLog({}).error(i18n("initFailed","Youtube")),!1)):!!await Youtube_classPrivateMethodGet(this,Youtube_updateAuth,Youtube_updateAuth2).call(this)&&(Youtube_classPrivateFieldSet(this,Youtube_initialized,!0),!0)}catch(error){return throwError_throwError(error,"Youtube.init"),!1}}async toggle(videoLinks){var{doTask=!0,channelLinks=[],videoLinks=[]}=videoLinks;try{if(!Youtube_classPrivateFieldGet(this,Youtube_initialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.youtube.channels||!doTask&&!globalOptions.undoTask.youtube.channels)scripts_echoLog({type:"globalOptionsSkip",text:"youtube.channels"});else{var realChannels=this.getRealParams("channels",channelLinks,doTask,link=>{var _link$match;return/^https:\/\/(www\.)?google\.com.*?\/url\?.*?url=https:\/\/www\.youtube\.com\/.*/.test(link)?null===(_link$match=link.match(/url=(https:\/\/www\.youtube\.com\/.*)/))||void 0===_link$match?void 0:_link$match[1]:link});if(0<realChannels.length)for(const channel of realChannels)prom.push(Youtube_classPrivateMethodGet(this,Youtube_toggleChannel,Youtube_toggleChannel2).call(this,{link:channel,doTask:doTask})),await delay(1e3)}if(doTask&&!globalOptions.doTask.youtube.likes||!doTask&&!globalOptions.undoTask.youtube.likes)scripts_echoLog({type:"globalOptionsSkip",text:"youtube.likes"});else{var realLikes=this.getRealParams("likes",videoLinks,doTask,link=>{var _link$match2;return/^https:\/\/(www\.)?google\.com.*?\/url\?.*?url=https:\/\/www\.youtube\.com\/.*/.test(link)?null===(_link$match2=link.match(/url=(https:\/\/www\.youtube\.com\/.*)/))||void 0===_link$match2?void 0:_link$match2[1]:link});if(0<realLikes.length)for(const video of realLikes)prom.push(Youtube_classPrivateMethodGet(this,_toggleLikeVideo,_toggleLikeVideo2).call(this,{link:video,doTask:doTask})),await delay(1e3)}return Promise.all(prom).then(()=>!0)}catch(error){return throwError_throwError(error,"Youtube.toggle"),!1}}}async function Youtube_verifyAuth2(){try{return await Youtube_classPrivateMethodGet(this,Youtube_toggleChannel,Youtube_toggleChannel2).call(this,{link:Youtube_classPrivateFieldGet(this,_verifyChannel),doTask:!0,verify:!0})}catch(error){return throwError_throwError(error,"Youtube.verifyAuth"),!1}}async function Youtube_updateAuth2(){try{const logStatus=scripts_echoLog({text:i18n("updatingAuth","Youtube")});return await new Promise(resolve=>{const newTab=GM_openInTab("https://www.youtube.com/#auth",{active:!0,insert:!0,setParent:!0});newTab.onclose=async()=>{var auth=GM_getValue("youtubeAuth");auth?(Youtube_classPrivateFieldSet(this,Youtube_auth,auth),logStatus.success(),Youtube_classPrivateMethodGet(this,Youtube_verifyAuth,Youtube_verifyAuth2).call(this).then(result=>{resolve(result)})):(logStatus.error("Error: Update youtube auth failed!"),resolve(!1))}})}catch(error){return throwError_throwError(error,"Discord.updateAuth"),!1}}function _getInfo2(link,type){return getInfo(link,type)}async function Youtube_toggleChannel2(verify){var{link,doTask=!0,verify=!1}=verify;try{var{params,needLogin}=await Youtube_classPrivateMethodGet(this,_getInfo,_getInfo2).call(this,link,"channel"),{apiKey,client,request,channelId}=params||{};if(needLogin)return scripts_echoLog({html:i18n("loginYtb")}),!1;if(!(apiKey&&client&&request&&channelId))return scripts_echoLog({text:'"getYtbToken" failed'}),!1;if(!doTask&&!verify&&this.whiteList.channels.includes(channelId))return scripts_echoLog({type:"whiteList",text:"Youtube.unfollowChannel",id:channelId}),!0;const logStatus=verify?scripts_echoLog({text:i18n("verifyingAuth","Youtube")}):scripts_echoLog({type:doTask?"followingYtbChannel":"unfollowingYtbChannel",text:channelId});var nowTime=parseInt(String((new Date).getTime()/1e3),10);const{result,statusText,status,data}=await tools_httpRequest({url:`https://www.youtube.com/youtubei/v1/subscription/${doTask?"":"un"}subscribe?key=`+apiKey,method:"POST",headers:{origin:"https://www.youtube.com",referer:"https://www.youtube.com/channel/"+channelId,"content-type":"application/json","x-goog-authuser":"0","x-goog-visitor-id":null==client?void 0:client.visitorData,"x-origin":"https://www.youtube.com",authorization:`SAPISIDHASH ${nowTime}_`+sha1(`${nowTime} ${Youtube_classPrivateFieldGet(this,Youtube_auth).PAPISID} https://www.youtube.com`)},data:JSON.stringify({context:{client:client,request:{sessionId:null==request?void 0:request.sessionId,internalExperimentFlags:[],consistencyTokenJars:[]},user:{}},channelIds:[channelId],params:doTask?"EgIIAhgA":"CgIIAhgA"})});return"Success"===result?200===(null===data||void 0===data?void 0:data.status)?doTask&&(/"subscribed": true/.test(data.responseText)||data.responseText.includes("The subscription already exists"))||!doTask&&/"subscribed": false/.test(data.responseText)?(logStatus.success(),doTask&&!verify&&(this.tasks.channels=unique([...this.tasks.channels,link])),!0):verify&&data.responseText.includes("You may not subscribe to yourself")?(logStatus.success(),!0):(logStatus.error(i18n("tryUpdateYtbAuth"),!0),!1):(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Youtube.toggleChannel"),!1}}async function _toggleLikeVideo2(doTask){var{link,doTask=!0}=doTask;try{var{params,needLogin}=await Youtube_classPrivateMethodGet(this,_getInfo,_getInfo2).call(this,link,"likeVideo"),{apiKey,client,request,videoId,likeParams}=params||{};if(needLogin)return scripts_echoLog({html:""+i18n("loginYtb")}),!1;if(!(apiKey&&client&&request&&videoId&&likeParams))return scripts_echoLog({text:'"getYtbToken" failed'}),!1;if(!doTask&&this.whiteList.likes.includes(videoId))return scripts_echoLog({type:"whiteList",text:"Youtube.unlikeVideo",id:videoId}),!0;const logStatus=scripts_echoLog({type:doTask?"likingYtbVideo":"unlikingYtbVideo",text:videoId});var nowTime=parseInt(String((new Date).getTime()/1e3),10);const likeVideoData={context:{client:client,request:{sessionId:request.sessionId,internalExperimentFlags:[],consistencyTokenJars:[]},user:{}},target:{videoId:videoId}};if(doTask){if(!likeParams)return logStatus.error("Empty likeParams"),!1;likeVideoData.params=likeParams}const{result,statusText,status,data}=await tools_httpRequest({url:`https://www.youtube.com/youtubei/v1/like/${doTask?"":"remove"}like?key=`+apiKey,method:"POST",headers:{origin:"https://www.youtube.com",referer:"https://www.youtube.com/watch?v="+videoId,"content-type":"application/json","x-goog-authuser":"0","x-goog-visitor-id":client.visitorData,"x-origin":"https://www.youtube.com",authorization:`SAPISIDHASH ${nowTime}_`+sha1(`${nowTime} ${Youtube_classPrivateFieldGet(this,Youtube_auth).PAPISID} https://www.youtube.com`)},data:JSON.stringify(likeVideoData)});return"Success"===result?200===(null===data||void 0===data?void 0:data.status)?doTask&&data.responseText.includes("Added to Liked videos")||!doTask&&(data.responseText.includes("Removed from Liked videos")||data.responseText.includes("Dislike removed"))?(logStatus.success(),doTask&&(this.tasks.likes=unique([...this.tasks.likes,link])),!0):(logStatus.error(i18n("tryUpdateYtbAuth"),!0),!1):(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Youtube.toggleLikeVideo"),!1}}function Steam_classPrivateMethodInitSpec(obj,privateSet){Steam_checkPrivateRedeclaration(obj,privateSet),privateSet.add(obj)}function Steam_classPrivateFieldInitSpec(obj,privateMap,value){Steam_checkPrivateRedeclaration(obj,privateMap),privateMap.set(obj,value)}function Steam_checkPrivateRedeclaration(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}function Steam_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Steam_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}function Steam_classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,Steam_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function Steam_classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,Steam_classExtractFieldDescriptor(receiver,privateMap,"get"))}function Steam_classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}const Steam_defaultTasks=JSON.stringify({groups:[],officialGroups:[],wishlists:[],follows:[],forums:[],workshops:[],workshopVotes:[],curators:[],curatorLikes:[],announcements:[],licenses:[],playtests:[]});var Steam_cache=new WeakMap,Steam_auth=new WeakMap,_storeInitialized=new WeakMap,_communityInitialized=new WeakMap,_area=new WeakMap,_areaStatus=new WeakMap,_refreshStoreToken=new WeakSet,_setStoreToken=new WeakSet,_updateStoreAuth=new WeakSet,_updateCommunityAuth=new WeakSet,_getAreaInfo=new WeakSet,_changeArea=new WeakSet,_joinGroup=new WeakSet,_leaveGroup=new WeakSet,_getGroupId=new WeakSet,_joinOfficialGroup=new WeakSet,_leaveOfficialGroup=new WeakSet,_getOfficialGroupId=new WeakSet,_addToWishlist=new WeakSet,_removeFromWishlist=new WeakSet,_toggleFollowGame=new WeakSet,_isFollowedGame=new WeakSet,_toggleForum=new WeakSet,_getForumId=new WeakSet,_toggleFavoriteWorkshop=new WeakSet,_getWorkshopAppId=new WeakSet,_voteUpWorkshop=new WeakSet,_toggleCurator=new WeakSet,_toggleCuratorLike=new WeakSet,_getAnnouncementParams=new WeakSet,_likeAnnouncement=new WeakSet,_appid2subid=new WeakSet,_getLicenses=new WeakSet,_addLicense=new WeakSet,_addFreeLicense=new WeakSet,_requestPlayTestAccess=new WeakSet,Steam_setCache=new WeakSet;async function _refreshStoreToken2(){try{const logStatus=scripts_echoLog({text:i18n("refreshingToken",i18n("steamStore"))}),formData=new FormData;formData.append("redir","https://store.steampowered.com/");var _data$response,{result,statusText,status,data}=await tools_httpRequest({url:"https://login.steampowered.com/jwt/ajaxrefresh",method:"POST",responseType:"json",headers:{Host:"login.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/"},data:formData});return"Success"===result?null!=data&&null!==(_data$response=data.response)&&void 0!==_data$response&&_data$response.success?await Steam_classPrivateMethodGet(this,_setStoreToken,_setStoreToken2).call(this,data.response)?(logStatus.success(),!0):(logStatus.error("Error"),!1):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.refreshStoreToken"),!1}}async function _setStoreToken2(param){try{const logStatus=scripts_echoLog({text:i18n("settingToken",i18n("steamStore"))}),formData=new FormData;formData.append("steamID",param.steamID),formData.append("nonce",param.nonce),formData.append("redir",param.redir),formData.append("auth",param.auth);var{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/login/settoken",method:"POST",headers:{Accept:"application/json, text/plain, */*",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/login"},data:formData});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.setStoreToken"),!1}}async function _updateStoreAuth2(){try{const logStatus=scripts_echoLog({text:i18n("updatingAuth",i18n("steamStore"))}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/",method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","Cache-Control":"max-age=0","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Upgrade-Insecure-Requests":"1"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma2;if(!data.responseText.includes("data-miniprofile="))return await Steam_classPrivateMethodGet(this,_refreshStoreToken,_refreshStoreToken2).call(this),logStatus.error("Error:"+i18n("needLoginSteamStore"),!0),!1;var storeSessionID=null===(_data$responseText$ma2=data.responseText.match(/g_sessionID = "(.+?)";/))||void 0===_data$responseText$ma2?void 0:_data$responseText$ma2[1];return storeSessionID?(Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID=storeSessionID,logStatus.success(),!0):(logStatus.error('Error: Get "sessionID" failed'),!1)}catch(error){return throwError_throwError(error,"Steam.updateStoreAuth"),!1}}async function _updateCommunityAuth2(){try{const logStatus=scripts_echoLog({text:i18n("updatingAuth",i18n("steamCommunity"))}),{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/my",method:"GET",headers:{Accept:"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9","Cache-Control":"max-age=0","Sec-Fetch-Dest":"document","Sec-Fetch-Mode":"navigate","Upgrade-Insecure-Requests":"1"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma3,_data$responseText$ma4,_data$responseText$ma5;if(data.responseText.includes('href="https://steamcommunity.com/login/home/'))return logStatus.error("Error:"+i18n("needLoginSteamCommunity"),!0),!1;var steam64Id=null===(_data$responseText$ma3=data.responseText.match(/g_steamID = "(.+?)";/))||void 0===_data$responseText$ma3?void 0:_data$responseText$ma3[1],communitySessionID=null===(_data$responseText$ma4=data.responseText.match(/g_sessionID = "(.+?)";/))||void 0===_data$responseText$ma4?void 0:_data$responseText$ma4[1],userName=null===(_data$responseText$ma5=data.responseText.match(/steamcommunity.com\/id\/(.+?)\/friends\//))||void 0===_data$responseText$ma5?void 0:_data$responseText$ma5[1];return(steam64Id&&(Steam_classPrivateFieldGet(this,Steam_auth).steam64Id=steam64Id),userName&&(Steam_classPrivateFieldGet(this,Steam_auth).userName=userName),communitySessionID)?(Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID=communitySessionID,logStatus.success(),!0):(logStatus.error('Error: Get "sessionID" failed'),!1)}catch(error){return throwError_throwError(error,"Steam.updateCommunityAuth"),!1}}async function _getAreaInfo2(){try{const logStatus=scripts_echoLog({text:i18n("gettingAreaInfo")}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/cart/",method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),{};if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),{};var _data$responseText$ma6,currentArea=null===(_data$responseText$ma6=data.responseText.match(/<input id="usercountrycurrency".*?value="(.+?)"/))||void 0===_data$responseText$ma6?void 0:_data$responseText$ma6[1],areas=[...data.responseText.matchAll(/<div class="currency_change_option .*?" data-country="(.+?)" >/g)].map(search=>search[1]);return currentArea&&0<areas.length?(Steam_classPrivateFieldSet(this,_area,currentArea),logStatus.success(),{currentArea:currentArea,areas:areas}):(logStatus.error("Error: get country info filed"),{})}catch(error){return throwError_throwError(error,"Steam.getAreaInfo"),{}}}async function _changeArea2(area){try{if("waiting"===Steam_classPrivateFieldGet(this,_areaStatus)&&await new Promise(resolve=>{const checker=setInterval(()=>{"waiting"!==Steam_classPrivateFieldGet(this,_areaStatus)&&(clearInterval(checker),resolve(!0))})}),Steam_classPrivateFieldGet(this,_area)===area||!area&&"CN"!==Steam_classPrivateFieldGet(this,_area))return!0;Steam_classPrivateFieldSet(this,_areaStatus,"waiting");let aimedArea=area;if(!aimedArea){const{currentArea,areas}=await Steam_classPrivateMethodGet(this,_getAreaInfo,_getAreaInfo2).call(this);if(!currentArea||!areas)return Steam_classPrivateFieldSet(this,_areaStatus,"error"),!1;if("CN"!==currentArea)return Steam_classPrivateFieldSet(this,_areaStatus,"skip"),scripts_echoLog({text:"notNeededChangeArea"}),"skip";var anotherArea=areas.filter(area=>area&&"CN"!==area);if(!anotherArea||0===anotherArea.length)return Steam_classPrivateFieldSet(this,_areaStatus,"noAnotherArea"),scripts_echoLog({text:"noAnotherArea"}),!1;[aimedArea]=anotherArea}const logStatus=scripts_echoLog({text:i18n("changingArea",aimedArea)});var{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/account/setcountry",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({cc:aimedArea,sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID})});if("Success"!==result)return Steam_classPrivateFieldSet(this,_areaStatus,"error"),logStatus.error(result+`:${statusText}(${status})`),"CN";if(200!==(null==data?void 0:data.status)||"true"!==data.responseText)return Steam_classPrivateFieldSet(this,_areaStatus,"error"),logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),"CN";var currentArea=(await Steam_classPrivateMethodGet(this,_getAreaInfo,_getAreaInfo2).call(this))["currentArea"];return currentArea===aimedArea?(Steam_classPrivateFieldSet(this,_areaStatus,"success"),logStatus.success(),currentArea):(Steam_classPrivateFieldSet(this,_areaStatus,"error"),logStatus.error("Error: change country filed"),"CN")}catch(error){return Steam_classPrivateFieldSet(this,_areaStatus,"error"),throwError_throwError(error,"Steam.changeArea"),!1}}async function _joinGroup2(groupName){try{const logStatus=scripts_echoLog({type:"joiningSteamGroup",text:groupName}),{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/groups/"+groupName,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({action:"join",sessionID:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID})});return"Success"===result?200!==(null===data||void 0===data?void 0:data.status)||data.responseText.includes("grouppage_join_area")?(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.success(),this.tasks.groups=unique([...this.tasks.groups,groupName]),!0):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.joinGroup"),!1}}async function _leaveGroup2(groupName){try{if(this.whiteList.groups.includes(groupName))return scripts_echoLog({type:"whiteList",text:"Steam.leaveGroup",id:groupName}),!0;var groupId=await Steam_classPrivateMethodGet(this,_getGroupId,_getGroupId2).call(this,groupName);if(!groupId)return!1;const logStatus=scripts_echoLog({type:"leavingSteamGroup",text:groupName}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/id/${Steam_classPrivateFieldGet(this,Steam_auth).userName}/home_process`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionID:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID,action:"leaveGroup",groupId:groupId})});return"Success"===result?200===(null===data||void 0===data?void 0:data.status)&&data.finalUrl.includes("groups")&&0===$(data.responseText.replace(/<img.*?>/g,"").toLowerCase()).find(`a[href='https://steamcommunity.com/groups/${groupName.toLowerCase()}']`).length?(logStatus.success(),!0):(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.leaveGroup"),!1}}async function _getGroupId2(groupName){try{const logStatus=scripts_echoLog({type:"gettingSteamGroupId",text:groupName});var _data$responseText$ma7,groupId=Steam_classPrivateFieldGet(this,Steam_cache).group[groupName];if(groupId)return logStatus.success(),groupId;const{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/groups/"+groupName,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;{const groupId=null===(_data$responseText$ma7=data.responseText.match(/OpenGroupChat\( '([0-9]+)'/))||void 0===_data$responseText$ma7?void 0:_data$responseText$ma7[1];return groupId?(Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"group",groupName,groupId),logStatus.success(),groupId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getGroupID"),!1}}async function _joinOfficialGroup2(gameId){try{const logStatus=scripts_echoLog({type:"joiningSteamOfficialGroup",text:gameId}),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/games/${gameId}?action=join&sessionID=`+Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status)||data.responseText.includes('id="publicGroupJoin"'))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma8;logStatus.success(),this.tasks.officialGroups=unique([...this.tasks.officialGroups,gameId]);var groupId=null===(_data$responseText$ma8=data.responseText.match(/steam:\/\/friends\/joinchat\/([0-9]+)/))||void 0===_data$responseText$ma8?void 0:_data$responseText$ma8[1];return groupId&&Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"officialGroup",gameId,groupId),!0}catch(error){return throwError_throwError(error,"Steam.joinOfficialGroup"),!1}}async function _leaveOfficialGroup2(gameId){try{if(this.whiteList.officialGroups.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.leaveOfficialGroup",id:gameId}),!0;var groupId=await Steam_classPrivateMethodGet(this,_getOfficialGroupId,_getOfficialGroupId2).call(this,gameId);if(!groupId)return!1;const logStatus=scripts_echoLog({type:"leavingSteamOfficialGroup",text:gameId});var{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/id/${Steam_classPrivateFieldGet(this,Steam_auth).userName}/home_process`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionID:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID,action:"leaveGroup",groupId:groupId})});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null==data?void 0:data.status))return logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1;{const{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://steamcommunity.com/games/"+gameId,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});return"Success"===resultR?200===(null===dataR||void 0===dataR?void 0:dataR.status)&&dataR.responseText.includes('id="publicGroupJoin"')?(logStatus.success(),!0):(logStatus.error(`Error:${null===dataR||void 0===dataR?void 0:dataR.statusText}(${null===dataR||void 0===dataR?void 0:dataR.status})`),!1):(logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1)}}catch(error){return throwError_throwError(error,"Steam.leaveOfficialGroup"),!1}}async function _getOfficialGroupId2(gameId){try{const logStatus=scripts_echoLog({type:"gettingSteamOfficialGroupId",text:gameId});var _data$responseText$ma9,groupId=Steam_classPrivateFieldGet(this,Steam_cache).officialGroup[gameId];if(groupId)return logStatus.success(),groupId;const{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/games/"+gameId,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;{const groupId=null===(_data$responseText$ma9=data.responseText.match(/steam:\/\/friends\/joinchat\/([0-9]+)/))||void 0===_data$responseText$ma9?void 0:_data$responseText$ma9[1];return groupId?(Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"officialGroup",gameId,groupId),logStatus.success(),groupId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getGroupID"),!1}}async function _addToWishlist2(gameId){try{var _data$response2;const logStatus=scripts_echoLog({type:"addingToWishlist",text:gameId});var{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/api/addtowishlist",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,appid:gameId}),dataType:"json"});if("Success"===result&&200===(null==data?void 0:data.status)&&!0===(null===(_data$response2=data.response)||void 0===_data$response2?void 0:_data$response2.success))return logStatus.success(),this.tasks.wishlists=unique([...this.tasks.wishlists,gameId]),!0;const{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});return"Success"===resultR?200===(null===dataR||void 0===dataR?void 0:dataR.status)?"CN"===Steam_classPrivateFieldGet(this,_area)&&dataR.responseText.includes('id="error_box"')?(logStatus.warning(i18n("changeAreaNotice")),!!await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this)&&await Steam_classPrivateMethodGet(this,_addToWishlist,_addToWishlist2).call(this,gameId)):(!dataR.responseText.includes('class="queue_actions_ctn"')||!dataR.responseText.includes('class="already_in_library"'))&&(dataR.responseText.includes('class="queue_actions_ctn"')&&dataR.responseText.includes('id="add_to_wishlist_area_success" style="display: none;')||!dataR.responseText.includes('class="queue_actions_ctn"'))?(logStatus.error(`Error:${dataR.statusText}(${dataR.status})`),!1):(logStatus.success(),this.tasks.wishlists=unique([...this.tasks.wishlists,gameId]),!0):(logStatus.error(`Error:${null===dataR||void 0===dataR?void 0:dataR.statusText}(${null===dataR||void 0===dataR?void 0:dataR.status})`),!1):(logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1)}catch(error){return throwError_throwError(error,"Steam.addToWishlist"),!1}}async function _removeFromWishlist2(gameId){try{var _data$response3;if(this.whiteList.wishlists.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.removeFromWishlist",id:gameId}),!0;const logStatus=scripts_echoLog({type:"removingFromWishlist",text:gameId});var{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/api/removefromwishlist",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,appid:gameId}),dataType:"json"});if("Success"===result&&200===(null==data?void 0:data.status)&&!0===(null===(_data$response3=data.response)||void 0===_data$response3?void 0:_data$response3.success))return logStatus.success(),!0;const{result:resultR,statusText:statusTextR,status:statusR,data:dataR}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});if("Success"!==resultR)return logStatus.error(resultR+`:${statusTextR}(${statusR})`),!1;if(200!==(null===dataR||void 0===dataR?void 0:dataR.status))return logStatus.error(`Error:${null===dataR||void 0===dataR?void 0:dataR.statusText}(${null===dataR||void 0===dataR?void 0:dataR.status})`),!1;if("CN"===Steam_classPrivateFieldGet(this,_area)&&dataR.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));const result=await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this);return result&&"CN"!==result&&"skip"!==result?await Steam_classPrivateMethodGet(this,_removeFromWishlist,_removeFromWishlist2).call(this,gameId):!1}return dataR.responseText.includes('class="queue_actions_ctn"')&&(dataR.responseText.includes("ds_owned_flag ds_flag")||dataR.responseText.includes("add_to_wishlist_area"))?(logStatus.success(),!0):(logStatus.error(`Error:${dataR.statusText}(${dataR.status})`),!1)}catch(error){return throwError_throwError(error,"Steam.removeFromWishlist"),!1}}async function _toggleFollowGame2(gameId,doTask){try{if(!doTask&&this.whiteList.follows.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.unfollowGame",id:gameId}),!0;const logStatus=scripts_echoLog({type:`${doTask?"":"un"}followingGame`,text:gameId}),requestData={sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,appid:gameId};doTask||(requestData.unfollow="1");var{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/explore/followgame/",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param(requestData)});if("Success"===result&&200===(null==data?void 0:data.status)&&"true"===data.responseText)return logStatus.success(),!0;var followed=await Steam_classPrivateMethodGet(this,_isFollowedGame,_isFollowedGame2).call(this,gameId);return"CN"===Steam_classPrivateFieldGet(this,_area)&&"areaLocked"===followed?(logStatus.warning(i18n("changeAreaNotice")),!!await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this)&&await Steam_classPrivateMethodGet(this,_removeFromWishlist,_removeFromWishlist2).call(this,gameId)):doTask===followed?(logStatus.success(),doTask&&(this.tasks.follows=unique([...this.tasks.follows,gameId])),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1)}catch(error){return throwError_throwError(error,"Steam.toggleFollowGame"),!1}}async function _isFollowedGame2(gameId){try{const{result,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+gameId,method:"GET"});return"Success"===result?200===(null===data||void 0===data?void 0:data.status)&&("CN"===Steam_classPrivateFieldGet(this,_area)&&data.responseText.includes('id="error_box"')?"areaLocked":"none"!==$(data.responseText.replace(/<img.*?>/g,"")).find(".queue_control_button.queue_btn_follow>.btnv6_blue_hoverfade.btn_medium.queue_btn_active").css("display")):!1}catch(error){return throwError_throwError(error,"Steam.isFollowedGame"),!1}}async function _toggleForum2(gameId){var doTask=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];try{if(!doTask&&this.whiteList.forums.includes(gameId))return scripts_echoLog({type:"whiteList",text:"Steam.unsubscribeForum",id:gameId}),!0;const forumId=await Steam_classPrivateMethodGet(this,_getForumId,_getForumId2).call(this,gameId);if(!forumId)return!1;const logStatus=scripts_echoLog({type:`${doTask?"":"un"}subscribingForum`,text:gameId});var _data$response4,_data$response5,[id,feature]=forumId.split("_"),{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/forum/${id}/General/${doTask?"":"un"}subscribe/${feature||"0"}/`,method:"POST",responseType:"json",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({sessionid:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID})});return"Success"===result?(200!==(null==data?void 0:data.status)||1!==(null===(_data$response4=data.response)||void 0===_data$response4?void 0:_data$response4.success)&&29!==(null===(_data$response5=data.response)||void 0===_data$response5?void 0:_data$response5.success)?logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`):(doTask&&(this.tasks.forums=unique([...this.tasks.forums,gameId])),logStatus.success()),!0):(logStatus.error(result+`:${statusText}(${status})`),!0)}catch(error){return throwError_throwError(error,"Steam.toggleForum"),!0}}async function _getForumId2(gameId){try{const logStatus=scripts_echoLog({type:"gettingForumId",text:gameId});var forumId=Steam_classPrivateFieldGet(this,Steam_cache).forum[gameId];if(forumId)return logStatus.success(),forumId;var _data$responseText,_data$responseText$ma10,{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/app/${gameId}/discussions/`,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null==data?void 0:data.status))return logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1;{const forumId=null===(_data$responseText=data.responseText)||void 0===_data$responseText||null===(_data$responseText$ma10=_data$responseText.match(/General_([\d]+(_[\d]+)?)/))||void 0===_data$responseText$ma10?void 0:_data$responseText$ma10[1];return forumId?(Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"forum",gameId,forumId),logStatus.success(),forumId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getForumId"),!1}}async function _toggleFavoriteWorkshop2(id){var doTask=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];try{if(!doTask&&this.whiteList.workshops.includes(id))return scripts_echoLog({type:"whiteList",text:"Steam.unfavoriteWorkshop",id:id}),!0;var appid=await Steam_classPrivateMethodGet(this,_getWorkshopAppId,_getWorkshopAppId2).call(this,id);if(!appid)return!1;const logStatus=scripts_echoLog({type:doTask?"favoritingWorkshop":"unfavoritingWorkshop",text:id});var{result,statusText,status,data}=await tools_httpRequest({url:`https://steamcommunity.com/sharedfiles/${doTask?"":"un"}favorite`,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({id:id,appid:appid,sessionid:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID})});return"Success"===result?200!==(null==data?void 0:data.status)||data.responseText?(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(doTask&&(this.tasks.workshops=unique([...this.tasks.workshops,id])),logStatus.success(),!0):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.toggleFavoriteWorkshop"),!1}}async function _getWorkshopAppId2(id){try{const logStatus=scripts_echoLog({type:"gettingWorkshopAppId",text:id});var _data$responseText$ma11,appId=Steam_classPrivateFieldGet(this,Steam_cache).workshop[id];if(appId)return logStatus.success(),appId;const{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/sharedfiles/filedetails/?id="+id,method:"GET"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;{const appId=null===(_data$responseText$ma11=data.responseText.match(/<input type="hidden" name="appid" value="([\d]+?)" \/>/))||void 0===_data$responseText$ma11?void 0:_data$responseText$ma11[1];return appId?(Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"workshop",id,appId),logStatus.success(),appId):(logStatus.error("Error: getWorkshopAppId failed"),!1)}}catch(error){return throwError_throwError(error,"Steam.getWorkshopAppId"),!1}}async function _voteUpWorkshop2(id){try{const logStatus=scripts_echoLog({type:"votingUpWorkshop",text:id});var _data$response6,{result,statusText,status,data}=await tools_httpRequest({url:"https://steamcommunity.com/sharedfiles/voteup",method:"POST",responseType:"json",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({id:id,sessionid:Steam_classPrivateFieldGet(this,Steam_auth).communitySessionID})});return"Success"===result?(200===(null==data?void 0:data.status)&&1===(null===(_data$response6=data.response)||void 0===_data$response6?void 0:_data$response6.success)?logStatus.success():logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!0):(logStatus.error(result+`:${statusText}(${status})`),!0)}catch(error){return throwError_throwError(error,"Steam.voteupWorkshop"),!0}}async function _toggleCurator2(curatorId){var doTask=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];try{if(!doTask&&this.whiteList.curators.includes(curatorId))return scripts_echoLog({type:"whiteList",text:"Steam.unfollowCurator",id:curatorId}),!0;const logStatus=scripts_echoLog({type:doTask?"followingCurator":"unfollowingCurator",text:curatorId});var _data$response7,_data$response7$succe,_data$response8,{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/curators/ajaxfollow",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$.param({clanid:curatorId,sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,follow:doTask}),dataType:"json"});return"Success"===result?200===(null==data?void 0:data.status)&&1===(null===(_data$response7=data.response)||void 0===_data$response7||null===(_data$response7$succe=_data$response7.success)||void 0===_data$response7$succe?void 0:_data$response7$succe.success)?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(`+(null==data||null===(_data$response8=data.response)||void 0===_data$response8?void 0:_data$response8.success)||`${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.toggleCurator"),!1}}async function _toggleCuratorLike2(link){var doTask=!(1<arguments.length&&void 0!==arguments[1])||arguments[1];try{var[path,name]=link.split("/");if(!path||!name)return scripts_echoLog({text:i18n("errorLink",link)}),!1;var curatorId=await this.getCuratorId(path,name);return curatorId?await Steam_classPrivateMethodGet(this,_toggleCurator,_toggleCurator2).call(this,curatorId,doTask):!1}catch(error){return throwError_throwError(error,"Steam.toggleCuratorLike"),!1}}async function _getAnnouncementParams2(appId,viewId){try{const logStatus=scripts_echoLog({type:"gettingAnnouncementParams",text:appId,id:viewId});var _data$response9,{result,statusText,status,data}=await tools_httpRequest({url:`https://store.steampowered.com/events/ajaxgetpartnerevent?appid=${appId}&announcement_gid=${viewId}&lang_list=6_0&last_modified_time=0&origin=https:%2F%2Fstore.steampowered.com&for_edit=false`,method:"GET",responseType:"json",headers:{Host:"store.steampowered.com",Referer:`https://store.steampowered.com/news/app/${appId}/view/`+viewId}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),{};if(200!==(null==data?void 0:data.status)||1!==(null==data||null===(_data$response9=data.response)||void 0===_data$response9?void 0:_data$response9.success))return logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),{};var _data$response$event,{clanid,gid}=(null===(_data$response$event=data.response.event)||void 0===_data$response$event?void 0:_data$response$event.announcement_body)||{};return clanid?(logStatus.success(),{clanId:clanid,gid:gid}):(logStatus.error(`Error:${data.statusText}(${data.status})`),{})}catch(error){return throwError_throwError(error,"Steam.likeAnnouncement"),{}}}async function _likeAnnouncement2(id){try{var[appId,viewId]=id.split("/");if(!appId||!viewId)return scripts_echoLog({}).error(i18n("missParams")+"(id)"),!1;var{clanId,gid}=await Steam_classPrivateMethodGet(this,_getAnnouncementParams,_getAnnouncementParams2).call(this,appId,viewId);if(!clanId)return!1;const logStatus=scripts_echoLog({type:"likingAnnouncement",text:appId,id:viewId});var{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/updated/ajaxrateupdate/"+(gid||viewId),method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:`https://store.steampowered.com/news/app/${appId}/view/`+viewId},data:$.param({sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,voteup:1,clanid:clanId,ajax:1}),dataType:"json"});return"Success"===result?200===(null==data?void 0:data.status)&&1===data.response.success?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.likeAnnouncement"),!1}}async function _appid2subid2(id){try{const logStatus=scripts_echoLog({type:"gettingSubid",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+id,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;var _data$responseText$ma12;if("CN"===Steam_classPrivateFieldGet(this,_area)&&data.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));const result=await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this);return result&&"CN"!==result&&"skip"!==result?await Steam_classPrivateMethodGet(this,_appid2subid,_appid2subid2).call(this,id):!1}var subid=null===(_data$responseText$ma12=data.responseText.match(/name="subid" value="([\d]+?)"/))||void 0===_data$responseText$ma12?void 0:_data$responseText$ma12[1];return subid?(logStatus.success(),subid):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}catch(error){return throwError_throwError(error,"Steam.appid2subid"),!1}}async function _getLicenses2(){try{const logStatus=scripts_echoLog({text:i18n("gettingLicenses")});var _data$response10,{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/dynamicstore/userdata/?t="+(new Date).getTime(),method:"GET",responseType:"json"});return"Success"===result?200===(null==data?void 0:data.status)?(logStatus.success(),null===(_data$response10=data.response)||void 0===_data$response10?void 0:_data$response10.rgOwnedPackages):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.getLicenses"),!1}}async function _addLicense2(id){try{const[type,ids]=id.split("-");if("appid"===type){var subid=await Steam_classPrivateMethodGet(this,_appid2subid,_appid2subid2).call(this,ids);if(!subid)return!1;const logStatus=scripts_echoLog({type:"addingFreeLicense",text:ids});if(!await Steam_classPrivateMethodGet(this,_addFreeLicense,_addFreeLicense2).call(this,subid,logStatus))return!1;const{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/app/"+ids,method:"GET"});return"Success"===result?200===(null===data||void 0===data?void 0:data.status)?data.responseText.includes("ds_owned_flag ds_flag")||data.responseText.includes('class="already_in_library"')?(logStatus.success(),!0):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1):(logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}if("subid"!==type)return!1;{"CN"===Steam_classPrivateFieldGet(this,_area)&&(scripts_echoLog({}).success(i18n("tryChangeAreaNotice")),await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this));const logStatusArr={};var idsArr=ids.split(",");for(const subid of idsArr){var logStatus=scripts_echoLog({type:"addingFreeLicenseSubid",text:subid});if(!await Steam_classPrivateMethodGet(this,_addFreeLicense,_addFreeLicense2).call(this,subid,logStatus))return!1;logStatusArr[subid]=logStatus}const licenses=await Steam_classPrivateMethodGet(this,_getLicenses,_getLicenses2).call(this);if(!licenses)return!1;for(const subid of idsArr)licenses.includes(parseInt(subid,10))?logStatusArr[subid].success():logStatusArr[subid].error();return!0}}catch(error){return throwError_throwError(error,"Steam.addLicense"),!1}}async function _addFreeLicense2(id,logStatusPre){try{const logStatus=logStatusPre||scripts_echoLog({type:"addingFreeLicenseSubid",text:id}),{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/checkout/addfreelicense",method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/account/licenses/"},data:$.param({action:"add_to_cart",sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID,subid:id}),dataType:"json"});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;if("CN"===Steam_classPrivateFieldGet(this,_area)&&data.responseText.includes('id="error_box"')){logStatus.warning(i18n("changeAreaNotice"));const result=await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this);return result&&"CN"!==result?await Steam_classPrivateMethodGet(this,_addFreeLicense,_addFreeLicense2).call(this,id):!1}return logStatus.success(),!0}catch(error){return throwError_throwError(error,"Steam.addFreeLicense"),!1}}async function _requestPlayTestAccess2(id){try{const logStatus=scripts_echoLog({type:"requestingPlayTestAccess",text:id});var _data$response11,{result,statusText,status,data}=await tools_httpRequest({url:"https://store.steampowered.com/ajaxrequestplaytestaccess/"+id,method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8",Host:"store.steampowered.com",Origin:"https://store.steampowered.com",Referer:"https://store.steampowered.com/app/"+id},data:$.param({sessionid:Steam_classPrivateFieldGet(this,Steam_auth).storeSessionID}),dataType:"json"});return"Success"===result?200===(null==data?void 0:data.status)&&1===(null==data||null===(_data$response11=data.response)||void 0===_data$response11?void 0:_data$response11.success)?(logStatus.success(),!0):(logStatus.error(`Error:${null==data?void 0:data.statusText}(${null==data?void 0:data.status})`),!1):(logStatus.error(result+`:${statusText}(${status})`),!1)}catch(error){return throwError_throwError(error,"Steam.requestPlayTestAccess"),!1}}function Steam_setCache2(type,name,id){try{Steam_classPrivateFieldGet(this,Steam_cache)[type][name]=id,GM_setValue("steamCache",Steam_classPrivateFieldGet(this,Steam_cache))}catch(error){throwError_throwError(error,"Steam.setCache")}}const social_Steam=class extends for_giveawaysu{constructor(){var _GM_getValue;super(...arguments),Steam_classPrivateMethodInitSpec(this,Steam_setCache),Steam_classPrivateMethodInitSpec(this,_requestPlayTestAccess),Steam_classPrivateMethodInitSpec(this,_addFreeLicense),Steam_classPrivateMethodInitSpec(this,_addLicense),Steam_classPrivateMethodInitSpec(this,_getLicenses),Steam_classPrivateMethodInitSpec(this,_appid2subid),Steam_classPrivateMethodInitSpec(this,_likeAnnouncement),Steam_classPrivateMethodInitSpec(this,_getAnnouncementParams),Steam_classPrivateMethodInitSpec(this,_toggleCuratorLike),Steam_classPrivateMethodInitSpec(this,_toggleCurator),Steam_classPrivateMethodInitSpec(this,_voteUpWorkshop),Steam_classPrivateMethodInitSpec(this,_getWorkshopAppId),Steam_classPrivateMethodInitSpec(this,_toggleFavoriteWorkshop),Steam_classPrivateMethodInitSpec(this,_getForumId),Steam_classPrivateMethodInitSpec(this,_toggleForum),Steam_classPrivateMethodInitSpec(this,_isFollowedGame),Steam_classPrivateMethodInitSpec(this,_toggleFollowGame),Steam_classPrivateMethodInitSpec(this,_removeFromWishlist),Steam_classPrivateMethodInitSpec(this,_addToWishlist),Steam_classPrivateMethodInitSpec(this,_getOfficialGroupId),Steam_classPrivateMethodInitSpec(this,_leaveOfficialGroup),Steam_classPrivateMethodInitSpec(this,_joinOfficialGroup),Steam_classPrivateMethodInitSpec(this,_getGroupId),Steam_classPrivateMethodInitSpec(this,_leaveGroup),Steam_classPrivateMethodInitSpec(this,_joinGroup),Steam_classPrivateMethodInitSpec(this,_changeArea),Steam_classPrivateMethodInitSpec(this,_getAreaInfo),Steam_classPrivateMethodInitSpec(this,_updateCommunityAuth),Steam_classPrivateMethodInitSpec(this,_updateStoreAuth),Steam_classPrivateMethodInitSpec(this,_setStoreToken),Steam_classPrivateMethodInitSpec(this,_refreshStoreToken),Steam_defineProperty(this,"tasks",JSON.parse(Steam_defaultTasks)),Steam_defineProperty(this,"whiteList",{...JSON.parse(Steam_defaultTasks),...null===(_GM_getValue=GM_getValue("whiteList"))||void 0===_GM_getValue?void 0:_GM_getValue.steam}),Steam_classPrivateFieldInitSpec(this,Steam_cache,{writable:!0,value:{group:{},officialGroup:{},forum:{},workshop:{},curator:{},...GM_getValue("steamCache")}}),Steam_classPrivateFieldInitSpec(this,Steam_auth,{writable:!0,value:{}}),Steam_classPrivateFieldInitSpec(this,_storeInitialized,{writable:!0,value:!1}),Steam_classPrivateFieldInitSpec(this,_communityInitialized,{writable:!0,value:!1}),Steam_classPrivateFieldInitSpec(this,_area,{writable:!0,value:"CN"}),Steam_classPrivateFieldInitSpec(this,_areaStatus,{writable:!0,value:"end"})}async init(){var type=0<arguments.length&&void 0!==arguments[0]?arguments[0]:"all";try{return"store"===type?!!Steam_classPrivateFieldGet(this,_storeInitialized)||(Steam_classPrivateFieldSet(this,_storeInitialized,await Steam_classPrivateMethodGet(this,_updateStoreAuth,_updateStoreAuth2).call(this)),Steam_classPrivateFieldGet(this,_storeInitialized)?(scripts_echoLog({}).success(i18n("initSuccess","SteamStore")),!0):(scripts_echoLog({}).error(i18n("initFailed","Steam")),!1)):"community"===type?!!Steam_classPrivateFieldGet(this,_communityInitialized)||(Steam_classPrivateFieldSet(this,_communityInitialized,await Steam_classPrivateMethodGet(this,_updateCommunityAuth,_updateCommunityAuth2).call(this)),Steam_classPrivateFieldGet(this,_communityInitialized)?(scripts_echoLog({}).success(i18n("initSuccess","SteamCommunity")),!0):(scripts_echoLog({}).error(i18n("initFailed","Steam")),!1)):(Steam_classPrivateFieldSet(this,_storeInitialized,await Steam_classPrivateMethodGet(this,_updateStoreAuth,_updateStoreAuth2).call(this)),Steam_classPrivateFieldSet(this,_communityInitialized,await Steam_classPrivateMethodGet(this,_updateCommunityAuth,_updateCommunityAuth2).call(this)),Steam_classPrivateFieldGet(this,_storeInitialized)&&Steam_classPrivateFieldGet(this,_communityInitialized)?(scripts_echoLog({}).success(i18n("initSuccess","Steam")),!0):(scripts_echoLog({}).error(i18n("initFailed","Steam")),!1))}catch(error){return throwError_throwError(error,"Steam.init"),!1}}async getCuratorId(path,name){try{const logStatus=scripts_echoLog({type:"gettingCuratorId",text:path+"/"+name});var _data$responseText$ma,curatorId=Steam_classPrivateFieldGet(this,Steam_cache).curator[path+"/"+name];if(curatorId)return logStatus.success(),curatorId;const{result,statusText,status,data}=await tools_httpRequest({url:`https://store.steampowered.com/${path}/`+name,method:"GET",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}});if("Success"!==result)return logStatus.error(result+`:${statusText}(${status})`),!1;if(200!==(null===data||void 0===data?void 0:data.status))return logStatus.error(`Error:${null===data||void 0===data?void 0:data.statusText}(${null===data||void 0===data?void 0:data.status})`),!1;{const curatorId=null===(_data$responseText$ma=data.responseText.match(/g_pagingData.*?"clanid":([\d]+)/))||void 0===_data$responseText$ma?void 0:_data$responseText$ma[1];return curatorId?(Steam_classPrivateMethodGet(this,Steam_setCache,Steam_setCache2).call(this,"curator",path+"/"+name,curatorId),logStatus.success(),curatorId):(logStatus.error(`Error:${data.statusText}(${data.status})`),!1)}}catch(error){return throwError_throwError(error,"Steam.getCuratorID"),!1}}async toggle(playtestLinks){var{doTask=!0,groupLinks=[],officialGroupLinks=[],wishlistLinks=[],followLinks=[],forumLinks=[],workshopLinks=[],workshopVoteLinks=[],curatorLinks=[],curatorLikeLinks=[],announcementLinks=[],licenseLinks=[],playtestLinks=[]}=playtestLinks;try{if(0<[...groupLinks,...officialGroupLinks,...forumLinks,...workshopLinks,...workshopVoteLinks].length&&!Steam_classPrivateFieldGet(this,_communityInitialized))return scripts_echoLog({text:i18n("needInit")}),!1;if(0<[...wishlistLinks,...followLinks,...curatorLinks,...curatorLikeLinks,...announcementLinks,...licenseLinks,...playtestLinks].length&&!Steam_classPrivateFieldGet(this,_storeInitialized))return scripts_echoLog({text:i18n("needInit")}),!1;const prom=[];if(doTask&&!globalOptions.doTask.steam.groups||!doTask&&!globalOptions.undoTask.steam.groups)scripts_echoLog({type:"globalOptionsSkip",text:"steam.groups"});else{var realGroups=this.getRealParams("groups",groupLinks,doTask,_link$match=>{return null===(_link$match=_link$match.match(/groups\/(.+)\/?/))||void 0===_link$match?void 0:_link$match[1]});if(0<realGroups.length)for(const group of realGroups)doTask?prom.push(Steam_classPrivateMethodGet(this,_joinGroup,_joinGroup2).call(this,group)):prom.push(Steam_classPrivateMethodGet(this,_leaveGroup,_leaveGroup2).call(this,group)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.officialGroups||!doTask&&!globalOptions.undoTask.steam.officialGroups)scripts_echoLog({type:"globalOptionsSkip",text:"steam.officialGroups"});else{var realOfficialGroups=this.getRealParams("officialGroups",officialGroupLinks,doTask,_link$match2=>{return null===(_link$match2=_link$match2.match(/games\/(.+)\/?/))||void 0===_link$match2?void 0:_link$match2[1]});if(0<realOfficialGroups.length)for(const officialGroup of realOfficialGroups)doTask?prom.push(Steam_classPrivateMethodGet(this,_joinOfficialGroup,_joinOfficialGroup2).call(this,officialGroup)):prom.push(Steam_classPrivateMethodGet(this,_leaveOfficialGroup,_leaveOfficialGroup2).call(this,officialGroup)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.wishlists||!doTask&&!globalOptions.undoTask.steam.wishlists)scripts_echoLog({type:"globalOptionsSkip",text:"steam.wishlists"});else{var realWishlists=this.getRealParams("wishlists",wishlistLinks,doTask,_link$match3=>{return null===(_link$match3=_link$match3.match(/app\/([\d]+)/))||void 0===_link$match3?void 0:_link$match3[1]});if(0<realWishlists.length)for(const game of realWishlists)doTask?prom.push(Steam_classPrivateMethodGet(this,_addToWishlist,_addToWishlist2).call(this,game)):prom.push(Steam_classPrivateMethodGet(this,_removeFromWishlist,_removeFromWishlist2).call(this,game)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.follows||!doTask&&!globalOptions.undoTask.steam.follows)scripts_echoLog({type:"globalOptionsSkip",text:"steam.follows"});else{var realFollows=this.getRealParams("follows",followLinks,doTask,_link$match4=>{return null===(_link$match4=_link$match4.match(/app\/([\d]+)/))||void 0===_link$match4?void 0:_link$match4[1]});if(0<realFollows.length)for(const game of realFollows)prom.push(Steam_classPrivateMethodGet(this,_toggleFollowGame,_toggleFollowGame2).call(this,game,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.forums||!doTask&&!globalOptions.undoTask.steam.forums)scripts_echoLog({type:"globalOptionsSkip",text:"steam.forums"});else{var realForums=this.getRealParams("forums",forumLinks,doTask,_link$match5=>{return null===(_link$match5=_link$match5.match(/app\/([\d]+)/))||void 0===_link$match5?void 0:_link$match5[1]});if(0<realForums.length)for(const forum of realForums)prom.push(Steam_classPrivateMethodGet(this,_toggleForum,_toggleForum2).call(this,forum,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.workshops||!doTask&&!globalOptions.undoTask.steam.workshops)scripts_echoLog({type:"globalOptionsSkip",text:"steam.workshops"});else{var realWorkshops=this.getRealParams("workshops",workshopLinks,doTask,_link$match6=>{return null===(_link$match6=_link$match6.match(/\?id=([\d]+)/))||void 0===_link$match6?void 0:_link$match6[1]});if(0<realWorkshops.length)for(const workshop of realWorkshops)prom.push(Steam_classPrivateMethodGet(this,_toggleFavoriteWorkshop,_toggleFavoriteWorkshop2).call(this,workshop,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.workshopVotes)scripts_echoLog({type:"globalOptionsSkip",text:"steam.workshopVotes"});else{var realworkshopVotes=this.getRealParams("workshopVotes",workshopVoteLinks,doTask,_link$match7=>{return null===(_link$match7=_link$match7.match(/\?id=([\d]+)/))||void 0===_link$match7?void 0:_link$match7[1]});if(doTask&&0<realworkshopVotes.length)for(const workshop of realworkshopVotes)prom.push(Steam_classPrivateMethodGet(this,_voteUpWorkshop,_voteUpWorkshop2).call(this,workshop)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.curators||!doTask&&!globalOptions.undoTask.steam.curators)scripts_echoLog({type:"globalOptionsSkip",text:"steam.curators"});else{var realCurators=this.getRealParams("curators",curatorLinks,doTask,_link$match8=>{return null===(_link$match8=_link$match8.match(/curator\/([\d]+)/))||void 0===_link$match8?void 0:_link$match8[1]}),realCuratorLikes=this.getRealParams("curatorLikes",curatorLikeLinks,doTask,_link$match9=>{return null===(_link$match9=_link$match9.match(/https?:\/\/store\.steampowered\.com\/(.*?)\/([^/?]+)/))||void 0===_link$match9?void 0:_link$match9.slice(1,3).join("/")});if(0<realCurators.length)for(const curator of realCurators)prom.push(Steam_classPrivateMethodGet(this,_toggleCurator,_toggleCurator2).call(this,curator,doTask)),await delay(1e3);if(0<realCuratorLikes.length)for(const curatorLike of realCuratorLikes)prom.push(Steam_classPrivateMethodGet(this,_toggleCuratorLike,_toggleCuratorLike2).call(this,curatorLike,doTask)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.announcements)scripts_echoLog({type:"globalOptionsSkip",text:"steam.announcements"});else{var realAnnouncements=this.getRealParams("announcements",announcementLinks,doTask,_link$match11=>{var _link$match10;return _link$match11.includes("store.steampowered.com")?null===(_link$match10=_link$match11.match(/store\.steampowered\.com\/news\/app\/([\d]+)\/view\/([\d]+)/))||void 0===_link$match10?void 0:_link$match10.slice(1,3).join("/"):null===(_link$match11=_link$match11.match(/steamcommunity\.com\/games\/([\d]+)\/announcements\/detail\/([\d]+)/))||void 0===_link$match11?void 0:_link$match11.slice(1,3).join("/")});if(doTask&&0<realAnnouncements.length)for(const id of realAnnouncements)prom.push(Steam_classPrivateMethodGet(this,_likeAnnouncement,_likeAnnouncement2).call(this,id)),await delay(1e3)}if(doTask&&!globalOptions.doTask.steam.licenses)scripts_echoLog({type:"globalOptionsSkip",text:"steam.licenses"});else if(doTask&&globalOptions.doTask.steam.licenses&&0<licenseLinks.length)for(const id of licenseLinks)prom.push(Steam_classPrivateMethodGet(this,_addLicense,_addLicense2).call(this,id)),await delay(1e3);if(doTask&&!globalOptions.doTask.steam.playtests)scripts_echoLog({type:"globalOptionsSkip",text:"steam.playtests"});else{var realPlaytests=this.getRealParams("playtests",playtestLinks,doTask,_link$match12=>{return null===(_link$match12=_link$match12.match(/app\/([\d]+)/))||void 0===_link$match12?void 0:_link$match12[1]});if(doTask&&globalOptions.doTask.steam.playtests&&0<realPlaytests.length)for(const id of realPlaytests)prom.push(Steam_classPrivateMethodGet(this,_requestPlayTestAccess,_requestPlayTestAccess2).call(this,id)),await delay(1e3)}return Promise.all(prom).then(async()=>("CN"!==Steam_classPrivateFieldGet(this,_area)&&(scripts_echoLog({}).warning(i18n("steamFinishNotice")),await Steam_classPrivateMethodGet(this,_changeArea,_changeArea2).call(this,"CN")),!0))}catch(error){return throwError_throwError(error,"Steam.toggle"),!1}}};function Giveawaysu_classPrivateMethodInitSpec(obj,privateSet){!function(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}(obj,privateSet),privateSet.add(obj)}function Giveawaysu_defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function Giveawaysu_classPrivateMethodGet(receiver,privateSet,fn){if(!privateSet.has(receiver))throw new TypeError("attempted to get private field on non-instance");return fn}const Giveawaysu_defaultTasks={steam:{groupLinks:[],wishlistLinks:[],curatorLinks:[],curatorLikeLinks:[],followLinks:[],forumLinks:[],announcementLinks:[],workshopVoteLinks:[],playtestLinks:[]},discord:{serverLinks:[]},instagram:{userLinks:[]},vk:{nameLinks:[]},twitch:{channelLinks:[]},reddit:{redditLinks:[]},youtube:{channelLinks:[],likeLinks:[]},twitter:{userLinks:[],retweetLinks:[]}};var _classifyTask=new WeakSet,_checkLogin=new WeakSet,_checkLeftKey=new WeakSet,_getGiveawayId=new WeakSet,_bind=new WeakSet,_initSocial=new WeakSet,_uniqueTasks=new WeakSet,_toggleTask=new WeakSet;async function _classifyTask2(){try{const logStatus=scripts_echoLog({text:i18n("getTasksInfo")}),pro=[];var tasks=$("#actions tr");$("div.bind-discord").is(":visible")&&$("div.bind-discord a")[0].click(),$("div.bind-twitch").is(":visible")&&$("div.bind-twitch a")[0].click();for(const task of tasks)pro.push(new Promise(resolve=>{const td=$(task).find('td:not(".hidden")');var colorfulTask=td.eq(1).find('a:not([data-trigger="link"])'),colorlessTask=td.eq(2).find('a:not([data-trigger="link"])');const taskDes=0<colorfulTask.length?colorfulTask:colorlessTask,taskIcon=td.eq(0).find("i").attr("class")||"",taskName=taskDes.text().trim();if(taskIcon.includes("ban")||/disable adblock/gi.test(taskName))return resolve(!0);getRedirectLink(taskDes.attr("href")).then(taskLink=>taskLink?(taskIcon.includes("steam")&&/join/gi.test(taskName)?this.undoneTasks.steam.groupLinks.push(taskLink):/like.*announcement/gi.test(taskName)?this.undoneTasks.steam.announcementLinks.push(taskLink):/(follow|subscribe).*curator/gim.test(taskName)&&/^https?:\/\/store\.steampowered\.com\/curator\//.test(taskLink)?this.undoneTasks.steam.curatorLinks.push(taskLink):taskIcon.includes("steam")&&/follow|subscribe/gim.test(taskName)?this.undoneTasks.steam.curatorLikeLinks.push(taskLink):/subscribe.*steam.*forum/gim.test(taskName)?this.undoneTasks.steam.forumLinks.push(taskLink):taskIcon.includes("thumbs-up")&&/^https?:\/\/steamcommunity\.com\/sharedfiles\/filedetails\/\?id=[\d]+/.test(taskLink)?this.undoneTasks.steam.workshopVoteLinks.push(taskLink):taskIcon.includes("plus")&&/request.*playtest/gim.test(taskName)?this.undoneTasks.steam.playtestLinks.push(taskLink):taskIcon.includes("discord")||/join.*discord/gim.test(taskName)?this.undoneTasks.discord.serverLinks.push(taskLink):taskIcon.includes("instagram")||/follow.*instagram/gim.test(taskName)?this.undoneTasks.instagram.userLinks.push(taskLink):taskIcon.includes("twitch")||/follow.*twitch.*channel/gim.test(taskName)?this.undoneTasks.twitch.channelLinks.push(taskLink):taskIcon.includes("reddit")||/subscribe.*subreddit/gim.test(taskName)||/follow.*reddit/gim.test(taskName)?this.undoneTasks.reddit.redditLinks.push(taskLink):/watch.*art/gim.test(taskName)?this.undoneTasks.steam.workshopVoteLinks.push(taskLink):/subscribe.*youtube.*channel/gim.test(taskName)?this.undoneTasks.youtube.channelLinks.push(taskLink):/(watch|like).*youtube.*video/gim.test(taskName)||(taskIcon.includes("youtube")||taskIcon.includes("thumbs-up"))&&/(watch|like).*video/gim.test(taskName)?this.undoneTasks.youtube.likeLinks.push(taskLink):taskIcon.includes("vk")||/join.*vk.*group/gim.test(taskName)?this.undoneTasks.vk.nameLinks.push(taskLink):/(on twitter)|(Follow.*on.*Facebook)/gim.test(taskName)||(/wishlist.*game|add.*wishlist/gim.test(taskName)&&this.undoneTasks.steam.wishlistLinks.push(taskLink),/follow.*button/gim.test(taskName)&&this.undoneTasks.steam.followLinks.push(taskLink)),void resolve(!0)):resolve(!1)).catch(error=>(throwError_throwError(error,"Giveawaysu.classifyTask->getRedirectLink"),!1))}));return await Promise.all(pro),logStatus.success(),this.undoneTasks=Giveawaysu_classPrivateMethodGet(this,_uniqueTasks,_uniqueTasks2).call(this,this.undoneTasks),!0}catch(error){return throwError_throwError(error,"Giveawaysu.classifyTask"),!1}}function _checkLogin2(){try{return globalOptions.other.checkLogin?(0<$("a.steam-login").length&&window.open("/steam/redirect","_self"),!0):!0}catch(error){return throwError_throwError(error,"Giveawaysu.checkLogin"),!1}}async function _checkLeftKey2(){try{return globalOptions.other.checkLeftKey?(0<$(".giveaway-ended").length&&await external_Swal_default().fire({icon:"warning",title:i18n("notice"),text:i18n("noKeysLeft"),confirmButtonText:i18n("confirm"),cancelButtonText:i18n("cancel"),showCancelButton:!0}).then(value=>{value=value.value;value&&window.close()}),!0):!0}catch(error){return throwError_throwError(error,"Giveawaysu.checkLeftKey"),!1}}function _getGiveawayId2(){var giveawayId=null===(giveawayId=window.location.href.match(/\/view\/([\d]+)/))||void 0===giveawayId?void 0:giveawayId[1];return giveawayId?(this.giveawayId=giveawayId,!0):(scripts_echoLog({text:i18n("getFailed","GiveawayId")}),!1)}async function _bind2(name,init){try{return{name:name,result:await init}}catch(error){return throwError_throwError(error,"GiveawaySu.bind"),{name:name,result:!1}}}async function _initSocial2(){try{const pro=[],tasks=this.undoneTasks;var steamLength,steamCommunityLength;return tasks.discord&&0<Object.values(tasks.discord).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.discord&&(this.social.discord=new social_Discord,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"discord",this.social.discord.init()))),tasks.instagram&&0<Object.values(tasks.instagram).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.instagram&&(this.social.instagram=new social_Instagram,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"instagram",this.social.instagram.init()))),tasks.reddit&&0<Object.values(tasks.reddit).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.reddit&&(this.social.reddit=new social_Reddit,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"reddit",this.social.reddit.init()))),tasks.twitch&&0<Object.values(tasks.twitch).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.twitch&&(this.social.twitch=new social_Twitch,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"twitch",this.social.twitch.init()))),tasks.vk&&0<Object.values(tasks.vk).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.vk&&(this.social.vk=new social_Vk,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"vk",this.social.vk.init()))),tasks.youtube&&0<Object.values(tasks.youtube).reduce((total,arr)=>[...total,...arr]).length&&!this.socialInitialized.youtube&&(this.social.youtube=new Youtube,pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"youtube",this.social.youtube.init()))),!tasks.steam||0<(steamLength=Object.values(tasks.steam).reduce((total,arr)=>[...total,...arr]).length)&&(this.social.steam||(this.social.steam=new social_Steam),0<steamLength-(steamCommunityLength=Object.keys(tasks.steam).map(type=>{var _tasks$steam,_tasks$steam$type;return["groupLinks","forumLinks","workshopLinks","workshopVoteLinks"].includes(type)&&(null===(_tasks$steam=tasks.steam)||void 0===_tasks$steam||null===(_tasks$steam$type=_tasks$steam[type])||void 0===_tasks$steam$type?void 0:_tasks$steam$type.length)||0}).reduce((total,number)=>total+number,0))&&!this.socialInitialized.steamStore&&pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"steamStore",this.social.steam.init("store"))),0<steamCommunityLength&&!this.socialInitialized.steamCommunity&&pro.push(Giveawaysu_classPrivateMethodGet(this,_bind,_bind2).call(this,"steamCommunity",this.social.steam.init("community")))),await Promise.all(pro).then(result=>{let checked=!0;for(const data of result)data.result?this.socialInitialized[data.name]=data.result:checked=!1;return checked})}catch(error){return throwError_throwError(error,"GiveawaySu.initSocial"),!1}}function _uniqueTasks2(allTasks){const result={};for(var[social,types]of Object.entries(allTasks)){result[social]={};for(var[type,tasks]of Object.entries(types))result[social][type]=unique(tasks)}return result}async function _toggleTask2(){try{if(!this.initialized&&!this.init())return!1;if(!await Giveawaysu_classPrivateMethodGet(this,_classifyTask,_classifyTask2).call(this))return!1;if(!await Giveawaysu_classPrivateMethodGet(this,_initSocial,_initSocial2).call(this))return!1;const pro=[];var tasks=this.undoneTasks;return"skip"!==this.socialInitialized.discord&&this.social.discord&&pro.push(this.social.discord.toggle({doTask:!0,...tasks.discord})),this.social.instagram&&pro.push(this.social.instagram.toggle({doTask:!0,...tasks.instagram})),this.social.reddit&&pro.push(this.social.reddit.toggle({doTask:!0,...tasks.reddit})),this.social.twitch&&pro.push(this.social.twitch.toggle({doTask:!0,...tasks.twitch})),this.social.vk&&pro.push(this.social.vk.toggle({doTask:!0,...tasks.vk})),this.social.youtube&&pro.push(this.social.youtube.toggle({doTask:!0,...tasks.youtube})),this.social.steam&&pro.push(this.social.steam.toggle({doTask:!0,...tasks.steam})),await Promise.all(pro),scripts_echoLog({}).success(i18n("allTasksComplete")),!0}catch(error){return throwError_throwError(error,"GiveawaySu.toggleTask"),!1}}const Giveawaysu=class{constructor(){Giveawaysu_classPrivateMethodInitSpec(this,_toggleTask),Giveawaysu_classPrivateMethodInitSpec(this,_uniqueTasks),Giveawaysu_classPrivateMethodInitSpec(this,_initSocial),Giveawaysu_classPrivateMethodInitSpec(this,_bind),Giveawaysu_classPrivateMethodInitSpec(this,_getGiveawayId),Giveawaysu_classPrivateMethodInitSpec(this,_checkLeftKey),Giveawaysu_classPrivateMethodInitSpec(this,_checkLogin),Giveawaysu_classPrivateMethodInitSpec(this,_classifyTask),Giveawaysu_defineProperty(this,"undoneTasks",Giveawaysu_defaultTasks),Giveawaysu_defineProperty(this,"giveawayId",void 0),Giveawaysu_defineProperty(this,"socialInitialized",{discord:!1,instagram:!1,reddit:!1,twitch:!1,vk:!1,youtube:!1,steamStore:!1,steamCommunity:!1,twitter:!0}),Giveawaysu_defineProperty(this,"initialized",!1),Giveawaysu_defineProperty(this,"social",{})}static test(){return/^https?:\/\/giveaway\.su\/giveaway\/view\/[\d]+/.test(window.location.href)}async after(){try{Giveawaysu_classPrivateMethodGet(this,_checkLogin,_checkLogin2).call(this)||scripts_echoLog({}).warning(i18n("checkLoginFailed")),await Giveawaysu_classPrivateMethodGet(this,_checkLeftKey,_checkLeftKey2).call(this)||scripts_echoLog({}).warning(i18n("checkLeftKeyFailed"))}catch(error){throwError_throwError(error,"Giveawaysu.after")}}init(){try{const logStatus=scripts_echoLog({text:i18n("initing")});return 0<$("a.steam-login").length?(window.open("/steam/redirect","_self"),logStatus.warning(i18n("needLogin")),!1):!!Giveawaysu_classPrivateMethodGet(this,_getGiveawayId,_getGiveawayId2).call(this)&&(this.initialized=!0,logStatus.success(),!0)}catch(error){return throwError_throwError(error,"Giveawaysu.init"),!1}}async doTask(){try{return $("#getKey").on("click",()=>{$("#auto-task-info-div").remove(),$(window.STYLE).remove(),$("#getKey").off()}),await Giveawaysu_classPrivateMethodGet(this,_toggleTask,_toggleTask2).call(this)}catch(error){return throwError_throwError(error,"GiveawaySu.doTask"),!1}}async verifyTask(){try{var href;for(const task of $("#actions tr")){const $task=$(task);if("adjs"!==$task.attr("data-action-id")){const icon=$task.find("i.glyphicon-refresh"),button=icon.parent();"A"!==button.prop("tagName")?icon.hasClass("spin")||icon.hasClass("glyphicon-ok")||(button[0].click(),await delay(1e3)):(href=button.attr("href"),button.attr("href","javascript:void(0);").attr("target","_self")[0].click(),button.attr("href",href))}}}catch(error){throwError_throwError(error,"GiveawaySu.verifyTask")}}};var _LocalStorage$getItem2,for_giveawaysu=__webpack_require__(821);if(window.STYLE=GM_addStyle(for_giveawaysu.Z+GM_getResourceText("style")),"discord.com"===window.location.hostname){const LocalStorage=window.localStorage;if("#auth"===window.location.hash){window.localStorage.removeItem=()=>!0;var discordAuth=null===LocalStorage||void 0===LocalStorage||null===(discordAuth=LocalStorage.getItem("token"))||void 0===discordAuth?void 0:discordAuth.replace(/^"|"$/g,"");discordAuth&&0<discordAuth.length?(GM_setValue("discordAuth",{auth:discordAuth}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire({text:i18n("getDiscordAuthFailed"),icon:"error"})}else{const discordAuth=null===LocalStorage||void 0===LocalStorage||null===(_LocalStorage$getItem2=LocalStorage.getItem("token"))||void 0===_LocalStorage$getItem2?void 0:_LocalStorage$getItem2.replace(/^"|"$/g,"");discordAuth&&0<discordAuth.length&&GM_setValue("discordAuth",{auth:discordAuth})}}$(async()=>{var _commonOptions,_commonOptions$header;if("www.twitch.tv"===window.location.hostname&&"#auth"===window.location.hash&&(_commonOptions=external_Cookies_namespaceObject.get("auth-token"),!!external_Cookies_namespaceObject.get("login")?(GM_setValue("twitchAuth",{authToken:_commonOptions,clientId:null===(_commonOptions=commonOptions)||void 0===_commonOptions||null===(_commonOptions$header=_commonOptions.headers)||void 0===_commonOptions$header?void 0:_commonOptions$header["Client-ID"]}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))),"twitter.com"===window.location.hostname&&"#auth"===window.location.hash){var PAPISID=external_Cookies_namespaceObject.get("ct0");const isLogin=!!external_Cookies_namespaceObject.get("twid");isLogin&&PAPISID?(GM_setValue("twitterAuth",{ct0:PAPISID}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))}if("www.youtube.com"===window.location.hostname&&"#auth"===window.location.hash&&((PAPISID=external_Cookies_namespaceObject.get("__Secure-3PAPISID"))?(GM_setValue("youtubeAuth",{PAPISID:PAPISID}),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))):external_Swal_default().fire("",i18n("needLogin"))),"www.reddit.com"===window.location.hostname&&("#auth"===window.location.hash||"#auth"===GM_getValue("redditAuth"))){const betaButton=$("#redesign-beta-optin-btn");if(0<betaButton.length)return GM_setValue("redditAuth","#auth"),betaButton[0].click();GM_setValue("redditAuth",null),window.close(),external_Swal_default().fire("",i18n("closePageNotice"))}if(Giveawaysu.test()){const website=new Giveawaysu;$("body").append(`<div id="auto-task-info-div" style="position: fixed;bottom: 10px;right: 10px;width: 300px;max-width: 60%;max-height: 600px;color: #000;background-color: #fff;padding-left: 5px;z-index: 999999999 !important;"><h2 style="text-align: center;"><button id="auto-do-task" class="btn btn-success">${i18n("doTask")}</button><button id="auto-verify-task" class="btn btn-success">${i18n("verifyTask")}</button></h2><div id="auto-task-info" style="overflow-y: auto;max-height: 500px;"></div></div>`),await website.after(),$("#auto-do-task").on("click",()=>{website.doTask()}),$("#auto-verify-task").on("click",()=>{website.verifyTask()}),console.log("%c%s","color:#1bbe1a","Auto Task GS特供脚本初始化完成！")}})}()}();